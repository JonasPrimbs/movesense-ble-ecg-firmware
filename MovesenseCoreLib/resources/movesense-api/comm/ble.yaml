swagger: '2.0'

info:
  version: NA
  title: Bluetooth - Movesense-API
  description: |
    API for managing bluetooth.
  x-api-type: public
  x-api-required: false

paths:

  /Comm/Ble/Addr:
    get:
      description: |
        Read the local BLE MAC address.
      responses:
        200:
          description: Operation completed successfully.
          schema:
            type: string
            example: 00-14-22-01-23-45
            minLength: 17
            maxLength: 17

  /Comm/Ble/Adv:
    post:
      description: |
        Start advertising.
      parameters:
        - name: data
          in: body
          description: Advertising targets (broadcast or directed)
          required: false
          schema:
            $ref: '#/definitions/AdvParams'
      responses:
        201:
          description: Operation completed successfully
        409:
          description: Already advertising

    get:
      description: |
        Get the advertising state.
      responses:
        200:
          description: Operation completed successfully
          schema:
            $ref: '#/definitions/AdvState'

    delete:
      description: |
        Stop advertising.
      responses:
        200:
          description: Operation completed successfully

  /Comm/Ble/Adv/Settings:
    get:
      description: |
        Read the current advertisement settings. MAY return the AdvSettings without the AdvPacket & ScanRespPacket properties.
      responses:
        200:
          description: Operation completed successfully.
          schema:
            $ref: '#/definitions/AdvSettings'

    put:
      description: |
        Define new advertisement settings. Can be changed while advertising which resets the timeout.
        Note: these settings are restored to default after reset
        Note: if AdvPacket or ScanRespPacket are not set, uses previously set or default
      parameters:
        - name: newSettings
          in: body
          required: true
          schema:
            $ref: '#/definitions/AdvSettings'
      responses:
        200:
          description: Operation completed successfully.
        400:
          description: Error in parameters

  /Comm/Ble/Peers:
    get:
      description: |
        Read the list of connected BLE peers
      responses:
        200:
          description: Operation completed successfully.
          schema:
            $ref: '#/definitions/PeerList'

  /Comm/Ble/Peers/Subscription:
    post:
      description: |
        Subscribe to changes in the connected BLE peers.
      responses:
        200:
          description: |
            Subscription successful with current state. Changes in BLE peer connection state
            will be delivered.
        x-notification:
          description: Current operation mode after change
          schema:
            $ref: '#/definitions/PeerChange'
    delete:
      description: |
        Unsubscribe from changes in the connected BLE peers.
      responses:
        200:
          description: Unsubscribe was successfull

  /Comm/Ble/Peers/{ConnHandle}:
    parameters:
     - $ref: '#/parameters/ConnHandle'
    delete:
      description: |
        Disconnect the connection specified by "ConnHandle"
      responses:
        200:
          description: Operation completed successfully.

  /Comm/Ble/Scan/Subscription:
    post:
      description: |
        Subscribe to receive scan results
      parameters:
        - name: Params
          in: body
          description: |
            Parameters for scan. If not provided, default scan is performed.
            For "Movesense sensor" the default values are active=true, interval=10000ms, window=500ms, timeout=0
          required: false
          schema:
            $ref: '#/definitions/ScanParams'

      responses:
        200:
          description: |
            Subscription successful with current state. Changes in BLE peer connection state
            will be delivered.
        x-notification:
          description: Current operation mode after change
          schema:
            $ref: '#/definitions/ScanResult'
    delete:
      description: |
        Unsubscribe from changes in the connected BLE peers.
      responses:
        200:
          description: Unsubscribe was successfull


parameters:
  ConnHandle:
    name: ConnHandle
    in: path
    required: true
    type: integer
    format: int32

definitions:
  AdvParams:
    type: object
    properties:
      PeerAddr:
        description: Address of the peer in directed advertising. If not set, do broadcast advertising.
        type: string
        example: 00-14-22-01-23-45
        minLength: 17
        maxLength: 17

  AdvState:
    type: object
    required:
    - isAdvertising
    properties:
      isAdvertising:
        description: True if advertising is currently enabled.
        type: boolean
      PeerAddr:
        description: Address of the peer in directed advertising. If not set, broadcast advertising active.
        type: string
        example: 00-14-22-01-23-45
        minLength: 17
        maxLength: 17

  AdvSettings:
    type: object
    required:
    - Interval
    - Timeout
    properties:
      AdvPacket:
        description: Advertising packet content as byte array. If not set, uses previously set or default.
          See e.g. https://www.pubnub.com/blog/2015-04-14-building-android-beacon-android-ibeacon-tutorial-overview/
        type: array
        items:
          type: integer
          format: uint8
        minLength: 0
        maxLength: 31
      ScanRespPacket:
        description: Scan Response packet content as byte array. If not set, uses previously set or default.
        type: array
        items:
          type: integer
          format: uint8
        minLength: 0
        maxLength: 31
      Interval:
        description: Advertising interval between 32 and 16384 in 0.625 ms units
        type: integer
        format: uint16
        minimum: 32
        maximum: 16384
      Timeout:
        description: Advertising timeout in seconds. 0 == advertise forever
        type: integer
        format: uint16
        minimum: 0
        maximum: 32767
        x-unit: s

  PeerEntry:
    required:
    - Address
    properties:
      Address:
        description: Address of the peer
        type: string
        example: 00-14-22-01-23-45
        minLength: 17
        maxLength: 17
      Name:
        description: Name of the peer
        type: string
        example: "Movesense 1234567890"
      handle:
        description: handle of the peer connection.
        type: integer
        format: uint32

  PeerList:
    required:
    - ConnectedPeers
    properties:
      ConnectedPeers:
        type: array
        items:
          $ref: '#/definitions/PeerEntry'

  PeerChange:
    required:
    - Peer
    - State
    properties:
      Peer:
        $ref: '#/definitions/PeerEntry'
      State:
        $ref: '#/definitions/PeerState'

  PeerState:
    description: |
      State of the BLE peer.
    type: integer
    format: uint8
    enum:
      - name: 'DISCONNECTED'
        description: Peer is disconnected.
        value: 0
      - name: 'CONNECTED'
        description: Peer is connected.
        value: 1

  ScanParams:
    required:
    - active
    - timeout
    - window
    - interval
    properties:
      active:
        description: |
          Whether to do an active scan. Active scan sends ScanRequest packet to discovered peers 
          and receives ScanResponse packets. Passive scan only listens to Advertise packets.
        type: boolean
      timeout:
        description: |
          Scan timeout between 0x0001 and 0xFFFF in seconds, 0x0000 disables timeout.
        type: integer
        format: uint16
      window:
        description: |
          Scan window between 0x0004 and 0x4000 in 0.625 ms units (2.5 ms to 10.24 s).
          Scan window is the time that scan will listen for advertise packets until switching radio off to save power
        type: integer
        format: uint16
      interval:
        description: |
          Scan interval between 0x0004 and 0x4000 in 0.625 ms units (2.5 ms to 10.24 s).
          Scan interval is the time spent in radio off between scan windows.
        type: integer
        format: uint16

  ScanResult:
    required:
    - address
    - isScanResponse
    - dataPacket
    properties:
      address:
        description: Address of the peer
        type: string
        example: 00-14-22-01-23-45
        minLength: 17
        maxLength: 17
      name:
        description: Name of the peer if found in the packet
        type: string
        example: Movesense 123456789
      isScanResponse:
        description: What kind of scan packet this is, Advertise [false] or ScanResponse [true]
        type: boolean
      dataPacket:
        description: Advertising or ScanResponse packet content as byte array.
          See e.g. https://www.pubnub.com/blog/2015-04-14-building-android-beacon-android-ibeacon-tutorial-overview/
        type: array
        items:
          type: integer
          format: uint8
        minLength: 0
        maxLength: 31
