swagger: '2.0'

info:
  version: NA
  title: Logbook - Movesense-API
  description: |
    This file defines API for logbook.
  x-api-type: public
  x-api-required: false

paths:

  /Mem/Logbook/Logging:
    get:
      description: |
        Returns number of current amount of subscribers.
      responses:
        200:
          description: Amount of subscribers
          schema:
            type: integer
            format: uint16

  /Mem/Logbook/Logging/Subscription:
    post:
      description: |
        Subscribes the client and opens new log file if client is the first subscriber.
      responses:
        200:
          description: Operation completed successfully
        423:
          description: Not opening new log files when device shutdown is initiated.
        507:
          description: Not enough free disk space.
        500:
          description: Creating new log files failed.
        x-notification:
          description: |
           Event notification.
          schema:
            type: integer
            format: uint16
    delete:
      description: |
        Unsubscribes the client and closes open log file if amount of subscribers is zero.
      responses:
        200:
          description: Operation completed successfully

  /Mem/Logbook/IsOpen:
    get:
      description: |
        Is log open
      responses:
        200:
          description:
          schema:
            type: boolean

  /Mem/Logbook/IsOpen/Subscription:
    post:
      description: |
        Is log open
      responses:
        200:
          description: Operation completed successfully
          schema:
            type: boolean
        x-notification:
          description: |
           Event notification.
          schema:
            type: boolean
    delete:
      description: |
        Unsubscribes
      responses:
        200:
          description: Operation completed successfully

  /Mem/Logbook/IsFull:
    get:
      description: |
        Is periodic logging stopped because not enough log space left
      responses:
        200:
          description:
          schema:
            type: boolean

  /Mem/Logbook/IsFull/Subscription:
    post:
      description: |
        Is periodic logging stopped because not enough log space left
      responses:
        200:
          description: Operation completed successfully
        x-notification:
          description: |
           Event notification.
          schema:
            type: boolean
    delete:
      description: |
        Unsubscribes
      responses:
        200:
          description: Operation completed successfully

  /Mem/Logbook/Entries:
    get:
      description: |
        List Log contents.
      parameters:
        - name: StartAfterId
          in: query
          description: Log ID after which the list of the items starts from.
            If the StartAfter is null or empty,
            the list of the items starts from beginning.
          required: false
          type: integer
          format: uint32
      responses:
        100:
          description: Operation completed partially.
            Not all log entries fit in the list, please ask again with StartAfterId parameter.
          schema:
             $ref: '#/definitions/LogEntries'
        200:
          description: |
            Zero or more log entries describing the log entry contents.
            Zero number of log entries indicates end of log iteration.
          schema:
             $ref: '#/definitions/LogEntries'
        404:
          description: |
            StartAfterId was not found in logs
    post:
      description: |
        Create a new log entry resource (increment log Id). Returns the new log Id
        Note: actual time that entry appears in /Logbook/Entries depends on the implementation (e.g. Movesense sensor it only happens when log has data)
      responses:
        201:
          description: Log entry created successfully
          schema:
            type: integer
            format: uint32
    delete:
      description: |
        Deletes the content of the whole Logbook.
      responses:
        200:
          description: Operation completed successfully

  /Mem/Logbook/byId/{LogId}/Descriptors:
    get:
      description: |
        Read training log descriptors and stream the descriptor file.
      parameters:
        -
          name: offset
          in: query
          description: |
            The offset of the logbook data file where to continue reading.
          required: false
          type: integer
          format: int32
      responses:
        100:
          description: |
            Partial operation completed successfully.
            New identical request may be sent to continue.
            Returns a byte stream value type.
          schema:
            $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/ByteStream'
        200:
          description: |
            Operation completed successfully.
            Returns a byte stream value type.
          schema:
            $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/ByteStream'
    parameters:
       - $ref: '#/parameters/LogId'

  /Mem/Logbook/byId/{LogId}/Data:
    get:
      description: |
        Read SBEM data from a log entry and stream it. The SBEM data
        may be either be uncompressed or compressed with Heatshrink.
        Uncompressed data can be detected by FOURCC 'SBEM' at beginning of data.
      parameters:
        -
          name: offset
          in: query
          description: |
            The offset of the logbook data file where to continue reading.
          required: false
          type: integer
          format: int32
      responses:
        100:
          description: |
            Partial operation completed successfully.
            New identical request may be sent to continue.
            Returns a byte stream value type.
          schema:
            $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/ByteStream'
        200:
          description: |
            Operation completed successfully.
            Returns a byte stream value type.
          schema:
            $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/ByteStream'
        404:
          description: Referenced log not found in LogBook.

    parameters:
       - $ref: '#/parameters/LogId'

  /Mem/Logbook/Log/{LogIndex}/Remove:
    put:
      description: |
        Remove given Logbook entry.
      responses:
        200:
          description: Operation completed successfully
        416:
          description: Bad request. LogIndex not in range.
    parameters:
      - $ref: '#/parameters/LogIndex'

definitions:
  LogEntries:
    required:
      - elements
    properties:
      elements:
        description: |
          Zero or more log entries describing log contents.
          Zero entries are received if log iteration has completed.
        type: array
        items:
          $ref: '#/definitions/LogEntry'

  LogEntry:
    required:
      - Id
      - ModificationTimestamp
    properties:
      Id:
        description: Id of the log entry.
        type: integer
        format: uint32
      ModificationTimestamp:
        description: |
          Timestamp of last modification to entry in seconds after 0:00
          Jan 1st 1970 (UTC) without leap seconds.
        type: integer
        format: uint32
      Size:
        type: integer
        format: uint64

parameters:
  LogId:
    name: LogId
    in: path
    required: true
    type: integer
    format: int32

  LogIndex:
    name: LogIndex
    in: path
    required: true
    type: integer
    format: int32
