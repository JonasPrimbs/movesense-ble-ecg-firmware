swagger: '2.0'

info:
  version: NA
  title: Manufacturing - Movesense-API
  description: |
    This file defines API for writing manufacturing time data into the device
    non-volatile memory as well as reading it during normal operation.
  x-api-type: private
  x-api-required: false

paths:

  /Misc/Manufacturing/ProductData:
    post:
      description: |
        Writing common product data into non-volatile memory.
        This can only be done once.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProductData'
      responses:
        201:
          description: Data created successfully
        400:
          description: Data malformed - one or more product data has wrong format or size.
        500:
          description: Not allowed - data already exists
    get:
      description: |
        Read product related manufacturing data from the non-volatile memory.
      responses:
        200:
          description: Data read successfully
          schema:
            $ref: '#/definitions/ProductData'
        500:
          description: Data does not exist
    delete:
      description: |
        Delete the existing product data.
        Note: this can only be done in Factory Calibration Mode
      responses:
        200:
          description: Product data deleted successfully
        409:
          description: No product data
        500:
          description: Failed. This operation is permitted only in Factory Calibration Mode.

  /Misc/Manufacturing/CalibrationData:
    post:
      description: |
        Writing manufacturing time calculated calibration data. Note: this can be done in one or multiple steps 
        (e.g. for each sensor). POST used because PATCH not yet supported.
        
        This is used in both cases:
        1. Individual calibration (device measures & calculates & writes the data itself - see /Misc/Calibration )
        2. Patch calibration data (ready made data is written by the external calibrator)
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalibrationData'
      responses:
        201:
          description: Data created successfully
        500:
          description: Not allowed - data already exists (can only be programmed once)
    get:
      description: |
        Read manufacturing time created calibration data from the non-volatile memory.
      responses:
        200:
          description: Data read successfully
          schema:
            $ref: '#/definitions/CalibrationData'
        500:
          description: Data does not exist
    delete:
      description: |
        Delete the existing calibration data.
        Note: this can only be done in Factory Calibration Mode
      responses:
        200:
          description: Calibration data deleted successfully
        409:
          description: No calibration data
        500:
          description: Failed. This operation is permitted only in Factory Calibration Mode.

  /Misc/Manufacturing/BatteryCorrection:
    post:
      description: |
        Compensation data for the battery effect of the magnetometer. 
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/CalibrationMatrix'
      responses:
        201:
          description: Data written successfully
        500:
          description: Not allowed - data already exists (can only be programmed once)
    get:
      description: |
        Read battery effect correction data.
      responses:
        200:
          description: Data read successfully
          schema:
            $ref: '#/definitions/CalibrationMatrix'
        500:
          description: Data does not exist
    delete:
      description: |
        Delete the existing battery effect correction data. 
        Note: this can only be done in Factory Calibration Mode
      responses:
        200:
          description: Calibration data deleted successfully
        409:
          description: No calibration data
        500:
          description: Failed. This operation is permitted only in Factory Calibration Mode.

  /Misc/Manufacturing/Step:
    post:
      description: |
        Internally kept manufacturing process related steps / state.
      parameters:
        - name: step
          description: |
            Manufacturing step enumeration that was performed.
          in: body
          required: true
          schema:
            type: integer
            format: uint8
            minimum: 0
            maximum: 31
      responses:
        200:
          description: Step recorder successfully
        409:
          description: Step already recorded
        500:
          description: Not permitted
    get:
      description: |
        Get the manufacturing steps that are already carried out
      responses:
        200:
          description:  |
            Array of manufacturing steps performed for the device
          schema:
            $ref: '#/definitions/StepsDone'
        500:
          description: General error
    delete:
      description: |
        Delete a specific step. This is needed in case certain step needs to be redo.
        Note: this can only be done in Factory Calibration Mode
      parameters:
        - name: step
          description: |
            Step to be deleted
          in: body
          required: true
          schema:
            type: integer
            format: uint8
            minimum: 0
            maximum: 31
      responses:
        200:
          description: Step deleted successfully
        409:
          description: Step not found
        500:
          description: Failed. This operation is permitted only in Factory Calibration Mode.

definitions:

  ProductData:
    required:
      - manufacturerName
      - productName
      - variant
      - hwCompatibilityId
      - serial
      - pcbaSerial
      - hw
    properties:
      manufacturerName:
        description: Original manufacturer of the device
        type: string
        maxLength: 32
        example: Suunto
      productName:
        description: Product name from PLM/Plasma
        type: string
        maxLength: 19
        example: Movesense Sensor
      variant:
        description: NG SW variant name
        type: string
        maxLength: 9
        example: Avocado
      design:
        description: Product design from PLM/Plasma
        type: string
        maxLength: 32
        example: black
      hwCompatibilityId:
        description: Identifier defining which SW firmware can be installed on the device.
          This ID together with the variant name is used to check/fetch the latest FW.
          Different PCBAs which can run the same Firmware version have the same HwCompatibilityId.
        type: string
        maxLength: 2
        example: A5
      serial:
        description: Globally unique serial number
        type: string
        minLength: 12
        maxLength: 12
        example: 155110123456
      pcbaSerial:
        type: string
        maxLength: 34
        example: 01234112345678901234567894444N2YYW
      hw:
        description: Identifier for the HW configuration. Everytime there are changes in componets/PCB, this ID is updated.
          In Suunto case, the format is varying number of <letter, number> pairs.
        type: string
        maxLength: 16
        example: "1740G1"
      addressInfo:
        description: Array of structs containing pairs of address type identifier and address.
        type: array
        items:
          $ref: 'types.yaml#/definitions/AddressInfo'

  CalibrationData:
    properties:
      acc_matrix:
        $ref: '#/definitions/CalibrationMatrix'
      acc_bias:
        $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/FloatVector3D'
      gyro_matrix:
        $ref: '#/definitions/CalibrationMatrix'
      magn_matrix:
        $ref: '#/definitions/CalibrationMatrix'
      magn_bias:
        $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/FloatVector3D'

  CalibrationMatrix:
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: 'http://localhost:9000/builtinTypes.yaml#/definitions/FloatVector3D'
        minItems: 3
        maxItems: 3

  StepsDone:
    required:
      - steps
    properties:
      steps:
        type: array
        minItems: 0
        maxItems: 31
        items:
          $ref: '#/definitions/Step'
  Step:
    required:
      - stepNum
    properties:
      stepNum:
        type: integer
        format: uint8
        minimum: 0
        maximum: 31
