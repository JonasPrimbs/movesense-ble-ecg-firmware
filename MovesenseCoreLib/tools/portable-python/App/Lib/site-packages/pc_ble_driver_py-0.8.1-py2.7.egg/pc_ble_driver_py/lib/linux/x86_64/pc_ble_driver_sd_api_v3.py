# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pc_ble_driver_sd_api_v3', [dirname(__file__)])
        except ImportError:
            import _pc_ble_driver_sd_api_v3
            return _pc_ble_driver_sd_api_v3
        if fp is not None:
            try:
                _mod = imp.load_module('_pc_ble_driver_sd_api_v3', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pc_ble_driver_sd_api_v3 = swig_import_helper()
    del swig_import_helper
else:
    import _pc_ble_driver_sd_api_v3
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class adapter_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, adapter_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, adapter_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["internal"] = _pc_ble_driver_sd_api_v3.adapter_t_internal_set
    __swig_getmethods__["internal"] = _pc_ble_driver_sd_api_v3.adapter_t_internal_get
    if _newclass:internal = _swig_property(_pc_ble_driver_sd_api_v3.adapter_t_internal_get, _pc_ble_driver_sd_api_v3.adapter_t_internal_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_adapter_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_adapter_t
    __del__ = lambda self : None;
adapter_t_swigregister = _pc_ble_driver_sd_api_v3.adapter_t_swigregister
adapter_t_swigregister(adapter_t)

class transport_layer_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, transport_layer_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, transport_layer_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["internal"] = _pc_ble_driver_sd_api_v3.transport_layer_t_internal_set
    __swig_getmethods__["internal"] = _pc_ble_driver_sd_api_v3.transport_layer_t_internal_get
    if _newclass:internal = _swig_property(_pc_ble_driver_sd_api_v3.transport_layer_t_internal_get, _pc_ble_driver_sd_api_v3.transport_layer_t_internal_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_transport_layer_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_transport_layer_t
    __del__ = lambda self : None;
transport_layer_t_swigregister = _pc_ble_driver_sd_api_v3.transport_layer_t_swigregister
transport_layer_t_swigregister(transport_layer_t)

class data_link_layer_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, data_link_layer_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, data_link_layer_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["internal"] = _pc_ble_driver_sd_api_v3.data_link_layer_t_internal_set
    __swig_getmethods__["internal"] = _pc_ble_driver_sd_api_v3.data_link_layer_t_internal_get
    if _newclass:internal = _swig_property(_pc_ble_driver_sd_api_v3.data_link_layer_t_internal_get, _pc_ble_driver_sd_api_v3.data_link_layer_t_internal_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_data_link_layer_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_data_link_layer_t
    __del__ = lambda self : None;
data_link_layer_t_swigregister = _pc_ble_driver_sd_api_v3.data_link_layer_t_swigregister
data_link_layer_t_swigregister(data_link_layer_t)

class physical_layer_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, physical_layer_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, physical_layer_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["internal"] = _pc_ble_driver_sd_api_v3.physical_layer_t_internal_set
    __swig_getmethods__["internal"] = _pc_ble_driver_sd_api_v3.physical_layer_t_internal_get
    if _newclass:internal = _swig_property(_pc_ble_driver_sd_api_v3.physical_layer_t_internal_get, _pc_ble_driver_sd_api_v3.physical_layer_t_internal_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_physical_layer_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_physical_layer_t
    __del__ = lambda self : None;
physical_layer_t_swigregister = _pc_ble_driver_sd_api_v3.physical_layer_t_swigregister
physical_layer_t_swigregister(physical_layer_t)

SD_BLE_ENABLE = _pc_ble_driver_sd_api_v3.SD_BLE_ENABLE
SD_BLE_EVT_GET = _pc_ble_driver_sd_api_v3.SD_BLE_EVT_GET
SD_BLE_TX_PACKET_COUNT_GET = _pc_ble_driver_sd_api_v3.SD_BLE_TX_PACKET_COUNT_GET
SD_BLE_UUID_VS_ADD = _pc_ble_driver_sd_api_v3.SD_BLE_UUID_VS_ADD
SD_BLE_UUID_DECODE = _pc_ble_driver_sd_api_v3.SD_BLE_UUID_DECODE
SD_BLE_UUID_ENCODE = _pc_ble_driver_sd_api_v3.SD_BLE_UUID_ENCODE
SD_BLE_VERSION_GET = _pc_ble_driver_sd_api_v3.SD_BLE_VERSION_GET
SD_BLE_USER_MEM_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_USER_MEM_REPLY
SD_BLE_OPT_SET = _pc_ble_driver_sd_api_v3.SD_BLE_OPT_SET
SD_BLE_OPT_GET = _pc_ble_driver_sd_api_v3.SD_BLE_OPT_GET
BLE_EVT_TX_COMPLETE = _pc_ble_driver_sd_api_v3.BLE_EVT_TX_COMPLETE
BLE_EVT_USER_MEM_REQUEST = _pc_ble_driver_sd_api_v3.BLE_EVT_USER_MEM_REQUEST
BLE_EVT_USER_MEM_RELEASE = _pc_ble_driver_sd_api_v3.BLE_EVT_USER_MEM_RELEASE
BLE_EVT_DATA_LENGTH_CHANGED = _pc_ble_driver_sd_api_v3.BLE_EVT_DATA_LENGTH_CHANGED
BLE_CONN_BW_INVALID = _pc_ble_driver_sd_api_v3.BLE_CONN_BW_INVALID
BLE_CONN_BW_LOW = _pc_ble_driver_sd_api_v3.BLE_CONN_BW_LOW
BLE_CONN_BW_MID = _pc_ble_driver_sd_api_v3.BLE_CONN_BW_MID
BLE_CONN_BW_HIGH = _pc_ble_driver_sd_api_v3.BLE_CONN_BW_HIGH
BLE_COMMON_OPT_CONN_BW = _pc_ble_driver_sd_api_v3.BLE_COMMON_OPT_CONN_BW
BLE_COMMON_OPT_PA_LNA = _pc_ble_driver_sd_api_v3.BLE_COMMON_OPT_PA_LNA
BLE_COMMON_OPT_CONN_EVT_EXT = _pc_ble_driver_sd_api_v3.BLE_COMMON_OPT_CONN_EVT_EXT
BLE_EVTS_PTR_ALIGNMENT = _pc_ble_driver_sd_api_v3.BLE_EVTS_PTR_ALIGNMENT
BLE_USER_MEM_TYPE_INVALID = _pc_ble_driver_sd_api_v3.BLE_USER_MEM_TYPE_INVALID
BLE_USER_MEM_TYPE_GATTS_QUEUED_WRITES = _pc_ble_driver_sd_api_v3.BLE_USER_MEM_TYPE_GATTS_QUEUED_WRITES
BLE_UUID_VS_COUNT_MIN = _pc_ble_driver_sd_api_v3.BLE_UUID_VS_COUNT_MIN
BLE_UUID_VS_COUNT_DEFAULT = _pc_ble_driver_sd_api_v3.BLE_UUID_VS_COUNT_DEFAULT
class ble_user_mem_block_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_user_mem_block_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_user_mem_block_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["p_mem"] = _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_p_mem_set
    __swig_getmethods__["p_mem"] = _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_p_mem_get
    if _newclass:p_mem = _swig_property(_pc_ble_driver_sd_api_v3.ble_user_mem_block_t_p_mem_get, _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_p_mem_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_user_mem_block_t_len_get, _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_len_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_user_mem_block_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_user_mem_block_t
    __del__ = lambda self : None;
ble_user_mem_block_t_swigregister = _pc_ble_driver_sd_api_v3.ble_user_mem_block_t_swigregister
ble_user_mem_block_t_swigregister(ble_user_mem_block_t)

class ble_evt_tx_complete_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_tx_complete_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_tx_complete_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_evt_tx_complete_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_evt_tx_complete_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_tx_complete_t_count_get, _pc_ble_driver_sd_api_v3.ble_evt_tx_complete_t_count_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_tx_complete_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_tx_complete_t
    __del__ = lambda self : None;
ble_evt_tx_complete_t_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_tx_complete_t_swigregister
ble_evt_tx_complete_t_swigregister(ble_evt_tx_complete_t)

class ble_evt_user_mem_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_user_mem_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_user_mem_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_request_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_request_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_user_mem_request_t_type_get, _pc_ble_driver_sd_api_v3.ble_evt_user_mem_request_t_type_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_user_mem_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_user_mem_request_t
    __del__ = lambda self : None;
ble_evt_user_mem_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_request_t_swigregister
ble_evt_user_mem_request_t_swigregister(ble_evt_user_mem_request_t)

class ble_evt_user_mem_release_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_user_mem_release_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_user_mem_release_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_type_get, _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_type_set)
    __swig_setmethods__["mem_block"] = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_mem_block_set
    __swig_getmethods__["mem_block"] = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_mem_block_get
    if _newclass:mem_block = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_mem_block_get, _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_mem_block_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_user_mem_release_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_user_mem_release_t
    __del__ = lambda self : None;
ble_evt_user_mem_release_t_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_user_mem_release_t_swigregister
ble_evt_user_mem_release_t_swigregister(ble_evt_user_mem_release_t)

class ble_evt_data_length_changed_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_data_length_changed_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_data_length_changed_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["max_tx_octets"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_octets_set
    __swig_getmethods__["max_tx_octets"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_octets_get
    if _newclass:max_tx_octets = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_octets_get, _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_octets_set)
    __swig_setmethods__["max_tx_time"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_time_set
    __swig_getmethods__["max_tx_time"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_time_get
    if _newclass:max_tx_time = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_time_get, _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_tx_time_set)
    __swig_setmethods__["max_rx_octets"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_octets_set
    __swig_getmethods__["max_rx_octets"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_octets_get
    if _newclass:max_rx_octets = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_octets_get, _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_octets_set)
    __swig_setmethods__["max_rx_time"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_time_set
    __swig_getmethods__["max_rx_time"] = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_time_get
    if _newclass:max_rx_time = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_time_get, _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_max_rx_time_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_data_length_changed_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_data_length_changed_t
    __del__ = lambda self : None;
ble_evt_data_length_changed_t_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_data_length_changed_t_swigregister
ble_evt_data_length_changed_t_swigregister(ble_evt_data_length_changed_t)

class ble_common_evt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_evt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_evt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_evt_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_common_evt_t_conn_handle_set)
    __swig_getmethods__["params"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_get
    if _newclass:params = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_evt_t_params_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_evt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_evt_t
    __del__ = lambda self : None;
ble_common_evt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_common_evt_t_swigregister
ble_common_evt_t_swigregister(ble_common_evt_t)

class ble_common_evt_t_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_evt_t_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_evt_t_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tx_complete"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_tx_complete_set
    __swig_getmethods__["tx_complete"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_tx_complete_get
    if _newclass:tx_complete = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_evt_t_params_tx_complete_get, _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_tx_complete_set)
    __swig_setmethods__["user_mem_request"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_request_set
    __swig_getmethods__["user_mem_request"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_request_get
    if _newclass:user_mem_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_request_get, _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_request_set)
    __swig_setmethods__["user_mem_release"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_release_set
    __swig_getmethods__["user_mem_release"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_release_get
    if _newclass:user_mem_release = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_release_get, _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_user_mem_release_set)
    __swig_setmethods__["data_length_changed"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_data_length_changed_set
    __swig_getmethods__["data_length_changed"] = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_data_length_changed_get
    if _newclass:data_length_changed = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_evt_t_params_data_length_changed_get, _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_data_length_changed_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_evt_t_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_evt_t_params
    __del__ = lambda self : None;
ble_common_evt_t_params_swigregister = _pc_ble_driver_sd_api_v3.ble_common_evt_t_params_swigregister
ble_common_evt_t_params_swigregister(ble_common_evt_t_params)

class ble_evt_hdr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_hdr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_hdr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["evt_id"] = _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_id_set
    __swig_getmethods__["evt_id"] = _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_id_get
    if _newclass:evt_id = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_id_get, _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_id_set)
    __swig_setmethods__["evt_len"] = _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_len_set
    __swig_getmethods__["evt_len"] = _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_len_get
    if _newclass:evt_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_len_get, _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_evt_len_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_hdr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_hdr_t
    __del__ = lambda self : None;
ble_evt_hdr_t_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_hdr_t_swigregister
ble_evt_hdr_t_swigregister(ble_evt_hdr_t)

class ble_evt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["header"] = _pc_ble_driver_sd_api_v3.ble_evt_t_header_set
    __swig_getmethods__["header"] = _pc_ble_driver_sd_api_v3.ble_evt_t_header_get
    if _newclass:header = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_header_get, _pc_ble_driver_sd_api_v3.ble_evt_t_header_set)
    __swig_getmethods__["evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_get
    if _newclass:evt = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_evt_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_t
    __del__ = lambda self : None;
ble_evt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_t_swigregister
ble_evt_t_swigregister(ble_evt_t)

class ble_evt_t_evt(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_evt_t_evt, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_evt_t_evt, name)
    __repr__ = _swig_repr
    __swig_setmethods__["common_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_common_evt_set
    __swig_getmethods__["common_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_common_evt_get
    if _newclass:common_evt = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_evt_common_evt_get, _pc_ble_driver_sd_api_v3.ble_evt_t_evt_common_evt_set)
    __swig_setmethods__["gap_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gap_evt_set
    __swig_getmethods__["gap_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gap_evt_get
    if _newclass:gap_evt = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_evt_gap_evt_get, _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gap_evt_set)
    __swig_setmethods__["l2cap_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_l2cap_evt_set
    __swig_getmethods__["l2cap_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_l2cap_evt_get
    if _newclass:l2cap_evt = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_evt_l2cap_evt_get, _pc_ble_driver_sd_api_v3.ble_evt_t_evt_l2cap_evt_set)
    __swig_setmethods__["gattc_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gattc_evt_set
    __swig_getmethods__["gattc_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gattc_evt_get
    if _newclass:gattc_evt = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_evt_gattc_evt_get, _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gattc_evt_set)
    __swig_setmethods__["gatts_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gatts_evt_set
    __swig_getmethods__["gatts_evt"] = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gatts_evt_get
    if _newclass:gatts_evt = _swig_property(_pc_ble_driver_sd_api_v3.ble_evt_t_evt_gatts_evt_get, _pc_ble_driver_sd_api_v3.ble_evt_t_evt_gatts_evt_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_evt_t_evt()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_evt_t_evt
    __del__ = lambda self : None;
ble_evt_t_evt_swigregister = _pc_ble_driver_sd_api_v3.ble_evt_t_evt_swigregister
ble_evt_t_evt_swigregister(ble_evt_t_evt)

class ble_version_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_version_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_version_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["version_number"] = _pc_ble_driver_sd_api_v3.ble_version_t_version_number_set
    __swig_getmethods__["version_number"] = _pc_ble_driver_sd_api_v3.ble_version_t_version_number_get
    if _newclass:version_number = _swig_property(_pc_ble_driver_sd_api_v3.ble_version_t_version_number_get, _pc_ble_driver_sd_api_v3.ble_version_t_version_number_set)
    __swig_setmethods__["company_id"] = _pc_ble_driver_sd_api_v3.ble_version_t_company_id_set
    __swig_getmethods__["company_id"] = _pc_ble_driver_sd_api_v3.ble_version_t_company_id_get
    if _newclass:company_id = _swig_property(_pc_ble_driver_sd_api_v3.ble_version_t_company_id_get, _pc_ble_driver_sd_api_v3.ble_version_t_company_id_set)
    __swig_setmethods__["subversion_number"] = _pc_ble_driver_sd_api_v3.ble_version_t_subversion_number_set
    __swig_getmethods__["subversion_number"] = _pc_ble_driver_sd_api_v3.ble_version_t_subversion_number_get
    if _newclass:subversion_number = _swig_property(_pc_ble_driver_sd_api_v3.ble_version_t_subversion_number_get, _pc_ble_driver_sd_api_v3.ble_version_t_subversion_number_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_version_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_version_t
    __del__ = lambda self : None;
ble_version_t_swigregister = _pc_ble_driver_sd_api_v3.ble_version_t_swigregister
ble_version_t_swigregister(ble_version_t)

class ble_pa_lna_cfg_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_pa_lna_cfg_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_pa_lna_cfg_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["enable"] = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_enable_set
    __swig_getmethods__["enable"] = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_enable_get
    if _newclass:enable = _swig_property(_pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_enable_get, _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_enable_set)
    __swig_setmethods__["active_high"] = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_active_high_set
    __swig_getmethods__["active_high"] = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_active_high_get
    if _newclass:active_high = _swig_property(_pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_active_high_get, _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_active_high_set)
    __swig_setmethods__["gpio_pin"] = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_gpio_pin_set
    __swig_getmethods__["gpio_pin"] = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_gpio_pin_get
    if _newclass:gpio_pin = _swig_property(_pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_gpio_pin_get, _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_gpio_pin_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_pa_lna_cfg_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_pa_lna_cfg_t
    __del__ = lambda self : None;
ble_pa_lna_cfg_t_swigregister = _pc_ble_driver_sd_api_v3.ble_pa_lna_cfg_t_swigregister
ble_pa_lna_cfg_t_swigregister(ble_pa_lna_cfg_t)

class ble_common_opt_pa_lna_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_opt_pa_lna_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_opt_pa_lna_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pa_cfg"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_pa_cfg_set
    __swig_getmethods__["pa_cfg"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_pa_cfg_get
    if _newclass:pa_cfg = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_pa_cfg_get, _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_pa_cfg_set)
    __swig_setmethods__["lna_cfg"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_lna_cfg_set
    __swig_getmethods__["lna_cfg"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_lna_cfg_get
    if _newclass:lna_cfg = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_lna_cfg_get, _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_lna_cfg_set)
    __swig_setmethods__["ppi_ch_id_set"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_set_set
    __swig_getmethods__["ppi_ch_id_set"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_set_get
    if _newclass:ppi_ch_id_set = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_set_get, _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_set_set)
    __swig_setmethods__["ppi_ch_id_clr"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_clr_set
    __swig_getmethods__["ppi_ch_id_clr"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_clr_get
    if _newclass:ppi_ch_id_clr = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_clr_get, _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_ppi_ch_id_clr_set)
    __swig_setmethods__["gpiote_ch_id"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_gpiote_ch_id_set
    __swig_getmethods__["gpiote_ch_id"] = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_gpiote_ch_id_get
    if _newclass:gpiote_ch_id = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_gpiote_ch_id_get, _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_gpiote_ch_id_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_opt_pa_lna_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_opt_pa_lna_t
    __del__ = lambda self : None;
ble_common_opt_pa_lna_t_swigregister = _pc_ble_driver_sd_api_v3.ble_common_opt_pa_lna_t_swigregister
ble_common_opt_pa_lna_t_swigregister(ble_common_opt_pa_lna_t)

class ble_conn_bw_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_conn_bw_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_conn_bw_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_bw_tx"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_tx_set
    __swig_getmethods__["conn_bw_tx"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_tx_get
    if _newclass:conn_bw_tx = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_tx_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_tx_set)
    __swig_setmethods__["conn_bw_rx"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_rx_set
    __swig_getmethods__["conn_bw_rx"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_rx_get
    if _newclass:conn_bw_rx = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_rx_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_t_conn_bw_rx_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_conn_bw_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_conn_bw_t
    __del__ = lambda self : None;
ble_conn_bw_t_swigregister = _pc_ble_driver_sd_api_v3.ble_conn_bw_t_swigregister
ble_conn_bw_t_swigregister(ble_conn_bw_t)

class ble_common_opt_conn_bw_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_opt_conn_bw_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_opt_conn_bw_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["role"] = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_role_set
    __swig_getmethods__["role"] = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_role_get
    if _newclass:role = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_role_get, _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_role_set)
    __swig_setmethods__["conn_bw"] = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_conn_bw_set
    __swig_getmethods__["conn_bw"] = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_conn_bw_get
    if _newclass:conn_bw = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_conn_bw_get, _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_conn_bw_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_opt_conn_bw_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_opt_conn_bw_t
    __del__ = lambda self : None;
ble_common_opt_conn_bw_t_swigregister = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_bw_t_swigregister
ble_common_opt_conn_bw_t_swigregister(ble_common_opt_conn_bw_t)

class ble_common_opt_conn_evt_ext_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_opt_conn_evt_ext_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_opt_conn_evt_ext_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["enable"] = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_evt_ext_t_enable_set
    __swig_getmethods__["enable"] = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_evt_ext_t_enable_get
    if _newclass:enable = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_conn_evt_ext_t_enable_get, _pc_ble_driver_sd_api_v3.ble_common_opt_conn_evt_ext_t_enable_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_opt_conn_evt_ext_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_opt_conn_evt_ext_t
    __del__ = lambda self : None;
ble_common_opt_conn_evt_ext_t_swigregister = _pc_ble_driver_sd_api_v3.ble_common_opt_conn_evt_ext_t_swigregister
ble_common_opt_conn_evt_ext_t_swigregister(ble_common_opt_conn_evt_ext_t)

class ble_common_opt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_opt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_opt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_bw"] = _pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_bw_set
    __swig_getmethods__["conn_bw"] = _pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_bw_get
    if _newclass:conn_bw = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_bw_get, _pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_bw_set)
    __swig_setmethods__["pa_lna"] = _pc_ble_driver_sd_api_v3.ble_common_opt_t_pa_lna_set
    __swig_getmethods__["pa_lna"] = _pc_ble_driver_sd_api_v3.ble_common_opt_t_pa_lna_get
    if _newclass:pa_lna = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_t_pa_lna_get, _pc_ble_driver_sd_api_v3.ble_common_opt_t_pa_lna_set)
    __swig_setmethods__["conn_evt_ext"] = _pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_evt_ext_set
    __swig_getmethods__["conn_evt_ext"] = _pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_evt_ext_get
    if _newclass:conn_evt_ext = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_evt_ext_get, _pc_ble_driver_sd_api_v3.ble_common_opt_t_conn_evt_ext_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_opt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_opt_t
    __del__ = lambda self : None;
ble_common_opt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_common_opt_t_swigregister
ble_common_opt_t_swigregister(ble_common_opt_t)

class ble_opt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_opt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_opt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["common_opt"] = _pc_ble_driver_sd_api_v3.ble_opt_t_common_opt_set
    __swig_getmethods__["common_opt"] = _pc_ble_driver_sd_api_v3.ble_opt_t_common_opt_get
    if _newclass:common_opt = _swig_property(_pc_ble_driver_sd_api_v3.ble_opt_t_common_opt_get, _pc_ble_driver_sd_api_v3.ble_opt_t_common_opt_set)
    __swig_setmethods__["gap_opt"] = _pc_ble_driver_sd_api_v3.ble_opt_t_gap_opt_set
    __swig_getmethods__["gap_opt"] = _pc_ble_driver_sd_api_v3.ble_opt_t_gap_opt_get
    if _newclass:gap_opt = _swig_property(_pc_ble_driver_sd_api_v3.ble_opt_t_gap_opt_get, _pc_ble_driver_sd_api_v3.ble_opt_t_gap_opt_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_opt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_opt_t
    __del__ = lambda self : None;
ble_opt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_opt_t_swigregister
ble_opt_t_swigregister(ble_opt_t)

class ble_conn_bw_count_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_conn_bw_count_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_conn_bw_count_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["high_count"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_high_count_set
    __swig_getmethods__["high_count"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_high_count_get
    if _newclass:high_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_high_count_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_high_count_set)
    __swig_setmethods__["mid_count"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_mid_count_set
    __swig_getmethods__["mid_count"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_mid_count_get
    if _newclass:mid_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_mid_count_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_mid_count_set)
    __swig_setmethods__["low_count"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_low_count_set
    __swig_getmethods__["low_count"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_low_count_get
    if _newclass:low_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_low_count_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_low_count_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_conn_bw_count_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_conn_bw_count_t
    __del__ = lambda self : None;
ble_conn_bw_count_t_swigregister = _pc_ble_driver_sd_api_v3.ble_conn_bw_count_t_swigregister
ble_conn_bw_count_t_swigregister(ble_conn_bw_count_t)

class ble_conn_bw_counts_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_conn_bw_counts_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_conn_bw_counts_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tx_counts"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_tx_counts_set
    __swig_getmethods__["tx_counts"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_tx_counts_get
    if _newclass:tx_counts = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_tx_counts_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_tx_counts_set)
    __swig_setmethods__["rx_counts"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_rx_counts_set
    __swig_getmethods__["rx_counts"] = _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_rx_counts_get
    if _newclass:rx_counts = _swig_property(_pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_rx_counts_get, _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_rx_counts_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_conn_bw_counts_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_conn_bw_counts_t
    __del__ = lambda self : None;
ble_conn_bw_counts_t_swigregister = _pc_ble_driver_sd_api_v3.ble_conn_bw_counts_t_swigregister
ble_conn_bw_counts_t_swigregister(ble_conn_bw_counts_t)

class ble_common_enable_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_common_enable_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_common_enable_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["vs_uuid_count"] = _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_vs_uuid_count_set
    __swig_getmethods__["vs_uuid_count"] = _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_vs_uuid_count_get
    if _newclass:vs_uuid_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_enable_params_t_vs_uuid_count_get, _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_vs_uuid_count_set)
    __swig_setmethods__["p_conn_bw_counts"] = _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_p_conn_bw_counts_set
    __swig_getmethods__["p_conn_bw_counts"] = _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_p_conn_bw_counts_get
    if _newclass:p_conn_bw_counts = _swig_property(_pc_ble_driver_sd_api_v3.ble_common_enable_params_t_p_conn_bw_counts_get, _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_p_conn_bw_counts_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_common_enable_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_common_enable_params_t
    __del__ = lambda self : None;
ble_common_enable_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_common_enable_params_t_swigregister
ble_common_enable_params_t_swigregister(ble_common_enable_params_t)

class ble_enable_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_enable_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_enable_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["common_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_common_enable_params_set
    __swig_getmethods__["common_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_common_enable_params_get
    if _newclass:common_enable_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_enable_params_t_common_enable_params_get, _pc_ble_driver_sd_api_v3.ble_enable_params_t_common_enable_params_set)
    __swig_setmethods__["gap_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_gap_enable_params_set
    __swig_getmethods__["gap_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_gap_enable_params_get
    if _newclass:gap_enable_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_enable_params_t_gap_enable_params_get, _pc_ble_driver_sd_api_v3.ble_enable_params_t_gap_enable_params_set)
    __swig_setmethods__["gatt_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_gatt_enable_params_set
    __swig_getmethods__["gatt_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_gatt_enable_params_get
    if _newclass:gatt_enable_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_enable_params_t_gatt_enable_params_get, _pc_ble_driver_sd_api_v3.ble_enable_params_t_gatt_enable_params_set)
    __swig_setmethods__["gatts_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_gatts_enable_params_set
    __swig_getmethods__["gatts_enable_params"] = _pc_ble_driver_sd_api_v3.ble_enable_params_t_gatts_enable_params_get
    if _newclass:gatts_enable_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_enable_params_t_gatts_enable_params_get, _pc_ble_driver_sd_api_v3.ble_enable_params_t_gatts_enable_params_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_enable_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_enable_params_t
    __del__ = lambda self : None;
ble_enable_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_enable_params_t_swigregister
ble_enable_params_t_swigregister(ble_enable_params_t)


def sd_ble_enable(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_enable(*args)
sd_ble_enable = _pc_ble_driver_sd_api_v3.sd_ble_enable

def sd_ble_tx_packet_count_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_tx_packet_count_get(*args)
sd_ble_tx_packet_count_get = _pc_ble_driver_sd_api_v3.sd_ble_tx_packet_count_get

def sd_ble_uuid_vs_add(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_uuid_vs_add(*args)
sd_ble_uuid_vs_add = _pc_ble_driver_sd_api_v3.sd_ble_uuid_vs_add

def sd_ble_uuid_decode(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_uuid_decode(*args)
sd_ble_uuid_decode = _pc_ble_driver_sd_api_v3.sd_ble_uuid_decode

def sd_ble_uuid_encode(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_uuid_encode(*args)
sd_ble_uuid_encode = _pc_ble_driver_sd_api_v3.sd_ble_uuid_encode

def sd_ble_version_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_version_get(*args)
sd_ble_version_get = _pc_ble_driver_sd_api_v3.sd_ble_version_get

def sd_ble_user_mem_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_user_mem_reply(*args)
sd_ble_user_mem_reply = _pc_ble_driver_sd_api_v3.sd_ble_user_mem_reply

def sd_ble_opt_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_opt_set(*args)
sd_ble_opt_set = _pc_ble_driver_sd_api_v3.sd_ble_opt_set

def sd_ble_opt_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_opt_get(*args)
sd_ble_opt_get = _pc_ble_driver_sd_api_v3.sd_ble_opt_get
SD_BLE_GAP_ADDR_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_ADDR_SET
SD_BLE_GAP_ADDR_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_ADDR_GET
SD_BLE_GAP_WHITELIST_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_WHITELIST_SET
SD_BLE_GAP_DEVICE_IDENTITIES_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_DEVICE_IDENTITIES_SET
SD_BLE_GAP_PRIVACY_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_PRIVACY_SET
SD_BLE_GAP_PRIVACY_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_PRIVACY_GET
SD_BLE_GAP_ADV_DATA_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_ADV_DATA_SET
SD_BLE_GAP_ADV_START = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_ADV_START
SD_BLE_GAP_ADV_STOP = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_ADV_STOP
SD_BLE_GAP_CONN_PARAM_UPDATE = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_CONN_PARAM_UPDATE
SD_BLE_GAP_DISCONNECT = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_DISCONNECT
SD_BLE_GAP_TX_POWER_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_TX_POWER_SET
SD_BLE_GAP_APPEARANCE_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_APPEARANCE_SET
SD_BLE_GAP_APPEARANCE_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_APPEARANCE_GET
SD_BLE_GAP_PPCP_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_PPCP_SET
SD_BLE_GAP_PPCP_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_PPCP_GET
SD_BLE_GAP_DEVICE_NAME_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_DEVICE_NAME_SET
SD_BLE_GAP_DEVICE_NAME_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_DEVICE_NAME_GET
SD_BLE_GAP_AUTHENTICATE = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_AUTHENTICATE
SD_BLE_GAP_SEC_PARAMS_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_SEC_PARAMS_REPLY
SD_BLE_GAP_AUTH_KEY_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_AUTH_KEY_REPLY
SD_BLE_GAP_LESC_DHKEY_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_LESC_DHKEY_REPLY
SD_BLE_GAP_KEYPRESS_NOTIFY = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_KEYPRESS_NOTIFY
SD_BLE_GAP_LESC_OOB_DATA_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_LESC_OOB_DATA_GET
SD_BLE_GAP_LESC_OOB_DATA_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_LESC_OOB_DATA_SET
SD_BLE_GAP_ENCRYPT = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_ENCRYPT
SD_BLE_GAP_SEC_INFO_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_SEC_INFO_REPLY
SD_BLE_GAP_CONN_SEC_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_CONN_SEC_GET
SD_BLE_GAP_RSSI_START = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_RSSI_START
SD_BLE_GAP_RSSI_STOP = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_RSSI_STOP
SD_BLE_GAP_SCAN_START = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_SCAN_START
SD_BLE_GAP_SCAN_STOP = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_SCAN_STOP
SD_BLE_GAP_CONNECT = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_CONNECT
SD_BLE_GAP_CONNECT_CANCEL = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_CONNECT_CANCEL
SD_BLE_GAP_RSSI_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GAP_RSSI_GET
BLE_GAP_EVT_CONNECTED = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_CONNECTED
BLE_GAP_EVT_DISCONNECTED = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_DISCONNECTED
BLE_GAP_EVT_CONN_PARAM_UPDATE = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_CONN_PARAM_UPDATE
BLE_GAP_EVT_SEC_PARAMS_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_SEC_PARAMS_REQUEST
BLE_GAP_EVT_SEC_INFO_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_SEC_INFO_REQUEST
BLE_GAP_EVT_PASSKEY_DISPLAY = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_PASSKEY_DISPLAY
BLE_GAP_EVT_KEY_PRESSED = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_KEY_PRESSED
BLE_GAP_EVT_AUTH_KEY_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_AUTH_KEY_REQUEST
BLE_GAP_EVT_LESC_DHKEY_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_LESC_DHKEY_REQUEST
BLE_GAP_EVT_AUTH_STATUS = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_AUTH_STATUS
BLE_GAP_EVT_CONN_SEC_UPDATE = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_CONN_SEC_UPDATE
BLE_GAP_EVT_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_TIMEOUT
BLE_GAP_EVT_RSSI_CHANGED = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_RSSI_CHANGED
BLE_GAP_EVT_ADV_REPORT = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_ADV_REPORT
BLE_GAP_EVT_SEC_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_SEC_REQUEST
BLE_GAP_EVT_CONN_PARAM_UPDATE_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_CONN_PARAM_UPDATE_REQUEST
BLE_GAP_EVT_SCAN_REQ_REPORT = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_SCAN_REQ_REPORT
BLE_GAP_OPT_CH_MAP = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_CH_MAP
BLE_GAP_OPT_LOCAL_CONN_LATENCY = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_LOCAL_CONN_LATENCY
BLE_GAP_OPT_PASSKEY = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_PASSKEY
BLE_GAP_OPT_SCAN_REQ_REPORT = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_SCAN_REQ_REPORT
BLE_GAP_OPT_COMPAT_MODE = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_COMPAT_MODE
BLE_GAP_OPT_AUTH_PAYLOAD_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_AUTH_PAYLOAD_TIMEOUT
BLE_GAP_OPT_EXT_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_EXT_LEN
BLE_GAP_ROLE_INVALID = _pc_ble_driver_sd_api_v3.BLE_GAP_ROLE_INVALID
BLE_GAP_ROLE_PERIPH = _pc_ble_driver_sd_api_v3.BLE_GAP_ROLE_PERIPH
BLE_GAP_ROLE_CENTRAL = _pc_ble_driver_sd_api_v3.BLE_GAP_ROLE_CENTRAL
BLE_GAP_TIMEOUT_SRC_ADVERTISING = _pc_ble_driver_sd_api_v3.BLE_GAP_TIMEOUT_SRC_ADVERTISING
BLE_GAP_TIMEOUT_SRC_SECURITY_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GAP_TIMEOUT_SRC_SECURITY_REQUEST
BLE_GAP_TIMEOUT_SRC_SCAN = _pc_ble_driver_sd_api_v3.BLE_GAP_TIMEOUT_SRC_SCAN
BLE_GAP_TIMEOUT_SRC_CONN = _pc_ble_driver_sd_api_v3.BLE_GAP_TIMEOUT_SRC_CONN
BLE_GAP_TIMEOUT_SRC_AUTH_PAYLOAD = _pc_ble_driver_sd_api_v3.BLE_GAP_TIMEOUT_SRC_AUTH_PAYLOAD
BLE_GAP_ADDR_TYPE_PUBLIC = _pc_ble_driver_sd_api_v3.BLE_GAP_ADDR_TYPE_PUBLIC
BLE_GAP_ADDR_TYPE_RANDOM_STATIC = _pc_ble_driver_sd_api_v3.BLE_GAP_ADDR_TYPE_RANDOM_STATIC
BLE_GAP_ADDR_TYPE_RANDOM_PRIVATE_RESOLVABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADDR_TYPE_RANDOM_PRIVATE_RESOLVABLE
BLE_GAP_ADDR_TYPE_RANDOM_PRIVATE_NON_RESOLVABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADDR_TYPE_RANDOM_PRIVATE_NON_RESOLVABLE
BLE_GAP_DEFAULT_PRIVATE_ADDR_CYCLE_INTERVAL_S = _pc_ble_driver_sd_api_v3.BLE_GAP_DEFAULT_PRIVATE_ADDR_CYCLE_INTERVAL_S
BLE_GAP_MAX_PRIVATE_ADDR_CYCLE_INTERVAL_S = _pc_ble_driver_sd_api_v3.BLE_GAP_MAX_PRIVATE_ADDR_CYCLE_INTERVAL_S
BLE_GAP_ADDR_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_ADDR_LEN
BLE_GAP_PRIVACY_MODE_OFF = _pc_ble_driver_sd_api_v3.BLE_GAP_PRIVACY_MODE_OFF
BLE_GAP_PRIVACY_MODE_DEVICE_PRIVACY = _pc_ble_driver_sd_api_v3.BLE_GAP_PRIVACY_MODE_DEVICE_PRIVACY
BLE_GAP_AD_TYPE_FLAGS = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_FLAGS
BLE_GAP_AD_TYPE_16BIT_SERVICE_UUID_MORE_AVAILABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_16BIT_SERVICE_UUID_MORE_AVAILABLE
BLE_GAP_AD_TYPE_16BIT_SERVICE_UUID_COMPLETE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_16BIT_SERVICE_UUID_COMPLETE
BLE_GAP_AD_TYPE_32BIT_SERVICE_UUID_MORE_AVAILABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_32BIT_SERVICE_UUID_MORE_AVAILABLE
BLE_GAP_AD_TYPE_32BIT_SERVICE_UUID_COMPLETE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_32BIT_SERVICE_UUID_COMPLETE
BLE_GAP_AD_TYPE_128BIT_SERVICE_UUID_MORE_AVAILABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_128BIT_SERVICE_UUID_MORE_AVAILABLE
BLE_GAP_AD_TYPE_128BIT_SERVICE_UUID_COMPLETE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_128BIT_SERVICE_UUID_COMPLETE
BLE_GAP_AD_TYPE_SHORT_LOCAL_NAME = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SHORT_LOCAL_NAME
BLE_GAP_AD_TYPE_COMPLETE_LOCAL_NAME = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_COMPLETE_LOCAL_NAME
BLE_GAP_AD_TYPE_TX_POWER_LEVEL = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_TX_POWER_LEVEL
BLE_GAP_AD_TYPE_CLASS_OF_DEVICE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_CLASS_OF_DEVICE
BLE_GAP_AD_TYPE_SIMPLE_PAIRING_HASH_C = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SIMPLE_PAIRING_HASH_C
BLE_GAP_AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R
BLE_GAP_AD_TYPE_SECURITY_MANAGER_TK_VALUE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SECURITY_MANAGER_TK_VALUE
BLE_GAP_AD_TYPE_SECURITY_MANAGER_OOB_FLAGS = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SECURITY_MANAGER_OOB_FLAGS
BLE_GAP_AD_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE
BLE_GAP_AD_TYPE_SOLICITED_SERVICE_UUIDS_16BIT = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SOLICITED_SERVICE_UUIDS_16BIT
BLE_GAP_AD_TYPE_SOLICITED_SERVICE_UUIDS_128BIT = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SOLICITED_SERVICE_UUIDS_128BIT
BLE_GAP_AD_TYPE_SERVICE_DATA = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SERVICE_DATA
BLE_GAP_AD_TYPE_PUBLIC_TARGET_ADDRESS = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_PUBLIC_TARGET_ADDRESS
BLE_GAP_AD_TYPE_RANDOM_TARGET_ADDRESS = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_RANDOM_TARGET_ADDRESS
BLE_GAP_AD_TYPE_APPEARANCE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_APPEARANCE
BLE_GAP_AD_TYPE_ADVERTISING_INTERVAL = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_ADVERTISING_INTERVAL
BLE_GAP_AD_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS
BLE_GAP_AD_TYPE_LE_ROLE = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_LE_ROLE
BLE_GAP_AD_TYPE_SIMPLE_PAIRING_HASH_C256 = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SIMPLE_PAIRING_HASH_C256
BLE_GAP_AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R256 = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R256
BLE_GAP_AD_TYPE_SERVICE_DATA_32BIT_UUID = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SERVICE_DATA_32BIT_UUID
BLE_GAP_AD_TYPE_SERVICE_DATA_128BIT_UUID = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_SERVICE_DATA_128BIT_UUID
BLE_GAP_AD_TYPE_URI = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_URI
BLE_GAP_AD_TYPE_3D_INFORMATION_DATA = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_3D_INFORMATION_DATA
BLE_GAP_AD_TYPE_MANUFACTURER_SPECIFIC_DATA = _pc_ble_driver_sd_api_v3.BLE_GAP_AD_TYPE_MANUFACTURER_SPECIFIC_DATA
BLE_GAP_ADV_FLAG_LE_LIMITED_DISC_MODE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAG_LE_LIMITED_DISC_MODE
BLE_GAP_ADV_FLAG_LE_GENERAL_DISC_MODE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAG_LE_GENERAL_DISC_MODE
BLE_GAP_ADV_FLAG_BR_EDR_NOT_SUPPORTED = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAG_BR_EDR_NOT_SUPPORTED
BLE_GAP_ADV_FLAG_LE_BR_EDR_CONTROLLER = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAG_LE_BR_EDR_CONTROLLER
BLE_GAP_ADV_FLAG_LE_BR_EDR_HOST = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAG_LE_BR_EDR_HOST
BLE_GAP_ADV_FLAGS_LE_ONLY_LIMITED_DISC_MODE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAGS_LE_ONLY_LIMITED_DISC_MODE
BLE_GAP_ADV_FLAGS_LE_ONLY_GENERAL_DISC_MODE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FLAGS_LE_ONLY_GENERAL_DISC_MODE
BLE_GAP_ADV_INTERVAL_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_INTERVAL_MIN
BLE_GAP_ADV_NONCON_INTERVAL_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_NONCON_INTERVAL_MIN
BLE_GAP_ADV_INTERVAL_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_INTERVAL_MAX
BLE_GAP_SCAN_INTERVAL_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_SCAN_INTERVAL_MIN
BLE_GAP_SCAN_INTERVAL_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_SCAN_INTERVAL_MAX
BLE_GAP_SCAN_WINDOW_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_SCAN_WINDOW_MIN
BLE_GAP_SCAN_WINDOW_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_SCAN_WINDOW_MAX
BLE_GAP_SCAN_TIMEOUT_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_SCAN_TIMEOUT_MIN
BLE_GAP_SCAN_TIMEOUT_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_SCAN_TIMEOUT_MAX
BLE_GAP_ADV_MAX_SIZE = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_MAX_SIZE
BLE_GAP_ADV_TYPE_ADV_IND = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_TYPE_ADV_IND
BLE_GAP_ADV_TYPE_ADV_DIRECT_IND = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_TYPE_ADV_DIRECT_IND
BLE_GAP_ADV_TYPE_ADV_SCAN_IND = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_TYPE_ADV_SCAN_IND
BLE_GAP_ADV_TYPE_ADV_NONCONN_IND = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_TYPE_ADV_NONCONN_IND
BLE_GAP_ADV_FP_ANY = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FP_ANY
BLE_GAP_ADV_FP_FILTER_SCANREQ = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FP_FILTER_SCANREQ
BLE_GAP_ADV_FP_FILTER_CONNREQ = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FP_FILTER_CONNREQ
BLE_GAP_ADV_FP_FILTER_BOTH = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_FP_FILTER_BOTH
BLE_GAP_ADV_TIMEOUT_LIMITED_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_TIMEOUT_LIMITED_MAX
BLE_GAP_ADV_TIMEOUT_GENERAL_UNLIMITED = _pc_ble_driver_sd_api_v3.BLE_GAP_ADV_TIMEOUT_GENERAL_UNLIMITED
BLE_GAP_DISC_MODE_NOT_DISCOVERABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_DISC_MODE_NOT_DISCOVERABLE
BLE_GAP_DISC_MODE_LIMITED = _pc_ble_driver_sd_api_v3.BLE_GAP_DISC_MODE_LIMITED
BLE_GAP_DISC_MODE_GENERAL = _pc_ble_driver_sd_api_v3.BLE_GAP_DISC_MODE_GENERAL
BLE_GAP_IO_CAPS_DISPLAY_ONLY = _pc_ble_driver_sd_api_v3.BLE_GAP_IO_CAPS_DISPLAY_ONLY
BLE_GAP_IO_CAPS_DISPLAY_YESNO = _pc_ble_driver_sd_api_v3.BLE_GAP_IO_CAPS_DISPLAY_YESNO
BLE_GAP_IO_CAPS_KEYBOARD_ONLY = _pc_ble_driver_sd_api_v3.BLE_GAP_IO_CAPS_KEYBOARD_ONLY
BLE_GAP_IO_CAPS_NONE = _pc_ble_driver_sd_api_v3.BLE_GAP_IO_CAPS_NONE
BLE_GAP_IO_CAPS_KEYBOARD_DISPLAY = _pc_ble_driver_sd_api_v3.BLE_GAP_IO_CAPS_KEYBOARD_DISPLAY
BLE_GAP_AUTH_KEY_TYPE_NONE = _pc_ble_driver_sd_api_v3.BLE_GAP_AUTH_KEY_TYPE_NONE
BLE_GAP_AUTH_KEY_TYPE_PASSKEY = _pc_ble_driver_sd_api_v3.BLE_GAP_AUTH_KEY_TYPE_PASSKEY
BLE_GAP_AUTH_KEY_TYPE_OOB = _pc_ble_driver_sd_api_v3.BLE_GAP_AUTH_KEY_TYPE_OOB
BLE_GAP_KP_NOT_TYPE_PASSKEY_START = _pc_ble_driver_sd_api_v3.BLE_GAP_KP_NOT_TYPE_PASSKEY_START
BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN = _pc_ble_driver_sd_api_v3.BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN
BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT = _pc_ble_driver_sd_api_v3.BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT
BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR = _pc_ble_driver_sd_api_v3.BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR
BLE_GAP_KP_NOT_TYPE_PASSKEY_END = _pc_ble_driver_sd_api_v3.BLE_GAP_KP_NOT_TYPE_PASSKEY_END
BLE_GAP_SEC_STATUS_SUCCESS = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_SUCCESS
BLE_GAP_SEC_STATUS_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_TIMEOUT
BLE_GAP_SEC_STATUS_PDU_INVALID = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_PDU_INVALID
BLE_GAP_SEC_STATUS_RFU_RANGE1_BEGIN = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_RFU_RANGE1_BEGIN
BLE_GAP_SEC_STATUS_RFU_RANGE1_END = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_RFU_RANGE1_END
BLE_GAP_SEC_STATUS_PASSKEY_ENTRY_FAILED = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_PASSKEY_ENTRY_FAILED
BLE_GAP_SEC_STATUS_OOB_NOT_AVAILABLE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_OOB_NOT_AVAILABLE
BLE_GAP_SEC_STATUS_AUTH_REQ = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_AUTH_REQ
BLE_GAP_SEC_STATUS_CONFIRM_VALUE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_CONFIRM_VALUE
BLE_GAP_SEC_STATUS_PAIRING_NOT_SUPP = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_PAIRING_NOT_SUPP
BLE_GAP_SEC_STATUS_ENC_KEY_SIZE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_ENC_KEY_SIZE
BLE_GAP_SEC_STATUS_SMP_CMD_UNSUPPORTED = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_SMP_CMD_UNSUPPORTED
BLE_GAP_SEC_STATUS_UNSPECIFIED = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_UNSPECIFIED
BLE_GAP_SEC_STATUS_REPEATED_ATTEMPTS = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_REPEATED_ATTEMPTS
BLE_GAP_SEC_STATUS_INVALID_PARAMS = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_INVALID_PARAMS
BLE_GAP_SEC_STATUS_DHKEY_FAILURE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_DHKEY_FAILURE
BLE_GAP_SEC_STATUS_NUM_COMP_FAILURE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_NUM_COMP_FAILURE
BLE_GAP_SEC_STATUS_BR_EDR_IN_PROG = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_BR_EDR_IN_PROG
BLE_GAP_SEC_STATUS_X_TRANS_KEY_DISALLOWED = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_X_TRANS_KEY_DISALLOWED
BLE_GAP_SEC_STATUS_RFU_RANGE2_BEGIN = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_RFU_RANGE2_BEGIN
BLE_GAP_SEC_STATUS_RFU_RANGE2_END = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_RFU_RANGE2_END
BLE_GAP_SEC_STATUS_SOURCE_LOCAL = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_SOURCE_LOCAL
BLE_GAP_SEC_STATUS_SOURCE_REMOTE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_STATUS_SOURCE_REMOTE
BLE_GAP_CP_MIN_CONN_INTVL_NONE = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_MIN_CONN_INTVL_NONE
BLE_GAP_CP_MIN_CONN_INTVL_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_MIN_CONN_INTVL_MIN
BLE_GAP_CP_MIN_CONN_INTVL_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_MIN_CONN_INTVL_MAX
BLE_GAP_CP_MAX_CONN_INTVL_NONE = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_MAX_CONN_INTVL_NONE
BLE_GAP_CP_MAX_CONN_INTVL_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_MAX_CONN_INTVL_MIN
BLE_GAP_CP_MAX_CONN_INTVL_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_MAX_CONN_INTVL_MAX
BLE_GAP_CP_SLAVE_LATENCY_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_SLAVE_LATENCY_MAX
BLE_GAP_CP_CONN_SUP_TIMEOUT_NONE = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_CONN_SUP_TIMEOUT_NONE
BLE_GAP_CP_CONN_SUP_TIMEOUT_MIN = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_CONN_SUP_TIMEOUT_MIN
BLE_GAP_CP_CONN_SUP_TIMEOUT_MAX = _pc_ble_driver_sd_api_v3.BLE_GAP_CP_CONN_SUP_TIMEOUT_MAX
BLE_GAP_DEVNAME_DEFAULT = _pc_ble_driver_sd_api_v3.BLE_GAP_DEVNAME_DEFAULT
BLE_GAP_DEVNAME_DEFAULT_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_DEVNAME_DEFAULT_LEN
BLE_GAP_DEVNAME_MAX_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_DEVNAME_MAX_LEN
BLE_GAP_RSSI_THRESHOLD_INVALID = _pc_ble_driver_sd_api_v3.BLE_GAP_RSSI_THRESHOLD_INVALID
BLE_GAP_SEC_RAND_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_RAND_LEN
BLE_GAP_SEC_KEY_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_KEY_LEN
BLE_GAP_LESC_P256_PK_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_LESC_P256_PK_LEN
BLE_GAP_LESC_DHKEY_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_LESC_DHKEY_LEN
BLE_GAP_PASSKEY_LEN = _pc_ble_driver_sd_api_v3.BLE_GAP_PASSKEY_LEN
BLE_GAP_WHITELIST_ADDR_MAX_COUNT = _pc_ble_driver_sd_api_v3.BLE_GAP_WHITELIST_ADDR_MAX_COUNT
BLE_GAP_DEVICE_IDENTITIES_MAX_COUNT = _pc_ble_driver_sd_api_v3.BLE_GAP_DEVICE_IDENTITIES_MAX_COUNT
BLE_GAP_SEC_MODE = _pc_ble_driver_sd_api_v3.BLE_GAP_SEC_MODE
class ble_gap_addr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_addr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_addr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr_id_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_id_peer_set
    __swig_getmethods__["addr_id_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_id_peer_get
    if _newclass:addr_id_peer = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_id_peer_get, _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_id_peer_set)
    __swig_setmethods__["addr_type"] = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_type_set
    __swig_getmethods__["addr_type"] = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_type_get
    if _newclass:addr_type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_type_get, _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_type_set)
    __swig_setmethods__["addr"] = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_set
    __swig_getmethods__["addr"] = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_get
    if _newclass:addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_addr_t_addr_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_addr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_addr_t
    __del__ = lambda self : None;
ble_gap_addr_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_addr_t_swigregister
ble_gap_addr_t_swigregister(ble_gap_addr_t)

class ble_gap_conn_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_conn_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_conn_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["min_conn_interval"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_min_conn_interval_set
    __swig_getmethods__["min_conn_interval"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_min_conn_interval_get
    if _newclass:min_conn_interval = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_min_conn_interval_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_min_conn_interval_set)
    __swig_setmethods__["max_conn_interval"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_max_conn_interval_set
    __swig_getmethods__["max_conn_interval"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_max_conn_interval_get
    if _newclass:max_conn_interval = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_max_conn_interval_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_max_conn_interval_set)
    __swig_setmethods__["slave_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_slave_latency_set
    __swig_getmethods__["slave_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_slave_latency_get
    if _newclass:slave_latency = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_slave_latency_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_slave_latency_set)
    __swig_setmethods__["conn_sup_timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_conn_sup_timeout_set
    __swig_getmethods__["conn_sup_timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_conn_sup_timeout_get
    if _newclass:conn_sup_timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_conn_sup_timeout_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_conn_sup_timeout_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_conn_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_conn_params_t
    __del__ = lambda self : None;
ble_gap_conn_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_conn_params_t_swigregister
ble_gap_conn_params_t_swigregister(ble_gap_conn_params_t)

class ble_gap_conn_sec_mode_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_conn_sec_mode_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_conn_sec_mode_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sm"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_sm_set
    __swig_getmethods__["sm"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_sm_get
    if _newclass:sm = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_sm_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_sm_set)
    __swig_setmethods__["lv"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_lv_set
    __swig_getmethods__["lv"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_lv_get
    if _newclass:lv = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_lv_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_lv_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_conn_sec_mode_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_conn_sec_mode_t
    __del__ = lambda self : None;
ble_gap_conn_sec_mode_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_mode_t_swigregister
ble_gap_conn_sec_mode_t_swigregister(ble_gap_conn_sec_mode_t)

class ble_gap_conn_sec_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_conn_sec_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_conn_sec_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sec_mode"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_sec_mode_set
    __swig_getmethods__["sec_mode"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_sec_mode_get
    if _newclass:sec_mode = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_sec_mode_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_sec_mode_set)
    __swig_setmethods__["encr_key_size"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_encr_key_size_set
    __swig_getmethods__["encr_key_size"] = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_encr_key_size_get
    if _newclass:encr_key_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_encr_key_size_get, _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_encr_key_size_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_conn_sec_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_conn_sec_t
    __del__ = lambda self : None;
ble_gap_conn_sec_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_conn_sec_t_swigregister
ble_gap_conn_sec_t_swigregister(ble_gap_conn_sec_t)

class ble_gap_device_name_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_device_name_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_device_name_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["write_perm"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_write_perm_set
    __swig_getmethods__["write_perm"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_write_perm_get
    if _newclass:write_perm = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_device_name_t_write_perm_get, _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_write_perm_set)
    __swig_setmethods__["vloc"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_vloc_set
    __swig_getmethods__["vloc"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_vloc_get
    if _newclass:vloc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_device_name_t_vloc_get, _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_vloc_set)
    __swig_setmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_p_value_set
    __swig_getmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_p_value_get
    if _newclass:p_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_device_name_t_p_value_get, _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_p_value_set)
    __swig_setmethods__["current_len"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_current_len_set
    __swig_getmethods__["current_len"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_current_len_get
    if _newclass:current_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_device_name_t_current_len_get, _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_current_len_set)
    __swig_setmethods__["max_len"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_max_len_set
    __swig_getmethods__["max_len"] = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_max_len_get
    if _newclass:max_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_device_name_t_max_len_get, _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_max_len_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_device_name_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_device_name_t
    __del__ = lambda self : None;
ble_gap_device_name_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_device_name_t_swigregister
ble_gap_device_name_t_swigregister(ble_gap_device_name_t)

class ble_gap_enable_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_enable_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_enable_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["periph_conn_count"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_periph_conn_count_set
    __swig_getmethods__["periph_conn_count"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_periph_conn_count_get
    if _newclass:periph_conn_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_periph_conn_count_get, _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_periph_conn_count_set)
    __swig_setmethods__["central_conn_count"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_conn_count_set
    __swig_getmethods__["central_conn_count"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_conn_count_get
    if _newclass:central_conn_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_conn_count_get, _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_conn_count_set)
    __swig_setmethods__["central_sec_count"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_sec_count_set
    __swig_getmethods__["central_sec_count"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_sec_count_get
    if _newclass:central_sec_count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_sec_count_get, _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_central_sec_count_set)
    __swig_setmethods__["p_device_name"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_p_device_name_set
    __swig_getmethods__["p_device_name"] = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_p_device_name_get
    if _newclass:p_device_name = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_p_device_name_get, _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_p_device_name_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_enable_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_enable_params_t
    __del__ = lambda self : None;
ble_gap_enable_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_enable_params_t_swigregister
ble_gap_enable_params_t_swigregister(ble_gap_enable_params_t)

class ble_gap_irk_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_irk_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_irk_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["irk"] = _pc_ble_driver_sd_api_v3.ble_gap_irk_t_irk_set
    __swig_getmethods__["irk"] = _pc_ble_driver_sd_api_v3.ble_gap_irk_t_irk_get
    if _newclass:irk = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_irk_t_irk_get, _pc_ble_driver_sd_api_v3.ble_gap_irk_t_irk_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_irk_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_irk_t
    __del__ = lambda self : None;
ble_gap_irk_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_irk_t_swigregister
ble_gap_irk_t_swigregister(ble_gap_irk_t)

class ble_gap_adv_ch_mask_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_adv_ch_mask_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_adv_ch_mask_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ch_37_off"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_37_off_set
    __swig_getmethods__["ch_37_off"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_37_off_get
    if _newclass:ch_37_off = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_37_off_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_37_off_set)
    __swig_setmethods__["ch_38_off"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_38_off_set
    __swig_getmethods__["ch_38_off"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_38_off_get
    if _newclass:ch_38_off = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_38_off_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_38_off_set)
    __swig_setmethods__["ch_39_off"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_39_off_set
    __swig_getmethods__["ch_39_off"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_39_off_get
    if _newclass:ch_39_off = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_39_off_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_ch_39_off_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_adv_ch_mask_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_adv_ch_mask_t
    __del__ = lambda self : None;
ble_gap_adv_ch_mask_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_adv_ch_mask_t_swigregister
ble_gap_adv_ch_mask_t_swigregister(ble_gap_adv_ch_mask_t)

class ble_gap_adv_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_adv_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_adv_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_type_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_type_set)
    __swig_setmethods__["p_peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_p_peer_addr_set
    __swig_getmethods__["p_peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_p_peer_addr_get
    if _newclass:p_peer_addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_p_peer_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_p_peer_addr_set)
    __swig_setmethods__["fp"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_fp_set
    __swig_getmethods__["fp"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_fp_get
    if _newclass:fp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_fp_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_fp_set)
    __swig_setmethods__["interval"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_interval_set
    __swig_getmethods__["interval"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_interval_get
    if _newclass:interval = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_interval_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_interval_set)
    __swig_setmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_timeout_set
    __swig_getmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_timeout_get
    if _newclass:timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_timeout_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_timeout_set)
    __swig_setmethods__["channel_mask"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_channel_mask_set
    __swig_getmethods__["channel_mask"] = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_channel_mask_get
    if _newclass:channel_mask = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_channel_mask_get, _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_channel_mask_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_adv_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_adv_params_t
    __del__ = lambda self : None;
ble_gap_adv_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_adv_params_t_swigregister
ble_gap_adv_params_t_swigregister(ble_gap_adv_params_t)

class ble_gap_scan_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_scan_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_scan_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["active"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_active_set
    __swig_getmethods__["active"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_active_get
    if _newclass:active = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_active_get, _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_active_set)
    __swig_setmethods__["use_whitelist"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_use_whitelist_set
    __swig_getmethods__["use_whitelist"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_use_whitelist_get
    if _newclass:use_whitelist = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_use_whitelist_get, _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_use_whitelist_set)
    __swig_setmethods__["adv_dir_report"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_adv_dir_report_set
    __swig_getmethods__["adv_dir_report"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_adv_dir_report_get
    if _newclass:adv_dir_report = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_adv_dir_report_get, _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_adv_dir_report_set)
    __swig_setmethods__["interval"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_interval_set
    __swig_getmethods__["interval"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_interval_get
    if _newclass:interval = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_interval_get, _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_interval_set)
    __swig_setmethods__["window"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_window_set
    __swig_getmethods__["window"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_window_get
    if _newclass:window = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_window_get, _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_window_set)
    __swig_setmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_timeout_set
    __swig_getmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_timeout_get
    if _newclass:timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_timeout_get, _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_timeout_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_scan_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_scan_params_t
    __del__ = lambda self : None;
ble_gap_scan_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_scan_params_t_swigregister
ble_gap_scan_params_t_swigregister(ble_gap_scan_params_t)

class ble_gap_privacy_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_privacy_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_privacy_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["privacy_mode"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_privacy_mode_set
    __swig_getmethods__["privacy_mode"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_privacy_mode_get
    if _newclass:privacy_mode = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_privacy_mode_get, _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_privacy_mode_set)
    __swig_setmethods__["private_addr_type"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_type_set
    __swig_getmethods__["private_addr_type"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_type_get
    if _newclass:private_addr_type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_type_get, _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_type_set)
    __swig_setmethods__["private_addr_cycle_s"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_cycle_s_set
    __swig_getmethods__["private_addr_cycle_s"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_cycle_s_get
    if _newclass:private_addr_cycle_s = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_cycle_s_get, _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_private_addr_cycle_s_set)
    __swig_setmethods__["p_device_irk"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_p_device_irk_set
    __swig_getmethods__["p_device_irk"] = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_p_device_irk_get
    if _newclass:p_device_irk = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_p_device_irk_get, _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_p_device_irk_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_privacy_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_privacy_params_t
    __del__ = lambda self : None;
ble_gap_privacy_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_privacy_params_t_swigregister
ble_gap_privacy_params_t_swigregister(ble_gap_privacy_params_t)

class ble_gap_sec_kdist_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_sec_kdist_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_sec_kdist_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["enc"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_enc_set
    __swig_getmethods__["enc"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_enc_get
    if _newclass:enc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_enc_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_enc_set)
    __swig_setmethods__["id"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_id_set
    __swig_getmethods__["id"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_id_get
    if _newclass:id = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_id_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_id_set)
    __swig_setmethods__["sign"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_sign_set
    __swig_getmethods__["sign"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_sign_get
    if _newclass:sign = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_sign_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_sign_set)
    __swig_setmethods__["link"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_link_set
    __swig_getmethods__["link"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_link_get
    if _newclass:link = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_link_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_link_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_sec_kdist_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_sec_kdist_t
    __del__ = lambda self : None;
ble_gap_sec_kdist_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_sec_kdist_t_swigregister
ble_gap_sec_kdist_t_swigregister(ble_gap_sec_kdist_t)

class ble_gap_sec_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_sec_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_sec_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bond"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_bond_set
    __swig_getmethods__["bond"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_bond_get
    if _newclass:bond = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_bond_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_bond_set)
    __swig_setmethods__["mitm"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_mitm_set
    __swig_getmethods__["mitm"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_mitm_get
    if _newclass:mitm = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_mitm_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_mitm_set)
    __swig_setmethods__["lesc"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_lesc_set
    __swig_getmethods__["lesc"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_lesc_get
    if _newclass:lesc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_lesc_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_lesc_set)
    __swig_setmethods__["keypress"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_keypress_set
    __swig_getmethods__["keypress"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_keypress_get
    if _newclass:keypress = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_keypress_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_keypress_set)
    __swig_setmethods__["io_caps"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_io_caps_set
    __swig_getmethods__["io_caps"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_io_caps_get
    if _newclass:io_caps = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_io_caps_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_io_caps_set)
    __swig_setmethods__["oob"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_oob_set
    __swig_getmethods__["oob"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_oob_get
    if _newclass:oob = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_oob_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_oob_set)
    __swig_setmethods__["min_key_size"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_min_key_size_set
    __swig_getmethods__["min_key_size"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_min_key_size_get
    if _newclass:min_key_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_min_key_size_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_min_key_size_set)
    __swig_setmethods__["max_key_size"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_max_key_size_set
    __swig_getmethods__["max_key_size"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_max_key_size_get
    if _newclass:max_key_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_max_key_size_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_max_key_size_set)
    __swig_setmethods__["kdist_own"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_own_set
    __swig_getmethods__["kdist_own"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_own_get
    if _newclass:kdist_own = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_own_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_own_set)
    __swig_setmethods__["kdist_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_peer_set
    __swig_getmethods__["kdist_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_peer_get
    if _newclass:kdist_peer = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_peer_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_kdist_peer_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_sec_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_sec_params_t
    __del__ = lambda self : None;
ble_gap_sec_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_sec_params_t_swigregister
ble_gap_sec_params_t_swigregister(ble_gap_sec_params_t)

class ble_gap_enc_info_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_enc_info_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_enc_info_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ltk"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_set
    __swig_getmethods__["ltk"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_get
    if _newclass:ltk = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_get, _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_set)
    __swig_setmethods__["lesc"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_lesc_set
    __swig_getmethods__["lesc"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_lesc_get
    if _newclass:lesc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_lesc_get, _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_lesc_set)
    __swig_setmethods__["auth"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_auth_set
    __swig_getmethods__["auth"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_auth_get
    if _newclass:auth = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_auth_get, _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_auth_set)
    __swig_setmethods__["ltk_len"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_len_set
    __swig_getmethods__["ltk_len"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_len_get
    if _newclass:ltk_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_len_get, _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_ltk_len_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_enc_info_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_enc_info_t
    __del__ = lambda self : None;
ble_gap_enc_info_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_enc_info_t_swigregister
ble_gap_enc_info_t_swigregister(ble_gap_enc_info_t)

class ble_gap_master_id_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_master_id_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_master_id_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ediv"] = _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_ediv_set
    __swig_getmethods__["ediv"] = _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_ediv_get
    if _newclass:ediv = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_master_id_t_ediv_get, _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_ediv_set)
    __swig_setmethods__["rand"] = _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_rand_set
    __swig_getmethods__["rand"] = _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_rand_get
    if _newclass:rand = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_master_id_t_rand_get, _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_rand_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_master_id_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_master_id_t
    __del__ = lambda self : None;
ble_gap_master_id_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_master_id_t_swigregister
ble_gap_master_id_t_swigregister(ble_gap_master_id_t)

class ble_gap_sign_info_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_sign_info_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_sign_info_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["csrk"] = _pc_ble_driver_sd_api_v3.ble_gap_sign_info_t_csrk_set
    __swig_getmethods__["csrk"] = _pc_ble_driver_sd_api_v3.ble_gap_sign_info_t_csrk_get
    if _newclass:csrk = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sign_info_t_csrk_get, _pc_ble_driver_sd_api_v3.ble_gap_sign_info_t_csrk_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_sign_info_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_sign_info_t
    __del__ = lambda self : None;
ble_gap_sign_info_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_sign_info_t_swigregister
ble_gap_sign_info_t_swigregister(ble_gap_sign_info_t)

class ble_gap_lesc_p256_pk_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_lesc_p256_pk_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_lesc_p256_pk_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pk"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_p256_pk_t_pk_set
    __swig_getmethods__["pk"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_p256_pk_t_pk_get
    if _newclass:pk = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_lesc_p256_pk_t_pk_get, _pc_ble_driver_sd_api_v3.ble_gap_lesc_p256_pk_t_pk_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_lesc_p256_pk_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_lesc_p256_pk_t
    __del__ = lambda self : None;
ble_gap_lesc_p256_pk_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_lesc_p256_pk_t_swigregister
ble_gap_lesc_p256_pk_t_swigregister(ble_gap_lesc_p256_pk_t)

class ble_gap_lesc_dhkey_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_lesc_dhkey_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_lesc_dhkey_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["key"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_dhkey_t_key_set
    __swig_getmethods__["key"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_dhkey_t_key_get
    if _newclass:key = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_lesc_dhkey_t_key_get, _pc_ble_driver_sd_api_v3.ble_gap_lesc_dhkey_t_key_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_lesc_dhkey_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_lesc_dhkey_t
    __del__ = lambda self : None;
ble_gap_lesc_dhkey_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_lesc_dhkey_t_swigregister
ble_gap_lesc_dhkey_t_swigregister(ble_gap_lesc_dhkey_t)

class ble_gap_lesc_oob_data_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_lesc_oob_data_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_lesc_oob_data_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["addr"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_addr_set
    __swig_getmethods__["addr"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_addr_get
    if _newclass:addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_addr_set)
    __swig_setmethods__["r"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_r_set
    __swig_getmethods__["r"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_r_get
    if _newclass:r = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_r_get, _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_r_set)
    __swig_setmethods__["c"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_c_set
    __swig_getmethods__["c"] = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_c_get
    if _newclass:c = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_c_get, _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_c_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_lesc_oob_data_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_lesc_oob_data_t
    __del__ = lambda self : None;
ble_gap_lesc_oob_data_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_lesc_oob_data_t_swigregister
ble_gap_lesc_oob_data_t_swigregister(ble_gap_lesc_oob_data_t)

class ble_gap_evt_connected_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_connected_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_connected_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_peer_addr_set
    __swig_getmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_peer_addr_get
    if _newclass:peer_addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_peer_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_peer_addr_set)
    __swig_setmethods__["role"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_role_set
    __swig_getmethods__["role"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_role_get
    if _newclass:role = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_role_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_role_set)
    __swig_setmethods__["conn_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_conn_params_set
    __swig_getmethods__["conn_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_conn_params_get
    if _newclass:conn_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_conn_params_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_conn_params_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_connected_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_connected_t
    __del__ = lambda self : None;
ble_gap_evt_connected_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_connected_t_swigregister
ble_gap_evt_connected_t_swigregister(ble_gap_evt_connected_t)

class ble_gap_evt_disconnected_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_disconnected_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_disconnected_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["reason"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_disconnected_t_reason_set
    __swig_getmethods__["reason"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_disconnected_t_reason_get
    if _newclass:reason = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_disconnected_t_reason_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_disconnected_t_reason_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_disconnected_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_disconnected_t
    __del__ = lambda self : None;
ble_gap_evt_disconnected_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_disconnected_t_swigregister
ble_gap_evt_disconnected_t_swigregister(ble_gap_evt_disconnected_t)

class ble_gap_evt_conn_param_update_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_conn_param_update_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_conn_param_update_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_t_conn_params_set
    __swig_getmethods__["conn_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_t_conn_params_get
    if _newclass:conn_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_t_conn_params_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_t_conn_params_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_conn_param_update_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_conn_param_update_t
    __del__ = lambda self : None;
ble_gap_evt_conn_param_update_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_t_swigregister
ble_gap_evt_conn_param_update_t_swigregister(ble_gap_evt_conn_param_update_t)

class ble_gap_evt_sec_params_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_sec_params_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_sec_params_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["peer_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_params_request_t_peer_params_set
    __swig_getmethods__["peer_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_params_request_t_peer_params_get
    if _newclass:peer_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_params_request_t_peer_params_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_params_request_t_peer_params_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_sec_params_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_sec_params_request_t
    __del__ = lambda self : None;
ble_gap_evt_sec_params_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_params_request_t_swigregister
ble_gap_evt_sec_params_request_t_swigregister(ble_gap_evt_sec_params_request_t)

class ble_gap_evt_sec_info_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_sec_info_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_sec_info_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_peer_addr_set
    __swig_getmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_peer_addr_get
    if _newclass:peer_addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_peer_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_peer_addr_set)
    __swig_setmethods__["master_id"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_master_id_set
    __swig_getmethods__["master_id"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_master_id_get
    if _newclass:master_id = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_master_id_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_master_id_set)
    __swig_setmethods__["enc_info"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_enc_info_set
    __swig_getmethods__["enc_info"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_enc_info_get
    if _newclass:enc_info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_enc_info_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_enc_info_set)
    __swig_setmethods__["id_info"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_id_info_set
    __swig_getmethods__["id_info"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_id_info_get
    if _newclass:id_info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_id_info_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_id_info_set)
    __swig_setmethods__["sign_info"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_sign_info_set
    __swig_getmethods__["sign_info"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_sign_info_get
    if _newclass:sign_info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_sign_info_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_sign_info_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_sec_info_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_sec_info_request_t
    __del__ = lambda self : None;
ble_gap_evt_sec_info_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_info_request_t_swigregister
ble_gap_evt_sec_info_request_t_swigregister(ble_gap_evt_sec_info_request_t)

class ble_gap_evt_passkey_display_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_passkey_display_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_passkey_display_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["passkey"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_passkey_set
    __swig_getmethods__["passkey"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_passkey_get
    if _newclass:passkey = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_passkey_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_passkey_set)
    __swig_setmethods__["match_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_match_request_set
    __swig_getmethods__["match_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_match_request_get
    if _newclass:match_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_match_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_match_request_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_passkey_display_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_passkey_display_t
    __del__ = lambda self : None;
ble_gap_evt_passkey_display_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_passkey_display_t_swigregister
ble_gap_evt_passkey_display_t_swigregister(ble_gap_evt_passkey_display_t)

class ble_gap_evt_key_pressed_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_key_pressed_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_key_pressed_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["kp_not"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_key_pressed_t_kp_not_set
    __swig_getmethods__["kp_not"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_key_pressed_t_kp_not_get
    if _newclass:kp_not = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_key_pressed_t_kp_not_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_key_pressed_t_kp_not_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_key_pressed_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_key_pressed_t
    __del__ = lambda self : None;
ble_gap_evt_key_pressed_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_key_pressed_t_swigregister
ble_gap_evt_key_pressed_t_swigregister(ble_gap_evt_key_pressed_t)

class ble_gap_evt_auth_key_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_auth_key_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_auth_key_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["key_type"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_key_request_t_key_type_set
    __swig_getmethods__["key_type"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_key_request_t_key_type_get
    if _newclass:key_type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_key_request_t_key_type_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_key_request_t_key_type_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_auth_key_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_auth_key_request_t
    __del__ = lambda self : None;
ble_gap_evt_auth_key_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_key_request_t_swigregister
ble_gap_evt_auth_key_request_t_swigregister(ble_gap_evt_auth_key_request_t)

class ble_gap_evt_lesc_dhkey_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_lesc_dhkey_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_lesc_dhkey_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["p_pk_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_p_pk_peer_set
    __swig_getmethods__["p_pk_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_p_pk_peer_get
    if _newclass:p_pk_peer = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_p_pk_peer_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_p_pk_peer_set)
    __swig_setmethods__["oobd_req"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_oobd_req_set
    __swig_getmethods__["oobd_req"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_oobd_req_get
    if _newclass:oobd_req = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_oobd_req_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_oobd_req_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_lesc_dhkey_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_lesc_dhkey_request_t
    __del__ = lambda self : None;
ble_gap_evt_lesc_dhkey_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_lesc_dhkey_request_t_swigregister
ble_gap_evt_lesc_dhkey_request_t_swigregister(ble_gap_evt_lesc_dhkey_request_t)

class ble_gap_sec_levels_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_sec_levels_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_sec_levels_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lv1"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv1_set
    __swig_getmethods__["lv1"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv1_get
    if _newclass:lv1 = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv1_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv1_set)
    __swig_setmethods__["lv2"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv2_set
    __swig_getmethods__["lv2"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv2_get
    if _newclass:lv2 = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv2_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv2_set)
    __swig_setmethods__["lv3"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv3_set
    __swig_getmethods__["lv3"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv3_get
    if _newclass:lv3 = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv3_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv3_set)
    __swig_setmethods__["lv4"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv4_set
    __swig_getmethods__["lv4"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv4_get
    if _newclass:lv4 = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv4_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_lv4_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_sec_levels_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_sec_levels_t
    __del__ = lambda self : None;
ble_gap_sec_levels_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_sec_levels_t_swigregister
ble_gap_sec_levels_t_swigregister(ble_gap_sec_levels_t)

class ble_gap_enc_key_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_enc_key_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_enc_key_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["enc_info"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_enc_info_set
    __swig_getmethods__["enc_info"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_enc_info_get
    if _newclass:enc_info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_enc_info_get, _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_enc_info_set)
    __swig_setmethods__["master_id"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_master_id_set
    __swig_getmethods__["master_id"] = _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_master_id_get
    if _newclass:master_id = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_master_id_get, _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_master_id_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_enc_key_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_enc_key_t
    __del__ = lambda self : None;
ble_gap_enc_key_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_enc_key_t_swigregister
ble_gap_enc_key_t_swigregister(ble_gap_enc_key_t)

class ble_gap_id_key_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_id_key_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_id_key_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id_info"] = _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_info_set
    __swig_getmethods__["id_info"] = _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_info_get
    if _newclass:id_info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_info_get, _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_info_set)
    __swig_setmethods__["id_addr_info"] = _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_addr_info_set
    __swig_getmethods__["id_addr_info"] = _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_addr_info_get
    if _newclass:id_addr_info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_addr_info_get, _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_id_addr_info_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_id_key_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_id_key_t
    __del__ = lambda self : None;
ble_gap_id_key_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_id_key_t_swigregister
ble_gap_id_key_t_swigregister(ble_gap_id_key_t)

class ble_gap_sec_keys_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_sec_keys_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_sec_keys_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["p_enc_key"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_enc_key_set
    __swig_getmethods__["p_enc_key"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_enc_key_get
    if _newclass:p_enc_key = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_enc_key_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_enc_key_set)
    __swig_setmethods__["p_id_key"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_id_key_set
    __swig_getmethods__["p_id_key"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_id_key_get
    if _newclass:p_id_key = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_id_key_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_id_key_set)
    __swig_setmethods__["p_sign_key"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_sign_key_set
    __swig_getmethods__["p_sign_key"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_sign_key_get
    if _newclass:p_sign_key = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_sign_key_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_sign_key_set)
    __swig_setmethods__["p_pk"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_pk_set
    __swig_getmethods__["p_pk"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_pk_get
    if _newclass:p_pk = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_pk_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_p_pk_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_sec_keys_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_sec_keys_t
    __del__ = lambda self : None;
ble_gap_sec_keys_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_sec_keys_t_swigregister
ble_gap_sec_keys_t_swigregister(ble_gap_sec_keys_t)

class ble_gap_sec_keyset_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_sec_keyset_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_sec_keyset_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["keys_own"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_own_set
    __swig_getmethods__["keys_own"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_own_get
    if _newclass:keys_own = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_own_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_own_set)
    __swig_setmethods__["keys_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_peer_set
    __swig_getmethods__["keys_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_peer_get
    if _newclass:keys_peer = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_peer_get, _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_keys_peer_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_sec_keyset_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_sec_keyset_t
    __del__ = lambda self : None;
ble_gap_sec_keyset_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_sec_keyset_t_swigregister
ble_gap_sec_keyset_t_swigregister(ble_gap_sec_keyset_t)

class ble_gap_evt_auth_status_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_auth_status_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_auth_status_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["auth_status"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_auth_status_set
    __swig_getmethods__["auth_status"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_auth_status_get
    if _newclass:auth_status = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_auth_status_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_auth_status_set)
    __swig_setmethods__["error_src"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_error_src_set
    __swig_getmethods__["error_src"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_error_src_get
    if _newclass:error_src = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_error_src_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_error_src_set)
    __swig_setmethods__["bonded"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_bonded_set
    __swig_getmethods__["bonded"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_bonded_get
    if _newclass:bonded = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_bonded_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_bonded_set)
    __swig_setmethods__["sm1_levels"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm1_levels_set
    __swig_getmethods__["sm1_levels"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm1_levels_get
    if _newclass:sm1_levels = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm1_levels_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm1_levels_set)
    __swig_setmethods__["sm2_levels"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm2_levels_set
    __swig_getmethods__["sm2_levels"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm2_levels_get
    if _newclass:sm2_levels = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm2_levels_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_sm2_levels_set)
    __swig_setmethods__["kdist_own"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_own_set
    __swig_getmethods__["kdist_own"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_own_get
    if _newclass:kdist_own = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_own_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_own_set)
    __swig_setmethods__["kdist_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_peer_set
    __swig_getmethods__["kdist_peer"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_peer_get
    if _newclass:kdist_peer = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_peer_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_kdist_peer_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_auth_status_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_auth_status_t
    __del__ = lambda self : None;
ble_gap_evt_auth_status_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_auth_status_t_swigregister
ble_gap_evt_auth_status_t_swigregister(ble_gap_evt_auth_status_t)

class ble_gap_evt_conn_sec_update_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_conn_sec_update_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_conn_sec_update_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_sec"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_sec_update_t_conn_sec_set
    __swig_getmethods__["conn_sec"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_sec_update_t_conn_sec_get
    if _newclass:conn_sec = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_conn_sec_update_t_conn_sec_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_sec_update_t_conn_sec_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_conn_sec_update_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_conn_sec_update_t
    __del__ = lambda self : None;
ble_gap_evt_conn_sec_update_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_sec_update_t_swigregister
ble_gap_evt_conn_sec_update_t_swigregister(ble_gap_evt_conn_sec_update_t)

class ble_gap_evt_timeout_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_timeout_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_timeout_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["src"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_timeout_t_src_set
    __swig_getmethods__["src"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_timeout_t_src_get
    if _newclass:src = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_timeout_t_src_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_timeout_t_src_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_timeout_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_timeout_t
    __del__ = lambda self : None;
ble_gap_evt_timeout_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_timeout_t_swigregister
ble_gap_evt_timeout_t_swigregister(ble_gap_evt_timeout_t)

class ble_gap_evt_rssi_changed_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_rssi_changed_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_rssi_changed_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["rssi"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_rssi_changed_t_rssi_set
    __swig_getmethods__["rssi"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_rssi_changed_t_rssi_get
    if _newclass:rssi = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_rssi_changed_t_rssi_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_rssi_changed_t_rssi_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_rssi_changed_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_rssi_changed_t
    __del__ = lambda self : None;
ble_gap_evt_rssi_changed_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_rssi_changed_t_swigregister
ble_gap_evt_rssi_changed_t_swigregister(ble_gap_evt_rssi_changed_t)

class ble_gap_evt_adv_report_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_adv_report_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_adv_report_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_peer_addr_set
    __swig_getmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_peer_addr_get
    if _newclass:peer_addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_peer_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_peer_addr_set)
    __swig_setmethods__["direct_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_direct_addr_set
    __swig_getmethods__["direct_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_direct_addr_get
    if _newclass:direct_addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_direct_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_direct_addr_set)
    __swig_setmethods__["rssi"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_rssi_set
    __swig_getmethods__["rssi"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_rssi_get
    if _newclass:rssi = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_rssi_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_rssi_set)
    __swig_setmethods__["scan_rsp"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_scan_rsp_set
    __swig_getmethods__["scan_rsp"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_scan_rsp_get
    if _newclass:scan_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_scan_rsp_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_scan_rsp_set)
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_type_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_type_set)
    __swig_setmethods__["dlen"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_dlen_set
    __swig_getmethods__["dlen"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_dlen_get
    if _newclass:dlen = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_dlen_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_dlen_set)
    __swig_setmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_data_set
    __swig_getmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_data_get
    if _newclass:data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_data_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_adv_report_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_adv_report_t
    __del__ = lambda self : None;
ble_gap_evt_adv_report_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_adv_report_t_swigregister
ble_gap_evt_adv_report_t_swigregister(ble_gap_evt_adv_report_t)

class ble_gap_evt_sec_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_sec_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_sec_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bond"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_bond_set
    __swig_getmethods__["bond"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_bond_get
    if _newclass:bond = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_bond_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_bond_set)
    __swig_setmethods__["mitm"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_mitm_set
    __swig_getmethods__["mitm"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_mitm_get
    if _newclass:mitm = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_mitm_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_mitm_set)
    __swig_setmethods__["lesc"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_lesc_set
    __swig_getmethods__["lesc"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_lesc_get
    if _newclass:lesc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_lesc_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_lesc_set)
    __swig_setmethods__["keypress"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_keypress_set
    __swig_getmethods__["keypress"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_keypress_get
    if _newclass:keypress = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_keypress_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_keypress_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_sec_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_sec_request_t
    __del__ = lambda self : None;
ble_gap_evt_sec_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_sec_request_t_swigregister
ble_gap_evt_sec_request_t_swigregister(ble_gap_evt_sec_request_t)

class ble_gap_evt_conn_param_update_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_conn_param_update_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_conn_param_update_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_request_t_conn_params_set
    __swig_getmethods__["conn_params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_request_t_conn_params_get
    if _newclass:conn_params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_request_t_conn_params_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_request_t_conn_params_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_conn_param_update_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_conn_param_update_request_t
    __del__ = lambda self : None;
ble_gap_evt_conn_param_update_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_conn_param_update_request_t_swigregister
ble_gap_evt_conn_param_update_request_t_swigregister(ble_gap_evt_conn_param_update_request_t)

class ble_gap_evt_scan_req_report_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_scan_req_report_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_scan_req_report_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["rssi"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_rssi_set
    __swig_getmethods__["rssi"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_rssi_get
    if _newclass:rssi = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_rssi_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_rssi_set)
    __swig_setmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_peer_addr_set
    __swig_getmethods__["peer_addr"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_peer_addr_get
    if _newclass:peer_addr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_peer_addr_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_peer_addr_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_scan_req_report_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_scan_req_report_t
    __del__ = lambda self : None;
ble_gap_evt_scan_req_report_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_scan_req_report_t_swigregister
ble_gap_evt_scan_req_report_t_swigregister(ble_gap_evt_scan_req_report_t)

class ble_gap_evt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_conn_handle_set)
    __swig_getmethods__["params"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_get
    if _newclass:params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_t
    __del__ = lambda self : None;
ble_gap_evt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_swigregister
ble_gap_evt_t_swigregister(ble_gap_evt_t)

class ble_gap_evt_t_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_evt_t_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_evt_t_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["connected"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_connected_set
    __swig_getmethods__["connected"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_connected_get
    if _newclass:connected = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_connected_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_connected_set)
    __swig_setmethods__["disconnected"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_disconnected_set
    __swig_getmethods__["disconnected"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_disconnected_get
    if _newclass:disconnected = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_disconnected_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_disconnected_set)
    __swig_setmethods__["conn_param_update"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_set
    __swig_getmethods__["conn_param_update"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_get
    if _newclass:conn_param_update = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_set)
    __swig_setmethods__["sec_params_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_params_request_set
    __swig_getmethods__["sec_params_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_params_request_get
    if _newclass:sec_params_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_params_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_params_request_set)
    __swig_setmethods__["sec_info_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_info_request_set
    __swig_getmethods__["sec_info_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_info_request_get
    if _newclass:sec_info_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_info_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_info_request_set)
    __swig_setmethods__["passkey_display"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_passkey_display_set
    __swig_getmethods__["passkey_display"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_passkey_display_get
    if _newclass:passkey_display = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_passkey_display_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_passkey_display_set)
    __swig_setmethods__["key_pressed"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_key_pressed_set
    __swig_getmethods__["key_pressed"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_key_pressed_get
    if _newclass:key_pressed = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_key_pressed_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_key_pressed_set)
    __swig_setmethods__["auth_key_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_key_request_set
    __swig_getmethods__["auth_key_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_key_request_get
    if _newclass:auth_key_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_key_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_key_request_set)
    __swig_setmethods__["lesc_dhkey_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_lesc_dhkey_request_set
    __swig_getmethods__["lesc_dhkey_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_lesc_dhkey_request_get
    if _newclass:lesc_dhkey_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_lesc_dhkey_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_lesc_dhkey_request_set)
    __swig_setmethods__["auth_status"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_status_set
    __swig_getmethods__["auth_status"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_status_get
    if _newclass:auth_status = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_status_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_auth_status_set)
    __swig_setmethods__["conn_sec_update"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_sec_update_set
    __swig_getmethods__["conn_sec_update"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_sec_update_get
    if _newclass:conn_sec_update = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_sec_update_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_sec_update_set)
    __swig_setmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_timeout_set
    __swig_getmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_timeout_get
    if _newclass:timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_timeout_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_timeout_set)
    __swig_setmethods__["rssi_changed"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_rssi_changed_set
    __swig_getmethods__["rssi_changed"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_rssi_changed_get
    if _newclass:rssi_changed = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_rssi_changed_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_rssi_changed_set)
    __swig_setmethods__["adv_report"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_adv_report_set
    __swig_getmethods__["adv_report"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_adv_report_get
    if _newclass:adv_report = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_adv_report_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_adv_report_set)
    __swig_setmethods__["sec_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_request_set
    __swig_getmethods__["sec_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_request_get
    if _newclass:sec_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_sec_request_set)
    __swig_setmethods__["conn_param_update_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_request_set
    __swig_getmethods__["conn_param_update_request"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_request_get
    if _newclass:conn_param_update_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_request_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_conn_param_update_request_set)
    __swig_setmethods__["scan_req_report"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_scan_req_report_set
    __swig_getmethods__["scan_req_report"] = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_scan_req_report_get
    if _newclass:scan_req_report = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_scan_req_report_get, _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_scan_req_report_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_evt_t_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_evt_t_params
    __del__ = lambda self : None;
ble_gap_evt_t_params_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_evt_t_params_swigregister
ble_gap_evt_t_params_swigregister(ble_gap_evt_t_params)

class ble_gap_opt_ch_map_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_ch_map_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_ch_map_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_conn_handle_set)
    __swig_setmethods__["ch_map"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_ch_map_set
    __swig_getmethods__["ch_map"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_ch_map_get
    if _newclass:ch_map = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_ch_map_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_ch_map_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_ch_map_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_ch_map_t
    __del__ = lambda self : None;
ble_gap_opt_ch_map_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_ch_map_t_swigregister
ble_gap_opt_ch_map_t_swigregister(ble_gap_opt_ch_map_t)

class ble_gap_opt_local_conn_latency_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_local_conn_latency_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_local_conn_latency_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_conn_handle_set)
    __swig_setmethods__["requested_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_requested_latency_set
    __swig_getmethods__["requested_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_requested_latency_get
    if _newclass:requested_latency = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_requested_latency_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_requested_latency_set)
    __swig_setmethods__["p_actual_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_p_actual_latency_set
    __swig_getmethods__["p_actual_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_p_actual_latency_get
    if _newclass:p_actual_latency = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_p_actual_latency_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_p_actual_latency_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_local_conn_latency_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_local_conn_latency_t
    __del__ = lambda self : None;
ble_gap_opt_local_conn_latency_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_local_conn_latency_t_swigregister
ble_gap_opt_local_conn_latency_t_swigregister(ble_gap_opt_local_conn_latency_t)

class ble_gap_opt_passkey_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_passkey_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_passkey_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["p_passkey"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_passkey_t_p_passkey_set
    __swig_getmethods__["p_passkey"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_passkey_t_p_passkey_get
    if _newclass:p_passkey = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_passkey_t_p_passkey_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_passkey_t_p_passkey_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_passkey_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_passkey_t
    __del__ = lambda self : None;
ble_gap_opt_passkey_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_passkey_t_swigregister
ble_gap_opt_passkey_t_swigregister(ble_gap_opt_passkey_t)

class ble_gap_opt_scan_req_report_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_scan_req_report_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_scan_req_report_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["enable"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_scan_req_report_t_enable_set
    __swig_getmethods__["enable"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_scan_req_report_t_enable_get
    if _newclass:enable = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_scan_req_report_t_enable_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_scan_req_report_t_enable_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_scan_req_report_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_scan_req_report_t
    __del__ = lambda self : None;
ble_gap_opt_scan_req_report_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_scan_req_report_t_swigregister
ble_gap_opt_scan_req_report_t_swigregister(ble_gap_opt_scan_req_report_t)

class ble_gap_opt_compat_mode_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_compat_mode_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_compat_mode_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mode_1_enable"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_compat_mode_t_mode_1_enable_set
    __swig_getmethods__["mode_1_enable"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_compat_mode_t_mode_1_enable_get
    if _newclass:mode_1_enable = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_compat_mode_t_mode_1_enable_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_compat_mode_t_mode_1_enable_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_compat_mode_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_compat_mode_t
    __del__ = lambda self : None;
ble_gap_opt_compat_mode_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_compat_mode_t_swigregister
ble_gap_opt_compat_mode_t_swigregister(ble_gap_opt_compat_mode_t)

class ble_gap_opt_ext_len_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_ext_len_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_ext_len_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["rxtx_max_pdu_payload_size"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_ext_len_t_rxtx_max_pdu_payload_size_set
    __swig_getmethods__["rxtx_max_pdu_payload_size"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_ext_len_t_rxtx_max_pdu_payload_size_get
    if _newclass:rxtx_max_pdu_payload_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_ext_len_t_rxtx_max_pdu_payload_size_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_ext_len_t_rxtx_max_pdu_payload_size_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_ext_len_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_ext_len_t
    __del__ = lambda self : None;
ble_gap_opt_ext_len_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_ext_len_t_swigregister
ble_gap_opt_ext_len_t_swigregister(ble_gap_opt_ext_len_t)

class ble_gap_opt_auth_payload_timeout_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_auth_payload_timeout_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_auth_payload_timeout_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_conn_handle_set)
    __swig_setmethods__["auth_payload_timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_auth_payload_timeout_set
    __swig_getmethods__["auth_payload_timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_auth_payload_timeout_get
    if _newclass:auth_payload_timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_auth_payload_timeout_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_auth_payload_timeout_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_auth_payload_timeout_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_auth_payload_timeout_t
    __del__ = lambda self : None;
ble_gap_opt_auth_payload_timeout_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_auth_payload_timeout_t_swigregister
ble_gap_opt_auth_payload_timeout_t_swigregister(ble_gap_opt_auth_payload_timeout_t)

class ble_gap_opt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gap_opt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gap_opt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ch_map"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_ch_map_set
    __swig_getmethods__["ch_map"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_ch_map_get
    if _newclass:ch_map = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_ch_map_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_ch_map_set)
    __swig_setmethods__["local_conn_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_local_conn_latency_set
    __swig_getmethods__["local_conn_latency"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_local_conn_latency_get
    if _newclass:local_conn_latency = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_local_conn_latency_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_local_conn_latency_set)
    __swig_setmethods__["passkey"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_passkey_set
    __swig_getmethods__["passkey"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_passkey_get
    if _newclass:passkey = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_passkey_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_passkey_set)
    __swig_setmethods__["scan_req_report"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_scan_req_report_set
    __swig_getmethods__["scan_req_report"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_scan_req_report_get
    if _newclass:scan_req_report = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_scan_req_report_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_scan_req_report_set)
    __swig_setmethods__["compat_mode"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_compat_mode_set
    __swig_getmethods__["compat_mode"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_compat_mode_get
    if _newclass:compat_mode = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_compat_mode_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_compat_mode_set)
    __swig_setmethods__["ext_len"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_ext_len_set
    __swig_getmethods__["ext_len"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_ext_len_get
    if _newclass:ext_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_ext_len_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_ext_len_set)
    __swig_setmethods__["auth_payload_timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_auth_payload_timeout_set
    __swig_getmethods__["auth_payload_timeout"] = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_auth_payload_timeout_get
    if _newclass:auth_payload_timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gap_opt_t_auth_payload_timeout_get, _pc_ble_driver_sd_api_v3.ble_gap_opt_t_auth_payload_timeout_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gap_opt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gap_opt_t
    __del__ = lambda self : None;
ble_gap_opt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gap_opt_t_swigregister
ble_gap_opt_t_swigregister(ble_gap_opt_t)


def sd_ble_gap_addr_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_addr_set(*args)
sd_ble_gap_addr_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_addr_set

def sd_ble_gap_addr_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_addr_get(*args)
sd_ble_gap_addr_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_addr_get

def sd_ble_gap_whitelist_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_whitelist_set(*args)
sd_ble_gap_whitelist_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_whitelist_set

def sd_ble_gap_device_identities_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_device_identities_set(*args)
sd_ble_gap_device_identities_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_device_identities_set

def sd_ble_gap_privacy_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_privacy_set(*args)
sd_ble_gap_privacy_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_privacy_set

def sd_ble_gap_privacy_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_privacy_get(*args)
sd_ble_gap_privacy_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_privacy_get

def sd_ble_gap_adv_data_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_adv_data_set(*args)
sd_ble_gap_adv_data_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_adv_data_set

def sd_ble_gap_adv_start(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_adv_start(*args)
sd_ble_gap_adv_start = _pc_ble_driver_sd_api_v3.sd_ble_gap_adv_start

def sd_ble_gap_adv_stop(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_adv_stop(*args)
sd_ble_gap_adv_stop = _pc_ble_driver_sd_api_v3.sd_ble_gap_adv_stop

def sd_ble_gap_conn_param_update(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_conn_param_update(*args)
sd_ble_gap_conn_param_update = _pc_ble_driver_sd_api_v3.sd_ble_gap_conn_param_update

def sd_ble_gap_disconnect(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_disconnect(*args)
sd_ble_gap_disconnect = _pc_ble_driver_sd_api_v3.sd_ble_gap_disconnect

def sd_ble_gap_tx_power_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_tx_power_set(*args)
sd_ble_gap_tx_power_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_tx_power_set

def sd_ble_gap_appearance_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_appearance_set(*args)
sd_ble_gap_appearance_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_appearance_set

def sd_ble_gap_appearance_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_appearance_get(*args)
sd_ble_gap_appearance_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_appearance_get

def sd_ble_gap_ppcp_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_ppcp_set(*args)
sd_ble_gap_ppcp_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_ppcp_set

def sd_ble_gap_ppcp_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_ppcp_get(*args)
sd_ble_gap_ppcp_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_ppcp_get

def sd_ble_gap_device_name_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_device_name_set(*args)
sd_ble_gap_device_name_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_device_name_set

def sd_ble_gap_device_name_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_device_name_get(*args)
sd_ble_gap_device_name_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_device_name_get

def sd_ble_gap_authenticate(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_authenticate(*args)
sd_ble_gap_authenticate = _pc_ble_driver_sd_api_v3.sd_ble_gap_authenticate

def sd_ble_gap_sec_params_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_sec_params_reply(*args)
sd_ble_gap_sec_params_reply = _pc_ble_driver_sd_api_v3.sd_ble_gap_sec_params_reply

def sd_ble_gap_auth_key_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_auth_key_reply(*args)
sd_ble_gap_auth_key_reply = _pc_ble_driver_sd_api_v3.sd_ble_gap_auth_key_reply

def sd_ble_gap_lesc_dhkey_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_lesc_dhkey_reply(*args)
sd_ble_gap_lesc_dhkey_reply = _pc_ble_driver_sd_api_v3.sd_ble_gap_lesc_dhkey_reply

def sd_ble_gap_keypress_notify(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_keypress_notify(*args)
sd_ble_gap_keypress_notify = _pc_ble_driver_sd_api_v3.sd_ble_gap_keypress_notify

def sd_ble_gap_lesc_oob_data_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_lesc_oob_data_get(*args)
sd_ble_gap_lesc_oob_data_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_lesc_oob_data_get

def sd_ble_gap_lesc_oob_data_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_lesc_oob_data_set(*args)
sd_ble_gap_lesc_oob_data_set = _pc_ble_driver_sd_api_v3.sd_ble_gap_lesc_oob_data_set

def sd_ble_gap_encrypt(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_encrypt(*args)
sd_ble_gap_encrypt = _pc_ble_driver_sd_api_v3.sd_ble_gap_encrypt

def sd_ble_gap_sec_info_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_sec_info_reply(*args)
sd_ble_gap_sec_info_reply = _pc_ble_driver_sd_api_v3.sd_ble_gap_sec_info_reply

def sd_ble_gap_conn_sec_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_conn_sec_get(*args)
sd_ble_gap_conn_sec_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_conn_sec_get

def sd_ble_gap_rssi_start(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_rssi_start(*args)
sd_ble_gap_rssi_start = _pc_ble_driver_sd_api_v3.sd_ble_gap_rssi_start

def sd_ble_gap_rssi_stop(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_rssi_stop(*args)
sd_ble_gap_rssi_stop = _pc_ble_driver_sd_api_v3.sd_ble_gap_rssi_stop

def sd_ble_gap_rssi_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_rssi_get(*args)
sd_ble_gap_rssi_get = _pc_ble_driver_sd_api_v3.sd_ble_gap_rssi_get

def sd_ble_gap_scan_start(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_scan_start(*args)
sd_ble_gap_scan_start = _pc_ble_driver_sd_api_v3.sd_ble_gap_scan_start

def sd_ble_gap_scan_stop(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_scan_stop(*args)
sd_ble_gap_scan_stop = _pc_ble_driver_sd_api_v3.sd_ble_gap_scan_stop

def sd_ble_gap_connect(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_connect(*args)
sd_ble_gap_connect = _pc_ble_driver_sd_api_v3.sd_ble_gap_connect

def sd_ble_gap_connect_cancel(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gap_connect_cancel(*args)
sd_ble_gap_connect_cancel = _pc_ble_driver_sd_api_v3.sd_ble_gap_connect_cancel
GATT_MTU_SIZE_DEFAULT = _pc_ble_driver_sd_api_v3.GATT_MTU_SIZE_DEFAULT
BLE_GATT_HANDLE_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATT_HANDLE_INVALID
BLE_GATT_HANDLE_START = _pc_ble_driver_sd_api_v3.BLE_GATT_HANDLE_START
BLE_GATT_HANDLE_END = _pc_ble_driver_sd_api_v3.BLE_GATT_HANDLE_END
BLE_GATT_TIMEOUT_SRC_PROTOCOL = _pc_ble_driver_sd_api_v3.BLE_GATT_TIMEOUT_SRC_PROTOCOL
BLE_GATT_OP_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATT_OP_INVALID
BLE_GATT_OP_WRITE_REQ = _pc_ble_driver_sd_api_v3.BLE_GATT_OP_WRITE_REQ
BLE_GATT_OP_WRITE_CMD = _pc_ble_driver_sd_api_v3.BLE_GATT_OP_WRITE_CMD
BLE_GATT_OP_SIGN_WRITE_CMD = _pc_ble_driver_sd_api_v3.BLE_GATT_OP_SIGN_WRITE_CMD
BLE_GATT_OP_PREP_WRITE_REQ = _pc_ble_driver_sd_api_v3.BLE_GATT_OP_PREP_WRITE_REQ
BLE_GATT_OP_EXEC_WRITE_REQ = _pc_ble_driver_sd_api_v3.BLE_GATT_OP_EXEC_WRITE_REQ
BLE_GATT_EXEC_WRITE_FLAG_PREPARED_CANCEL = _pc_ble_driver_sd_api_v3.BLE_GATT_EXEC_WRITE_FLAG_PREPARED_CANCEL
BLE_GATT_EXEC_WRITE_FLAG_PREPARED_WRITE = _pc_ble_driver_sd_api_v3.BLE_GATT_EXEC_WRITE_FLAG_PREPARED_WRITE
BLE_GATT_HVX_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATT_HVX_INVALID
BLE_GATT_HVX_NOTIFICATION = _pc_ble_driver_sd_api_v3.BLE_GATT_HVX_NOTIFICATION
BLE_GATT_HVX_INDICATION = _pc_ble_driver_sd_api_v3.BLE_GATT_HVX_INDICATION
BLE_GATT_STATUS_SUCCESS = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_SUCCESS
BLE_GATT_STATUS_UNKNOWN = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_UNKNOWN
BLE_GATT_STATUS_ATTERR_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INVALID
BLE_GATT_STATUS_ATTERR_INVALID_HANDLE = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INVALID_HANDLE
BLE_GATT_STATUS_ATTERR_READ_NOT_PERMITTED = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_READ_NOT_PERMITTED
BLE_GATT_STATUS_ATTERR_WRITE_NOT_PERMITTED = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_WRITE_NOT_PERMITTED
BLE_GATT_STATUS_ATTERR_INVALID_PDU = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INVALID_PDU
BLE_GATT_STATUS_ATTERR_INSUF_AUTHENTICATION = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INSUF_AUTHENTICATION
BLE_GATT_STATUS_ATTERR_REQUEST_NOT_SUPPORTED = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_REQUEST_NOT_SUPPORTED
BLE_GATT_STATUS_ATTERR_INVALID_OFFSET = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INVALID_OFFSET
BLE_GATT_STATUS_ATTERR_INSUF_AUTHORIZATION = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INSUF_AUTHORIZATION
BLE_GATT_STATUS_ATTERR_PREPARE_QUEUE_FULL = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_PREPARE_QUEUE_FULL
BLE_GATT_STATUS_ATTERR_ATTRIBUTE_NOT_FOUND = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_ATTRIBUTE_NOT_FOUND
BLE_GATT_STATUS_ATTERR_ATTRIBUTE_NOT_LONG = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_ATTRIBUTE_NOT_LONG
BLE_GATT_STATUS_ATTERR_INSUF_ENC_KEY_SIZE = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INSUF_ENC_KEY_SIZE
BLE_GATT_STATUS_ATTERR_INVALID_ATT_VAL_LENGTH = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INVALID_ATT_VAL_LENGTH
BLE_GATT_STATUS_ATTERR_UNLIKELY_ERROR = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_UNLIKELY_ERROR
BLE_GATT_STATUS_ATTERR_INSUF_ENCRYPTION = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INSUF_ENCRYPTION
BLE_GATT_STATUS_ATTERR_UNSUPPORTED_GROUP_TYPE = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_UNSUPPORTED_GROUP_TYPE
BLE_GATT_STATUS_ATTERR_INSUF_RESOURCES = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_INSUF_RESOURCES
BLE_GATT_STATUS_ATTERR_RFU_RANGE1_BEGIN = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_RFU_RANGE1_BEGIN
BLE_GATT_STATUS_ATTERR_RFU_RANGE1_END = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_RFU_RANGE1_END
BLE_GATT_STATUS_ATTERR_APP_BEGIN = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_APP_BEGIN
BLE_GATT_STATUS_ATTERR_APP_END = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_APP_END
BLE_GATT_STATUS_ATTERR_RFU_RANGE2_BEGIN = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_RFU_RANGE2_BEGIN
BLE_GATT_STATUS_ATTERR_RFU_RANGE2_END = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_RFU_RANGE2_END
BLE_GATT_STATUS_ATTERR_RFU_RANGE3_BEGIN = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_RFU_RANGE3_BEGIN
BLE_GATT_STATUS_ATTERR_RFU_RANGE3_END = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_RFU_RANGE3_END
BLE_GATT_STATUS_ATTERR_CPS_CCCD_CONFIG_ERROR = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_CPS_CCCD_CONFIG_ERROR
BLE_GATT_STATUS_ATTERR_CPS_PROC_ALR_IN_PROG = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_CPS_PROC_ALR_IN_PROG
BLE_GATT_STATUS_ATTERR_CPS_OUT_OF_RANGE = _pc_ble_driver_sd_api_v3.BLE_GATT_STATUS_ATTERR_CPS_OUT_OF_RANGE
BLE_GATT_CPF_FORMAT_RFU = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_RFU
BLE_GATT_CPF_FORMAT_BOOLEAN = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_BOOLEAN
BLE_GATT_CPF_FORMAT_2BIT = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_2BIT
BLE_GATT_CPF_FORMAT_NIBBLE = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_NIBBLE
BLE_GATT_CPF_FORMAT_UINT8 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT8
BLE_GATT_CPF_FORMAT_UINT12 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT12
BLE_GATT_CPF_FORMAT_UINT16 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT16
BLE_GATT_CPF_FORMAT_UINT24 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT24
BLE_GATT_CPF_FORMAT_UINT32 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT32
BLE_GATT_CPF_FORMAT_UINT48 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT48
BLE_GATT_CPF_FORMAT_UINT64 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT64
BLE_GATT_CPF_FORMAT_UINT128 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UINT128
BLE_GATT_CPF_FORMAT_SINT8 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT8
BLE_GATT_CPF_FORMAT_SINT12 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT12
BLE_GATT_CPF_FORMAT_SINT16 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT16
BLE_GATT_CPF_FORMAT_SINT24 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT24
BLE_GATT_CPF_FORMAT_SINT32 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT32
BLE_GATT_CPF_FORMAT_SINT48 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT48
BLE_GATT_CPF_FORMAT_SINT64 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT64
BLE_GATT_CPF_FORMAT_SINT128 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SINT128
BLE_GATT_CPF_FORMAT_FLOAT32 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_FLOAT32
BLE_GATT_CPF_FORMAT_FLOAT64 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_FLOAT64
BLE_GATT_CPF_FORMAT_SFLOAT = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_SFLOAT
BLE_GATT_CPF_FORMAT_FLOAT = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_FLOAT
BLE_GATT_CPF_FORMAT_DUINT16 = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_DUINT16
BLE_GATT_CPF_FORMAT_UTF8S = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UTF8S
BLE_GATT_CPF_FORMAT_UTF16S = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_UTF16S
BLE_GATT_CPF_FORMAT_STRUCT = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_FORMAT_STRUCT
BLE_GATT_CPF_NAMESPACE_BTSIG = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_NAMESPACE_BTSIG
BLE_GATT_CPF_NAMESPACE_DESCRIPTION_UNKNOWN = _pc_ble_driver_sd_api_v3.BLE_GATT_CPF_NAMESPACE_DESCRIPTION_UNKNOWN
class ble_gatt_enable_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatt_enable_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatt_enable_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["att_mtu"] = _pc_ble_driver_sd_api_v3.ble_gatt_enable_params_t_att_mtu_set
    __swig_getmethods__["att_mtu"] = _pc_ble_driver_sd_api_v3.ble_gatt_enable_params_t_att_mtu_get
    if _newclass:att_mtu = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_enable_params_t_att_mtu_get, _pc_ble_driver_sd_api_v3.ble_gatt_enable_params_t_att_mtu_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatt_enable_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatt_enable_params_t
    __del__ = lambda self : None;
ble_gatt_enable_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatt_enable_params_t_swigregister
ble_gatt_enable_params_t_swigregister(ble_gatt_enable_params_t)

class ble_gatt_char_props_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatt_char_props_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatt_char_props_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["broadcast"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_broadcast_set
    __swig_getmethods__["broadcast"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_broadcast_get
    if _newclass:broadcast = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_broadcast_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_broadcast_set)
    __swig_setmethods__["read"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_read_set
    __swig_getmethods__["read"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_read_get
    if _newclass:read = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_read_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_read_set)
    __swig_setmethods__["write_wo_resp"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_wo_resp_set
    __swig_getmethods__["write_wo_resp"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_wo_resp_get
    if _newclass:write_wo_resp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_wo_resp_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_wo_resp_set)
    __swig_setmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_set
    __swig_getmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_get
    if _newclass:write = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_write_set)
    __swig_setmethods__["notify"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_notify_set
    __swig_getmethods__["notify"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_notify_get
    if _newclass:notify = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_notify_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_notify_set)
    __swig_setmethods__["indicate"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_indicate_set
    __swig_getmethods__["indicate"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_indicate_get
    if _newclass:indicate = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_indicate_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_indicate_set)
    __swig_setmethods__["auth_signed_wr"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_auth_signed_wr_set
    __swig_getmethods__["auth_signed_wr"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_auth_signed_wr_get
    if _newclass:auth_signed_wr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_auth_signed_wr_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_auth_signed_wr_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatt_char_props_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatt_char_props_t
    __del__ = lambda self : None;
ble_gatt_char_props_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatt_char_props_t_swigregister
ble_gatt_char_props_t_swigregister(ble_gatt_char_props_t)

class ble_gatt_char_ext_props_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatt_char_ext_props_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatt_char_ext_props_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["reliable_wr"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_reliable_wr_set
    __swig_getmethods__["reliable_wr"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_reliable_wr_get
    if _newclass:reliable_wr = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_reliable_wr_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_reliable_wr_set)
    __swig_setmethods__["wr_aux"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_wr_aux_set
    __swig_getmethods__["wr_aux"] = _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_wr_aux_get
    if _newclass:wr_aux = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_wr_aux_get, _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_wr_aux_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatt_char_ext_props_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatt_char_ext_props_t
    __del__ = lambda self : None;
ble_gatt_char_ext_props_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatt_char_ext_props_t_swigregister
ble_gatt_char_ext_props_t_swigregister(ble_gatt_char_ext_props_t)

SD_BLE_GATTS_SERVICE_ADD = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_SERVICE_ADD
SD_BLE_GATTS_INCLUDE_ADD = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_INCLUDE_ADD
SD_BLE_GATTS_CHARACTERISTIC_ADD = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_CHARACTERISTIC_ADD
SD_BLE_GATTS_DESCRIPTOR_ADD = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_DESCRIPTOR_ADD
SD_BLE_GATTS_VALUE_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_VALUE_SET
SD_BLE_GATTS_VALUE_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_VALUE_GET
SD_BLE_GATTS_HVX = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_HVX
SD_BLE_GATTS_SERVICE_CHANGED = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_SERVICE_CHANGED
SD_BLE_GATTS_RW_AUTHORIZE_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_RW_AUTHORIZE_REPLY
SD_BLE_GATTS_SYS_ATTR_SET = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_SYS_ATTR_SET
SD_BLE_GATTS_SYS_ATTR_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_SYS_ATTR_GET
SD_BLE_GATTS_INITIAL_USER_HANDLE_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_INITIAL_USER_HANDLE_GET
SD_BLE_GATTS_ATTR_GET = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_ATTR_GET
SD_BLE_GATTS_EXCHANGE_MTU_REPLY = _pc_ble_driver_sd_api_v3.SD_BLE_GATTS_EXCHANGE_MTU_REPLY
BLE_GATTS_EVT_WRITE = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_WRITE
BLE_GATTS_EVT_RW_AUTHORIZE_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_RW_AUTHORIZE_REQUEST
BLE_GATTS_EVT_SYS_ATTR_MISSING = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_SYS_ATTR_MISSING
BLE_GATTS_EVT_HVC = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_HVC
BLE_GATTS_EVT_SC_CONFIRM = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_SC_CONFIRM
BLE_GATTS_EVT_EXCHANGE_MTU_REQUEST = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_EXCHANGE_MTU_REQUEST
BLE_GATTS_EVT_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_TIMEOUT
BLE_GATTS_FIX_ATTR_LEN_MAX = _pc_ble_driver_sd_api_v3.BLE_GATTS_FIX_ATTR_LEN_MAX
BLE_GATTS_VAR_ATTR_LEN_MAX = _pc_ble_driver_sd_api_v3.BLE_GATTS_VAR_ATTR_LEN_MAX
BLE_GATTS_SRVC_TYPE_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATTS_SRVC_TYPE_INVALID
BLE_GATTS_SRVC_TYPE_PRIMARY = _pc_ble_driver_sd_api_v3.BLE_GATTS_SRVC_TYPE_PRIMARY
BLE_GATTS_SRVC_TYPE_SECONDARY = _pc_ble_driver_sd_api_v3.BLE_GATTS_SRVC_TYPE_SECONDARY
BLE_GATTS_ATTR_TYPE_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_INVALID
BLE_GATTS_ATTR_TYPE_PRIM_SRVC_DECL = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_PRIM_SRVC_DECL
BLE_GATTS_ATTR_TYPE_SEC_SRVC_DECL = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_SEC_SRVC_DECL
BLE_GATTS_ATTR_TYPE_INC_DECL = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_INC_DECL
BLE_GATTS_ATTR_TYPE_CHAR_DECL = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_CHAR_DECL
BLE_GATTS_ATTR_TYPE_CHAR_VAL = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_CHAR_VAL
BLE_GATTS_ATTR_TYPE_DESC = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_DESC
BLE_GATTS_ATTR_TYPE_OTHER = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TYPE_OTHER
BLE_GATTS_OP_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_INVALID
BLE_GATTS_OP_WRITE_REQ = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_WRITE_REQ
BLE_GATTS_OP_WRITE_CMD = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_WRITE_CMD
BLE_GATTS_OP_SIGN_WRITE_CMD = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_SIGN_WRITE_CMD
BLE_GATTS_OP_PREP_WRITE_REQ = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_PREP_WRITE_REQ
BLE_GATTS_OP_EXEC_WRITE_REQ_CANCEL = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_EXEC_WRITE_REQ_CANCEL
BLE_GATTS_OP_EXEC_WRITE_REQ_NOW = _pc_ble_driver_sd_api_v3.BLE_GATTS_OP_EXEC_WRITE_REQ_NOW
BLE_GATTS_VLOC_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATTS_VLOC_INVALID
BLE_GATTS_VLOC_STACK = _pc_ble_driver_sd_api_v3.BLE_GATTS_VLOC_STACK
BLE_GATTS_VLOC_USER = _pc_ble_driver_sd_api_v3.BLE_GATTS_VLOC_USER
BLE_GATTS_AUTHORIZE_TYPE_INVALID = _pc_ble_driver_sd_api_v3.BLE_GATTS_AUTHORIZE_TYPE_INVALID
BLE_GATTS_AUTHORIZE_TYPE_READ = _pc_ble_driver_sd_api_v3.BLE_GATTS_AUTHORIZE_TYPE_READ
BLE_GATTS_AUTHORIZE_TYPE_WRITE = _pc_ble_driver_sd_api_v3.BLE_GATTS_AUTHORIZE_TYPE_WRITE
BLE_GATTS_SYS_ATTR_FLAG_SYS_SRVCS = _pc_ble_driver_sd_api_v3.BLE_GATTS_SYS_ATTR_FLAG_SYS_SRVCS
BLE_GATTS_SYS_ATTR_FLAG_USR_SRVCS = _pc_ble_driver_sd_api_v3.BLE_GATTS_SYS_ATTR_FLAG_USR_SRVCS
BLE_GATTS_ATTR_TAB_SIZE_MIN = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TAB_SIZE_MIN
BLE_GATTS_ATTR_TAB_SIZE_DEFAULT = _pc_ble_driver_sd_api_v3.BLE_GATTS_ATTR_TAB_SIZE_DEFAULT
class ble_gatts_enable_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_enable_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_enable_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["service_changed"] = _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_service_changed_set
    __swig_getmethods__["service_changed"] = _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_service_changed_get
    if _newclass:service_changed = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_service_changed_get, _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_service_changed_set)
    __swig_setmethods__["attr_tab_size"] = _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_attr_tab_size_set
    __swig_getmethods__["attr_tab_size"] = _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_attr_tab_size_get
    if _newclass:attr_tab_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_attr_tab_size_get, _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_attr_tab_size_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_enable_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_enable_params_t
    __del__ = lambda self : None;
ble_gatts_enable_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_enable_params_t_swigregister
ble_gatts_enable_params_t_swigregister(ble_gatts_enable_params_t)

class ble_gatts_attr_md_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_attr_md_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_attr_md_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["read_perm"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_read_perm_set
    __swig_getmethods__["read_perm"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_read_perm_get
    if _newclass:read_perm = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_read_perm_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_read_perm_set)
    __swig_setmethods__["write_perm"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_write_perm_set
    __swig_getmethods__["write_perm"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_write_perm_get
    if _newclass:write_perm = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_write_perm_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_write_perm_set)
    __swig_setmethods__["vlen"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vlen_set
    __swig_getmethods__["vlen"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vlen_get
    if _newclass:vlen = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vlen_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vlen_set)
    __swig_setmethods__["vloc"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vloc_set
    __swig_getmethods__["vloc"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vloc_get
    if _newclass:vloc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vloc_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_vloc_set)
    __swig_setmethods__["rd_auth"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_rd_auth_set
    __swig_getmethods__["rd_auth"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_rd_auth_get
    if _newclass:rd_auth = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_rd_auth_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_rd_auth_set)
    __swig_setmethods__["wr_auth"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_wr_auth_set
    __swig_getmethods__["wr_auth"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_wr_auth_get
    if _newclass:wr_auth = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_wr_auth_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_wr_auth_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_attr_md_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_attr_md_t
    __del__ = lambda self : None;
ble_gatts_attr_md_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_attr_md_t_swigregister
ble_gatts_attr_md_t_swigregister(ble_gatts_attr_md_t)

class ble_gatts_attr_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_attr_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_attr_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["p_uuid"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_uuid_set
    __swig_getmethods__["p_uuid"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_uuid_get
    if _newclass:p_uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_uuid_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_uuid_set)
    __swig_setmethods__["p_attr_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_attr_md_set
    __swig_getmethods__["p_attr_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_attr_md_get
    if _newclass:p_attr_md = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_attr_md_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_attr_md_set)
    __swig_setmethods__["init_len"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_len_set
    __swig_getmethods__["init_len"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_len_get
    if _newclass:init_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_len_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_len_set)
    __swig_setmethods__["init_offs"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_offs_set
    __swig_getmethods__["init_offs"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_offs_get
    if _newclass:init_offs = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_offs_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_init_offs_set)
    __swig_setmethods__["max_len"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_max_len_set
    __swig_getmethods__["max_len"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_max_len_get
    if _newclass:max_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_t_max_len_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_max_len_set)
    __swig_setmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_value_set
    __swig_getmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_value_get
    if _newclass:p_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_value_get, _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_p_value_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_attr_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_attr_t
    __del__ = lambda self : None;
ble_gatts_attr_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_attr_t_swigregister
ble_gatts_attr_t_swigregister(ble_gatts_attr_t)

class ble_gatts_value_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_value_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_value_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_value_t_len_get, _pc_ble_driver_sd_api_v3.ble_gatts_value_t_len_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_value_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gatts_value_t_offset_set)
    __swig_setmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_p_value_set
    __swig_getmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_p_value_get
    if _newclass:p_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_value_t_p_value_get, _pc_ble_driver_sd_api_v3.ble_gatts_value_t_p_value_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_value_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_value_t
    __del__ = lambda self : None;
ble_gatts_value_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_value_t_swigregister
ble_gatts_value_t_swigregister(ble_gatts_value_t)

class ble_gatts_char_pf_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_char_pf_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_char_pf_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["format"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_format_set
    __swig_getmethods__["format"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_format_get
    if _newclass:format = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_format_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_format_set)
    __swig_setmethods__["exponent"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_exponent_set
    __swig_getmethods__["exponent"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_exponent_get
    if _newclass:exponent = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_exponent_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_exponent_set)
    __swig_setmethods__["unit"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_unit_set
    __swig_getmethods__["unit"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_unit_get
    if _newclass:unit = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_unit_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_unit_set)
    __swig_setmethods__["name_space"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_name_space_set
    __swig_getmethods__["name_space"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_name_space_get
    if _newclass:name_space = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_name_space_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_name_space_set)
    __swig_setmethods__["desc"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_desc_set
    __swig_getmethods__["desc"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_desc_get
    if _newclass:desc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_desc_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_desc_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_char_pf_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_char_pf_t
    __del__ = lambda self : None;
ble_gatts_char_pf_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_char_pf_t_swigregister
ble_gatts_char_pf_t_swigregister(ble_gatts_char_pf_t)

class ble_gatts_char_md_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_char_md_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_char_md_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["char_props"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_props_set
    __swig_getmethods__["char_props"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_props_get
    if _newclass:char_props = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_props_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_props_set)
    __swig_setmethods__["char_ext_props"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_ext_props_set
    __swig_getmethods__["char_ext_props"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_ext_props_get
    if _newclass:char_ext_props = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_ext_props_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_ext_props_set)
    __swig_setmethods__["p_char_user_desc"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_user_desc_set
    __swig_getmethods__["p_char_user_desc"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_user_desc_get
    if _newclass:p_char_user_desc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_user_desc_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_user_desc_set)
    __swig_setmethods__["char_user_desc_max_size"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_max_size_set
    __swig_getmethods__["char_user_desc_max_size"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_max_size_get
    if _newclass:char_user_desc_max_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_max_size_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_max_size_set)
    __swig_setmethods__["char_user_desc_size"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_size_set
    __swig_getmethods__["char_user_desc_size"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_size_get
    if _newclass:char_user_desc_size = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_size_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_char_user_desc_size_set)
    __swig_setmethods__["p_char_pf"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_pf_set
    __swig_getmethods__["p_char_pf"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_pf_get
    if _newclass:p_char_pf = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_pf_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_char_pf_set)
    __swig_setmethods__["p_user_desc_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_user_desc_md_set
    __swig_getmethods__["p_user_desc_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_user_desc_md_get
    if _newclass:p_user_desc_md = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_user_desc_md_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_user_desc_md_set)
    __swig_setmethods__["p_cccd_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_cccd_md_set
    __swig_getmethods__["p_cccd_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_cccd_md_get
    if _newclass:p_cccd_md = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_cccd_md_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_cccd_md_set)
    __swig_setmethods__["p_sccd_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_sccd_md_set
    __swig_getmethods__["p_sccd_md"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_sccd_md_get
    if _newclass:p_sccd_md = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_sccd_md_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_p_sccd_md_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_char_md_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_char_md_t
    __del__ = lambda self : None;
ble_gatts_char_md_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_char_md_t_swigregister
ble_gatts_char_md_t_swigregister(ble_gatts_char_md_t)

class ble_gatts_char_handles_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_char_handles_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_char_handles_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["value_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_value_handle_set
    __swig_getmethods__["value_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_value_handle_get
    if _newclass:value_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_value_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_value_handle_set)
    __swig_setmethods__["user_desc_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_user_desc_handle_set
    __swig_getmethods__["user_desc_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_user_desc_handle_get
    if _newclass:user_desc_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_user_desc_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_user_desc_handle_set)
    __swig_setmethods__["cccd_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_cccd_handle_set
    __swig_getmethods__["cccd_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_cccd_handle_get
    if _newclass:cccd_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_cccd_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_cccd_handle_set)
    __swig_setmethods__["sccd_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_sccd_handle_set
    __swig_getmethods__["sccd_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_sccd_handle_get
    if _newclass:sccd_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_sccd_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_sccd_handle_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_char_handles_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_char_handles_t
    __del__ = lambda self : None;
ble_gatts_char_handles_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_char_handles_t_swigregister
ble_gatts_char_handles_t_swigregister(ble_gatts_char_handles_t)

class ble_gatts_hvx_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_hvx_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_hvx_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_handle_set)
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_type_get, _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_type_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_offset_set)
    __swig_setmethods__["p_len"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_len_set
    __swig_getmethods__["p_len"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_len_get
    if _newclass:p_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_len_get, _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_len_set)
    __swig_setmethods__["p_data"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_data_set
    __swig_getmethods__["p_data"] = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_data_get
    if _newclass:p_data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_data_get, _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_p_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_hvx_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_hvx_params_t
    __del__ = lambda self : None;
ble_gatts_hvx_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_hvx_params_t_swigregister
ble_gatts_hvx_params_t_swigregister(ble_gatts_hvx_params_t)

class ble_gatts_authorize_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_authorize_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_authorize_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["gatt_status"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_gatt_status_set
    __swig_getmethods__["gatt_status"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_gatt_status_get
    if _newclass:gatt_status = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_gatt_status_get, _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_gatt_status_set)
    __swig_setmethods__["update"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_update_set
    __swig_getmethods__["update"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_update_get
    if _newclass:update = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_update_get, _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_update_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_offset_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_len_get, _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_len_set)
    __swig_setmethods__["p_data"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_p_data_set
    __swig_getmethods__["p_data"] = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_p_data_get
    if _newclass:p_data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_p_data_get, _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_p_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_authorize_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_authorize_params_t
    __del__ = lambda self : None;
ble_gatts_authorize_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_authorize_params_t_swigregister
ble_gatts_authorize_params_t_swigregister(ble_gatts_authorize_params_t)

class ble_gatts_rw_authorize_reply_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_rw_authorize_reply_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_rw_authorize_reply_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_type_get, _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_type_set)
    __swig_getmethods__["params"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_get
    if _newclass:params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_rw_authorize_reply_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_rw_authorize_reply_params_t
    __del__ = lambda self : None;
ble_gatts_rw_authorize_reply_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_swigregister
ble_gatts_rw_authorize_reply_params_t_swigregister(ble_gatts_rw_authorize_reply_params_t)

class ble_gatts_rw_authorize_reply_params_t_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_rw_authorize_reply_params_t_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_rw_authorize_reply_params_t_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["read"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_read_set
    __swig_getmethods__["read"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_read_get
    if _newclass:read = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_read_get, _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_read_set)
    __swig_setmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_write_set
    __swig_getmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_write_get
    if _newclass:write = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_write_get, _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_write_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_rw_authorize_reply_params_t_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_rw_authorize_reply_params_t_params
    __del__ = lambda self : None;
ble_gatts_rw_authorize_reply_params_t_params_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_rw_authorize_reply_params_t_params_swigregister
ble_gatts_rw_authorize_reply_params_t_params_swigregister(ble_gatts_rw_authorize_reply_params_t_params)

class ble_gatts_evt_write_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_write_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_write_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_handle_set)
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_uuid_set)
    __swig_setmethods__["op"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_op_set
    __swig_getmethods__["op"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_op_get
    if _newclass:op = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_op_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_op_set)
    __swig_setmethods__["auth_required"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_auth_required_set
    __swig_getmethods__["auth_required"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_auth_required_get
    if _newclass:auth_required = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_auth_required_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_auth_required_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_offset_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_len_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_len_set)
    __swig_setmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_data_set
    __swig_getmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_data_get
    if _newclass:data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_data_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_write_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_write_t
    __del__ = lambda self : None;
ble_gatts_evt_write_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_write_t_swigregister
ble_gatts_evt_write_t_swigregister(ble_gatts_evt_write_t)

class ble_gatts_evt_read_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_read_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_read_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_handle_set)
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_uuid_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_offset_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_read_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_read_t
    __del__ = lambda self : None;
ble_gatts_evt_read_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_read_t_swigregister
ble_gatts_evt_read_t_swigregister(ble_gatts_evt_read_t)

class ble_gatts_evt_rw_authorize_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_rw_authorize_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_rw_authorize_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_type_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_type_set)
    __swig_getmethods__["request"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_get
    if _newclass:request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_rw_authorize_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_rw_authorize_request_t
    __del__ = lambda self : None;
ble_gatts_evt_rw_authorize_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_swigregister
ble_gatts_evt_rw_authorize_request_t_swigregister(ble_gatts_evt_rw_authorize_request_t)

class ble_gatts_evt_rw_authorize_request_t_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_rw_authorize_request_t_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_rw_authorize_request_t_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["read"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_read_set
    __swig_getmethods__["read"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_read_get
    if _newclass:read = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_read_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_read_set)
    __swig_setmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_write_set
    __swig_getmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_write_get
    if _newclass:write = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_write_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_write_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_rw_authorize_request_t_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_rw_authorize_request_t_request
    __del__ = lambda self : None;
ble_gatts_evt_rw_authorize_request_t_request_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_rw_authorize_request_t_request_swigregister
ble_gatts_evt_rw_authorize_request_t_request_swigregister(ble_gatts_evt_rw_authorize_request_t_request)

class ble_gatts_evt_sys_attr_missing_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_sys_attr_missing_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_sys_attr_missing_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["hint"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_sys_attr_missing_t_hint_set
    __swig_getmethods__["hint"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_sys_attr_missing_t_hint_get
    if _newclass:hint = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_sys_attr_missing_t_hint_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_sys_attr_missing_t_hint_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_sys_attr_missing_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_sys_attr_missing_t
    __del__ = lambda self : None;
ble_gatts_evt_sys_attr_missing_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_sys_attr_missing_t_swigregister
ble_gatts_evt_sys_attr_missing_t_swigregister(ble_gatts_evt_sys_attr_missing_t)

class ble_gatts_evt_hvc_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_hvc_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_hvc_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_hvc_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_hvc_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_hvc_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_hvc_t_handle_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_hvc_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_hvc_t
    __del__ = lambda self : None;
ble_gatts_evt_hvc_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_hvc_t_swigregister
ble_gatts_evt_hvc_t_swigregister(ble_gatts_evt_hvc_t)

class ble_gatts_evt_exchange_mtu_request_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_exchange_mtu_request_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_exchange_mtu_request_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["client_rx_mtu"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_exchange_mtu_request_t_client_rx_mtu_set
    __swig_getmethods__["client_rx_mtu"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_exchange_mtu_request_t_client_rx_mtu_get
    if _newclass:client_rx_mtu = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_exchange_mtu_request_t_client_rx_mtu_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_exchange_mtu_request_t_client_rx_mtu_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_exchange_mtu_request_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_exchange_mtu_request_t
    __del__ = lambda self : None;
ble_gatts_evt_exchange_mtu_request_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_exchange_mtu_request_t_swigregister
ble_gatts_evt_exchange_mtu_request_t_swigregister(ble_gatts_evt_exchange_mtu_request_t)

class ble_gatts_evt_timeout_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_timeout_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_timeout_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["src"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_timeout_t_src_set
    __swig_getmethods__["src"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_timeout_t_src_get
    if _newclass:src = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_timeout_t_src_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_timeout_t_src_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_timeout_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_timeout_t
    __del__ = lambda self : None;
ble_gatts_evt_timeout_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_timeout_t_swigregister
ble_gatts_evt_timeout_t_swigregister(ble_gatts_evt_timeout_t)

class ble_gatts_evt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_conn_handle_set)
    __swig_getmethods__["params"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_get
    if _newclass:params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_t
    __del__ = lambda self : None;
ble_gatts_evt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_swigregister
ble_gatts_evt_t_swigregister(ble_gatts_evt_t)

class ble_gatts_evt_t_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gatts_evt_t_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gatts_evt_t_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_write_set
    __swig_getmethods__["write"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_write_get
    if _newclass:write = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_write_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_write_set)
    __swig_setmethods__["authorize_request"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_authorize_request_set
    __swig_getmethods__["authorize_request"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_authorize_request_get
    if _newclass:authorize_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_authorize_request_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_authorize_request_set)
    __swig_setmethods__["sys_attr_missing"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_sys_attr_missing_set
    __swig_getmethods__["sys_attr_missing"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_sys_attr_missing_get
    if _newclass:sys_attr_missing = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_sys_attr_missing_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_sys_attr_missing_set)
    __swig_setmethods__["hvc"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_hvc_set
    __swig_getmethods__["hvc"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_hvc_get
    if _newclass:hvc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_hvc_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_hvc_set)
    __swig_setmethods__["exchange_mtu_request"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_exchange_mtu_request_set
    __swig_getmethods__["exchange_mtu_request"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_exchange_mtu_request_get
    if _newclass:exchange_mtu_request = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_exchange_mtu_request_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_exchange_mtu_request_set)
    __swig_setmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_timeout_set
    __swig_getmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_timeout_get
    if _newclass:timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_timeout_get, _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_timeout_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gatts_evt_t_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gatts_evt_t_params
    __del__ = lambda self : None;
ble_gatts_evt_t_params_swigregister = _pc_ble_driver_sd_api_v3.ble_gatts_evt_t_params_swigregister
ble_gatts_evt_t_params_swigregister(ble_gatts_evt_t_params)


def sd_ble_gatts_service_add(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_service_add(*args)
sd_ble_gatts_service_add = _pc_ble_driver_sd_api_v3.sd_ble_gatts_service_add

def sd_ble_gatts_include_add(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_include_add(*args)
sd_ble_gatts_include_add = _pc_ble_driver_sd_api_v3.sd_ble_gatts_include_add

def sd_ble_gatts_characteristic_add(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_characteristic_add(*args)
sd_ble_gatts_characteristic_add = _pc_ble_driver_sd_api_v3.sd_ble_gatts_characteristic_add

def sd_ble_gatts_descriptor_add(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_descriptor_add(*args)
sd_ble_gatts_descriptor_add = _pc_ble_driver_sd_api_v3.sd_ble_gatts_descriptor_add

def sd_ble_gatts_value_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_value_set(*args)
sd_ble_gatts_value_set = _pc_ble_driver_sd_api_v3.sd_ble_gatts_value_set

def sd_ble_gatts_value_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_value_get(*args)
sd_ble_gatts_value_get = _pc_ble_driver_sd_api_v3.sd_ble_gatts_value_get

def sd_ble_gatts_hvx(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_hvx(*args)
sd_ble_gatts_hvx = _pc_ble_driver_sd_api_v3.sd_ble_gatts_hvx

def sd_ble_gatts_service_changed(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_service_changed(*args)
sd_ble_gatts_service_changed = _pc_ble_driver_sd_api_v3.sd_ble_gatts_service_changed

def sd_ble_gatts_rw_authorize_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_rw_authorize_reply(*args)
sd_ble_gatts_rw_authorize_reply = _pc_ble_driver_sd_api_v3.sd_ble_gatts_rw_authorize_reply

def sd_ble_gatts_sys_attr_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_sys_attr_set(*args)
sd_ble_gatts_sys_attr_set = _pc_ble_driver_sd_api_v3.sd_ble_gatts_sys_attr_set

def sd_ble_gatts_sys_attr_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_sys_attr_get(*args)
sd_ble_gatts_sys_attr_get = _pc_ble_driver_sd_api_v3.sd_ble_gatts_sys_attr_get

def sd_ble_gatts_initial_user_handle_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_initial_user_handle_get(*args)
sd_ble_gatts_initial_user_handle_get = _pc_ble_driver_sd_api_v3.sd_ble_gatts_initial_user_handle_get

def sd_ble_gatts_attr_get(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_attr_get(*args)
sd_ble_gatts_attr_get = _pc_ble_driver_sd_api_v3.sd_ble_gatts_attr_get

def sd_ble_gatts_exchange_mtu_reply(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gatts_exchange_mtu_reply(*args)
sd_ble_gatts_exchange_mtu_reply = _pc_ble_driver_sd_api_v3.sd_ble_gatts_exchange_mtu_reply
SD_BLE_GATTC_PRIMARY_SERVICES_DISCOVER = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_PRIMARY_SERVICES_DISCOVER
SD_BLE_GATTC_RELATIONSHIPS_DISCOVER = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_RELATIONSHIPS_DISCOVER
SD_BLE_GATTC_CHARACTERISTICS_DISCOVER = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_CHARACTERISTICS_DISCOVER
SD_BLE_GATTC_DESCRIPTORS_DISCOVER = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_DESCRIPTORS_DISCOVER
SD_BLE_GATTC_ATTR_INFO_DISCOVER = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_ATTR_INFO_DISCOVER
SD_BLE_GATTC_CHAR_VALUE_BY_UUID_READ = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_CHAR_VALUE_BY_UUID_READ
SD_BLE_GATTC_READ = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_READ
SD_BLE_GATTC_CHAR_VALUES_READ = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_CHAR_VALUES_READ
SD_BLE_GATTC_WRITE = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_WRITE
SD_BLE_GATTC_HV_CONFIRM = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_HV_CONFIRM
SD_BLE_GATTC_EXCHANGE_MTU_REQUEST = _pc_ble_driver_sd_api_v3.SD_BLE_GATTC_EXCHANGE_MTU_REQUEST
BLE_GATTC_EVT_PRIM_SRVC_DISC_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_PRIM_SRVC_DISC_RSP
BLE_GATTC_EVT_REL_DISC_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_REL_DISC_RSP
BLE_GATTC_EVT_CHAR_DISC_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_CHAR_DISC_RSP
BLE_GATTC_EVT_DESC_DISC_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_DESC_DISC_RSP
BLE_GATTC_EVT_ATTR_INFO_DISC_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_ATTR_INFO_DISC_RSP
BLE_GATTC_EVT_CHAR_VAL_BY_UUID_READ_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_CHAR_VAL_BY_UUID_READ_RSP
BLE_GATTC_EVT_READ_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_READ_RSP
BLE_GATTC_EVT_CHAR_VALS_READ_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_CHAR_VALS_READ_RSP
BLE_GATTC_EVT_WRITE_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_WRITE_RSP
BLE_GATTC_EVT_HVX = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_HVX
BLE_GATTC_EVT_EXCHANGE_MTU_RSP = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_EXCHANGE_MTU_RSP
BLE_GATTC_EVT_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_TIMEOUT
BLE_GATTC_ATTR_INFO_FORMAT_16BIT = _pc_ble_driver_sd_api_v3.BLE_GATTC_ATTR_INFO_FORMAT_16BIT
BLE_GATTC_ATTR_INFO_FORMAT_128BIT = _pc_ble_driver_sd_api_v3.BLE_GATTC_ATTR_INFO_FORMAT_128BIT
class ble_gattc_handle_range_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_handle_range_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_handle_range_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["start_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_start_handle_set
    __swig_getmethods__["start_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_start_handle_get
    if _newclass:start_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_start_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_start_handle_set)
    __swig_setmethods__["end_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_end_handle_set
    __swig_getmethods__["end_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_end_handle_get
    if _newclass:end_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_end_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_end_handle_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_handle_range_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_handle_range_t
    __del__ = lambda self : None;
ble_gattc_handle_range_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_handle_range_t_swigregister
ble_gattc_handle_range_t_swigregister(ble_gattc_handle_range_t)

class ble_gattc_service_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_service_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_service_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_service_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_service_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_service_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gattc_service_t_uuid_set)
    __swig_setmethods__["handle_range"] = _pc_ble_driver_sd_api_v3.ble_gattc_service_t_handle_range_set
    __swig_getmethods__["handle_range"] = _pc_ble_driver_sd_api_v3.ble_gattc_service_t_handle_range_get
    if _newclass:handle_range = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_service_t_handle_range_get, _pc_ble_driver_sd_api_v3.ble_gattc_service_t_handle_range_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_service_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_service_t
    __del__ = lambda self : None;
ble_gattc_service_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_service_t_swigregister
ble_gattc_service_t_swigregister(ble_gattc_service_t)

class ble_gattc_include_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_include_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_include_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_include_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_include_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_include_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_include_t_handle_set)
    __swig_setmethods__["included_srvc"] = _pc_ble_driver_sd_api_v3.ble_gattc_include_t_included_srvc_set
    __swig_getmethods__["included_srvc"] = _pc_ble_driver_sd_api_v3.ble_gattc_include_t_included_srvc_get
    if _newclass:included_srvc = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_include_t_included_srvc_get, _pc_ble_driver_sd_api_v3.ble_gattc_include_t_included_srvc_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_include_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_include_t
    __del__ = lambda self : None;
ble_gattc_include_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_include_t_swigregister
ble_gattc_include_t_swigregister(ble_gattc_include_t)

class ble_gattc_char_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_char_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_char_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_char_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gattc_char_t_uuid_set)
    __swig_setmethods__["char_props"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_props_set
    __swig_getmethods__["char_props"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_props_get
    if _newclass:char_props = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_props_get, _pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_props_set)
    __swig_setmethods__["char_ext_props"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_ext_props_set
    __swig_getmethods__["char_ext_props"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_ext_props_get
    if _newclass:char_ext_props = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_ext_props_get, _pc_ble_driver_sd_api_v3.ble_gattc_char_t_char_ext_props_set)
    __swig_setmethods__["handle_decl"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_decl_set
    __swig_getmethods__["handle_decl"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_decl_get
    if _newclass:handle_decl = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_decl_get, _pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_decl_set)
    __swig_setmethods__["handle_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_value_set
    __swig_getmethods__["handle_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_value_get
    if _newclass:handle_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_value_get, _pc_ble_driver_sd_api_v3.ble_gattc_char_t_handle_value_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_char_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_char_t
    __del__ = lambda self : None;
ble_gattc_char_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_char_t_swigregister
ble_gattc_char_t_swigregister(ble_gattc_char_t)

class ble_gattc_desc_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_desc_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_desc_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_desc_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_handle_set)
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_desc_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_uuid_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_desc_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_desc_t
    __del__ = lambda self : None;
ble_gattc_desc_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_desc_t_swigregister
ble_gattc_desc_t_swigregister(ble_gattc_desc_t)

class ble_gattc_write_params_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_write_params_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_write_params_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["write_op"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_write_op_set
    __swig_getmethods__["write_op"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_write_op_get
    if _newclass:write_op = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_write_op_get, _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_write_op_set)
    __swig_setmethods__["flags"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_flags_set
    __swig_getmethods__["flags"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_flags_get
    if _newclass:flags = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_flags_get, _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_flags_set)
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_handle_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_offset_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_len_get, _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_len_set)
    __swig_setmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_p_value_set
    __swig_getmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_p_value_get
    if _newclass:p_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_p_value_get, _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_p_value_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_write_params_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_write_params_t
    __del__ = lambda self : None;
ble_gattc_write_params_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_write_params_t_swigregister
ble_gattc_write_params_t_swigregister(ble_gattc_write_params_t)

class ble_gattc_attr_info16_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_attr_info16_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_attr_info16_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_handle_set)
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_uuid_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_attr_info16_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_attr_info16_t
    __del__ = lambda self : None;
ble_gattc_attr_info16_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_t_swigregister
ble_gattc_attr_info16_t_swigregister(ble_gattc_attr_info16_t)

class ble_gattc_attr_info128_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_attr_info128_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_attr_info128_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_handle_set)
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_uuid_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_attr_info128_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_attr_info128_t
    __del__ = lambda self : None;
ble_gattc_attr_info128_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_t_swigregister
ble_gattc_attr_info128_t_swigregister(ble_gattc_attr_info128_t)

class ble_gattc_evt_prim_srvc_disc_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_prim_srvc_disc_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_prim_srvc_disc_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_count_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_count_set)
    __swig_setmethods__["services"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_services_set
    __swig_getmethods__["services"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_services_get
    if _newclass:services = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_services_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_services_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_prim_srvc_disc_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_prim_srvc_disc_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_prim_srvc_disc_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_prim_srvc_disc_rsp_t_swigregister
ble_gattc_evt_prim_srvc_disc_rsp_t_swigregister(ble_gattc_evt_prim_srvc_disc_rsp_t)

class ble_gattc_evt_rel_disc_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_rel_disc_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_rel_disc_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_count_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_count_set)
    __swig_setmethods__["includes"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_includes_set
    __swig_getmethods__["includes"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_includes_get
    if _newclass:includes = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_includes_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_includes_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_rel_disc_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_rel_disc_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_rel_disc_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_rel_disc_rsp_t_swigregister
ble_gattc_evt_rel_disc_rsp_t_swigregister(ble_gattc_evt_rel_disc_rsp_t)

class ble_gattc_evt_char_disc_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_char_disc_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_char_disc_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_count_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_count_set)
    __swig_setmethods__["chars"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_chars_set
    __swig_getmethods__["chars"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_chars_get
    if _newclass:chars = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_chars_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_chars_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_char_disc_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_char_disc_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_char_disc_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_disc_rsp_t_swigregister
ble_gattc_evt_char_disc_rsp_t_swigregister(ble_gattc_evt_char_disc_rsp_t)

class ble_gattc_evt_desc_disc_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_desc_disc_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_desc_disc_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_count_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_count_set)
    __swig_setmethods__["descs"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_descs_set
    __swig_getmethods__["descs"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_descs_get
    if _newclass:descs = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_descs_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_descs_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_desc_disc_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_desc_disc_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_desc_disc_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_desc_disc_rsp_t_swigregister
ble_gattc_evt_desc_disc_rsp_t_swigregister(ble_gattc_evt_desc_disc_rsp_t)

class ble_gattc_evt_attr_info_disc_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_attr_info_disc_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_attr_info_disc_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_count_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_count_set)
    __swig_setmethods__["format"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_format_set
    __swig_getmethods__["format"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_format_get
    if _newclass:format = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_format_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_format_set)
    __swig_getmethods__["info"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_get
    if _newclass:info = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_attr_info_disc_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_attr_info_disc_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_attr_info_disc_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_swigregister
ble_gattc_evt_attr_info_disc_rsp_t_swigregister(ble_gattc_evt_attr_info_disc_rsp_t)

class ble_gattc_evt_attr_info_disc_rsp_t_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_attr_info_disc_rsp_t_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_attr_info_disc_rsp_t_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["attr_info16"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info16_set
    __swig_getmethods__["attr_info16"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info16_get
    if _newclass:attr_info16 = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info16_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info16_set)
    __swig_setmethods__["attr_info128"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info128_set
    __swig_getmethods__["attr_info128"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info128_get
    if _newclass:attr_info128 = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info128_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_attr_info128_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_attr_info_disc_rsp_t_info()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_attr_info_disc_rsp_t_info
    __del__ = lambda self : None;
ble_gattc_evt_attr_info_disc_rsp_t_info_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_attr_info_disc_rsp_t_info_swigregister
ble_gattc_evt_attr_info_disc_rsp_t_info_swigregister(ble_gattc_evt_attr_info_disc_rsp_t_info)

class ble_gattc_handle_value_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_handle_value_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_handle_value_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_handle_set)
    __swig_setmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_p_value_set
    __swig_getmethods__["p_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_p_value_get
    if _newclass:p_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_p_value_get, _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_p_value_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_handle_value_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_handle_value_t
    __del__ = lambda self : None;
ble_gattc_handle_value_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_t_swigregister
ble_gattc_handle_value_t_swigregister(ble_gattc_handle_value_t)

class ble_gattc_evt_char_val_by_uuid_read_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_char_val_by_uuid_read_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_char_val_by_uuid_read_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_count_set
    __swig_getmethods__["count"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_count_get
    if _newclass:count = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_count_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_count_set)
    __swig_setmethods__["value_len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_value_len_set
    __swig_getmethods__["value_len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_value_len_get
    if _newclass:value_len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_value_len_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_value_len_set)
    __swig_setmethods__["handle_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_handle_value_set
    __swig_getmethods__["handle_value"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_handle_value_get
    if _newclass:handle_value = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_handle_value_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_handle_value_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_char_val_by_uuid_read_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_char_val_by_uuid_read_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_char_val_by_uuid_read_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_val_by_uuid_read_rsp_t_swigregister
ble_gattc_evt_char_val_by_uuid_read_rsp_t_swigregister(ble_gattc_evt_char_val_by_uuid_read_rsp_t)

class ble_gattc_evt_read_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_read_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_read_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_handle_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_offset_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_len_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_len_set)
    __swig_setmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_data_set
    __swig_getmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_data_get
    if _newclass:data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_data_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_read_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_read_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_read_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_read_rsp_t_swigregister
ble_gattc_evt_read_rsp_t_swigregister(ble_gattc_evt_read_rsp_t)

class ble_gattc_evt_char_vals_read_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_char_vals_read_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_char_vals_read_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_len_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_len_set)
    __swig_setmethods__["values"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_values_set
    __swig_getmethods__["values"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_values_get
    if _newclass:values = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_values_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_values_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_char_vals_read_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_char_vals_read_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_char_vals_read_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_char_vals_read_rsp_t_swigregister
ble_gattc_evt_char_vals_read_rsp_t_swigregister(ble_gattc_evt_char_vals_read_rsp_t)

class ble_gattc_evt_write_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_write_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_write_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_handle_set)
    __swig_setmethods__["write_op"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_write_op_set
    __swig_getmethods__["write_op"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_write_op_get
    if _newclass:write_op = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_write_op_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_write_op_set)
    __swig_setmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_offset_set
    __swig_getmethods__["offset"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_offset_get
    if _newclass:offset = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_offset_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_offset_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_len_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_len_set)
    __swig_setmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_data_set
    __swig_getmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_data_get
    if _newclass:data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_data_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_write_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_write_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_write_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_write_rsp_t_swigregister
ble_gattc_evt_write_rsp_t_swigregister(ble_gattc_evt_write_rsp_t)

class ble_gattc_evt_hvx_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_hvx_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_hvx_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_handle_set
    __swig_getmethods__["handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_handle_get
    if _newclass:handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_handle_set)
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_type_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_type_set)
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_len_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_len_set)
    __swig_setmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_data_set
    __swig_getmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_data_get
    if _newclass:data = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_data_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_hvx_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_hvx_t
    __del__ = lambda self : None;
ble_gattc_evt_hvx_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_hvx_t_swigregister
ble_gattc_evt_hvx_t_swigregister(ble_gattc_evt_hvx_t)

class ble_gattc_evt_exchange_mtu_rsp_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_exchange_mtu_rsp_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_exchange_mtu_rsp_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["server_rx_mtu"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_exchange_mtu_rsp_t_server_rx_mtu_set
    __swig_getmethods__["server_rx_mtu"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_exchange_mtu_rsp_t_server_rx_mtu_get
    if _newclass:server_rx_mtu = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_exchange_mtu_rsp_t_server_rx_mtu_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_exchange_mtu_rsp_t_server_rx_mtu_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_exchange_mtu_rsp_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_exchange_mtu_rsp_t
    __del__ = lambda self : None;
ble_gattc_evt_exchange_mtu_rsp_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_exchange_mtu_rsp_t_swigregister
ble_gattc_evt_exchange_mtu_rsp_t_swigregister(ble_gattc_evt_exchange_mtu_rsp_t)

class ble_gattc_evt_timeout_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_timeout_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_timeout_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["src"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_timeout_t_src_set
    __swig_getmethods__["src"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_timeout_t_src_get
    if _newclass:src = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_timeout_t_src_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_timeout_t_src_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_timeout_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_timeout_t
    __del__ = lambda self : None;
ble_gattc_evt_timeout_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_timeout_t_swigregister
ble_gattc_evt_timeout_t_swigregister(ble_gattc_evt_timeout_t)

class ble_gattc_evt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_conn_handle_set)
    __swig_setmethods__["gatt_status"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_gatt_status_set
    __swig_getmethods__["gatt_status"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_gatt_status_get
    if _newclass:gatt_status = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_gatt_status_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_gatt_status_set)
    __swig_setmethods__["error_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_error_handle_set
    __swig_getmethods__["error_handle"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_error_handle_get
    if _newclass:error_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_error_handle_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_error_handle_set)
    __swig_getmethods__["params"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_get
    if _newclass:params = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_t
    __del__ = lambda self : None;
ble_gattc_evt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_swigregister
ble_gattc_evt_t_swigregister(ble_gattc_evt_t)

class ble_gattc_evt_t_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_evt_t_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_evt_t_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["prim_srvc_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_prim_srvc_disc_rsp_set
    __swig_getmethods__["prim_srvc_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_prim_srvc_disc_rsp_get
    if _newclass:prim_srvc_disc_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_prim_srvc_disc_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_prim_srvc_disc_rsp_set)
    __swig_setmethods__["rel_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_rel_disc_rsp_set
    __swig_getmethods__["rel_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_rel_disc_rsp_get
    if _newclass:rel_disc_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_rel_disc_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_rel_disc_rsp_set)
    __swig_setmethods__["char_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_disc_rsp_set
    __swig_getmethods__["char_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_disc_rsp_get
    if _newclass:char_disc_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_disc_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_disc_rsp_set)
    __swig_setmethods__["desc_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_desc_disc_rsp_set
    __swig_getmethods__["desc_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_desc_disc_rsp_get
    if _newclass:desc_disc_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_desc_disc_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_desc_disc_rsp_set)
    __swig_setmethods__["char_val_by_uuid_read_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_val_by_uuid_read_rsp_set
    __swig_getmethods__["char_val_by_uuid_read_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_val_by_uuid_read_rsp_get
    if _newclass:char_val_by_uuid_read_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_val_by_uuid_read_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_val_by_uuid_read_rsp_set)
    __swig_setmethods__["read_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_read_rsp_set
    __swig_getmethods__["read_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_read_rsp_get
    if _newclass:read_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_read_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_read_rsp_set)
    __swig_setmethods__["char_vals_read_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_vals_read_rsp_set
    __swig_getmethods__["char_vals_read_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_vals_read_rsp_get
    if _newclass:char_vals_read_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_vals_read_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_char_vals_read_rsp_set)
    __swig_setmethods__["write_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_write_rsp_set
    __swig_getmethods__["write_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_write_rsp_get
    if _newclass:write_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_write_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_write_rsp_set)
    __swig_setmethods__["hvx"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_hvx_set
    __swig_getmethods__["hvx"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_hvx_get
    if _newclass:hvx = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_hvx_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_hvx_set)
    __swig_setmethods__["exchange_mtu_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_exchange_mtu_rsp_set
    __swig_getmethods__["exchange_mtu_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_exchange_mtu_rsp_get
    if _newclass:exchange_mtu_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_exchange_mtu_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_exchange_mtu_rsp_set)
    __swig_setmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_timeout_set
    __swig_getmethods__["timeout"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_timeout_get
    if _newclass:timeout = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_timeout_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_timeout_set)
    __swig_setmethods__["attr_info_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_attr_info_disc_rsp_set
    __swig_getmethods__["attr_info_disc_rsp"] = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_attr_info_disc_rsp_get
    if _newclass:attr_info_disc_rsp = _swig_property(_pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_attr_info_disc_rsp_get, _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_attr_info_disc_rsp_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_evt_t_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_evt_t_params
    __del__ = lambda self : None;
ble_gattc_evt_t_params_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_evt_t_params_swigregister
ble_gattc_evt_t_params_swigregister(ble_gattc_evt_t_params)


def sd_ble_gattc_primary_services_discover(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_primary_services_discover(*args)
sd_ble_gattc_primary_services_discover = _pc_ble_driver_sd_api_v3.sd_ble_gattc_primary_services_discover

def sd_ble_gattc_relationships_discover(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_relationships_discover(*args)
sd_ble_gattc_relationships_discover = _pc_ble_driver_sd_api_v3.sd_ble_gattc_relationships_discover

def sd_ble_gattc_characteristics_discover(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_characteristics_discover(*args)
sd_ble_gattc_characteristics_discover = _pc_ble_driver_sd_api_v3.sd_ble_gattc_characteristics_discover

def sd_ble_gattc_descriptors_discover(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_descriptors_discover(*args)
sd_ble_gattc_descriptors_discover = _pc_ble_driver_sd_api_v3.sd_ble_gattc_descriptors_discover

def sd_ble_gattc_char_value_by_uuid_read(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_char_value_by_uuid_read(*args)
sd_ble_gattc_char_value_by_uuid_read = _pc_ble_driver_sd_api_v3.sd_ble_gattc_char_value_by_uuid_read

def sd_ble_gattc_read(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_read(*args)
sd_ble_gattc_read = _pc_ble_driver_sd_api_v3.sd_ble_gattc_read

def sd_ble_gattc_char_values_read(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_char_values_read(*args)
sd_ble_gattc_char_values_read = _pc_ble_driver_sd_api_v3.sd_ble_gattc_char_values_read

def sd_ble_gattc_write(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_write(*args)
sd_ble_gattc_write = _pc_ble_driver_sd_api_v3.sd_ble_gattc_write

def sd_ble_gattc_hv_confirm(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_hv_confirm(*args)
sd_ble_gattc_hv_confirm = _pc_ble_driver_sd_api_v3.sd_ble_gattc_hv_confirm

def sd_ble_gattc_attr_info_discover(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_attr_info_discover(*args)
sd_ble_gattc_attr_info_discover = _pc_ble_driver_sd_api_v3.sd_ble_gattc_attr_info_discover

def sd_ble_gattc_exchange_mtu_request(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_exchange_mtu_request(*args)
sd_ble_gattc_exchange_mtu_request = _pc_ble_driver_sd_api_v3.sd_ble_gattc_exchange_mtu_request

def sd_ble_gattc_evt_char_val_by_uuid_read_rsp_iter(*args):
  return _pc_ble_driver_sd_api_v3.sd_ble_gattc_evt_char_val_by_uuid_read_rsp_iter(*args)
sd_ble_gattc_evt_char_val_by_uuid_read_rsp_iter = _pc_ble_driver_sd_api_v3.sd_ble_gattc_evt_char_val_by_uuid_read_rsp_iter
BLE_HCI_STATUS_CODE_SUCCESS = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_SUCCESS
BLE_HCI_STATUS_CODE_UNKNOWN_BTLE_COMMAND = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_UNKNOWN_BTLE_COMMAND
BLE_HCI_STATUS_CODE_UNKNOWN_CONNECTION_IDENTIFIER = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_UNKNOWN_CONNECTION_IDENTIFIER
BLE_HCI_AUTHENTICATION_FAILURE = _pc_ble_driver_sd_api_v3.BLE_HCI_AUTHENTICATION_FAILURE
BLE_HCI_STATUS_CODE_PIN_OR_KEY_MISSING = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_PIN_OR_KEY_MISSING
BLE_HCI_MEMORY_CAPACITY_EXCEEDED = _pc_ble_driver_sd_api_v3.BLE_HCI_MEMORY_CAPACITY_EXCEEDED
BLE_HCI_CONNECTION_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_HCI_CONNECTION_TIMEOUT
BLE_HCI_STATUS_CODE_COMMAND_DISALLOWED = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_COMMAND_DISALLOWED
BLE_HCI_STATUS_CODE_INVALID_BTLE_COMMAND_PARAMETERS = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_INVALID_BTLE_COMMAND_PARAMETERS
BLE_HCI_REMOTE_USER_TERMINATED_CONNECTION = _pc_ble_driver_sd_api_v3.BLE_HCI_REMOTE_USER_TERMINATED_CONNECTION
BLE_HCI_REMOTE_DEV_TERMINATION_DUE_TO_LOW_RESOURCES = _pc_ble_driver_sd_api_v3.BLE_HCI_REMOTE_DEV_TERMINATION_DUE_TO_LOW_RESOURCES
BLE_HCI_REMOTE_DEV_TERMINATION_DUE_TO_POWER_OFF = _pc_ble_driver_sd_api_v3.BLE_HCI_REMOTE_DEV_TERMINATION_DUE_TO_POWER_OFF
BLE_HCI_LOCAL_HOST_TERMINATED_CONNECTION = _pc_ble_driver_sd_api_v3.BLE_HCI_LOCAL_HOST_TERMINATED_CONNECTION
BLE_HCI_UNSUPPORTED_REMOTE_FEATURE = _pc_ble_driver_sd_api_v3.BLE_HCI_UNSUPPORTED_REMOTE_FEATURE
BLE_HCI_STATUS_CODE_INVALID_LMP_PARAMETERS = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_INVALID_LMP_PARAMETERS
BLE_HCI_STATUS_CODE_UNSPECIFIED_ERROR = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_UNSPECIFIED_ERROR
BLE_HCI_STATUS_CODE_LMP_RESPONSE_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_LMP_RESPONSE_TIMEOUT
BLE_HCI_STATUS_CODE_LMP_PDU_NOT_ALLOWED = _pc_ble_driver_sd_api_v3.BLE_HCI_STATUS_CODE_LMP_PDU_NOT_ALLOWED
BLE_HCI_INSTANT_PASSED = _pc_ble_driver_sd_api_v3.BLE_HCI_INSTANT_PASSED
BLE_HCI_PAIRING_WITH_UNIT_KEY_UNSUPPORTED = _pc_ble_driver_sd_api_v3.BLE_HCI_PAIRING_WITH_UNIT_KEY_UNSUPPORTED
BLE_HCI_DIFFERENT_TRANSACTION_COLLISION = _pc_ble_driver_sd_api_v3.BLE_HCI_DIFFERENT_TRANSACTION_COLLISION
BLE_HCI_CONTROLLER_BUSY = _pc_ble_driver_sd_api_v3.BLE_HCI_CONTROLLER_BUSY
BLE_HCI_CONN_INTERVAL_UNACCEPTABLE = _pc_ble_driver_sd_api_v3.BLE_HCI_CONN_INTERVAL_UNACCEPTABLE
BLE_HCI_DIRECTED_ADVERTISER_TIMEOUT = _pc_ble_driver_sd_api_v3.BLE_HCI_DIRECTED_ADVERTISER_TIMEOUT
BLE_HCI_CONN_TERMINATED_DUE_TO_MIC_FAILURE = _pc_ble_driver_sd_api_v3.BLE_HCI_CONN_TERMINATED_DUE_TO_MIC_FAILURE
BLE_HCI_CONN_FAILED_TO_BE_ESTABLISHED = _pc_ble_driver_sd_api_v3.BLE_HCI_CONN_FAILED_TO_BE_ESTABLISHED
SD_BLE_L2CAP_CID_REGISTER = _pc_ble_driver_sd_api_v3.SD_BLE_L2CAP_CID_REGISTER
SD_BLE_L2CAP_CID_UNREGISTER = _pc_ble_driver_sd_api_v3.SD_BLE_L2CAP_CID_UNREGISTER
SD_BLE_L2CAP_TX = _pc_ble_driver_sd_api_v3.SD_BLE_L2CAP_TX
BLE_L2CAP_EVT_RX = _pc_ble_driver_sd_api_v3.BLE_L2CAP_EVT_RX
BLE_L2CAP_MTU_DEF = _pc_ble_driver_sd_api_v3.BLE_L2CAP_MTU_DEF
BLE_L2CAP_CID_INVALID = _pc_ble_driver_sd_api_v3.BLE_L2CAP_CID_INVALID
BLE_L2CAP_CID_DYN_BASE = _pc_ble_driver_sd_api_v3.BLE_L2CAP_CID_DYN_BASE
BLE_L2CAP_CID_DYN_MAX = _pc_ble_driver_sd_api_v3.BLE_L2CAP_CID_DYN_MAX
class ble_l2cap_header_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_l2cap_header_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_l2cap_header_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_len_set
    __swig_getmethods__["len"] = _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_len_get
    if _newclass:len = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_header_t_len_get, _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_len_set)
    __swig_setmethods__["cid"] = _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_cid_set
    __swig_getmethods__["cid"] = _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_cid_get
    if _newclass:cid = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_header_t_cid_get, _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_cid_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_l2cap_header_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_l2cap_header_t
    __del__ = lambda self : None;
ble_l2cap_header_t_swigregister = _pc_ble_driver_sd_api_v3.ble_l2cap_header_t_swigregister
ble_l2cap_header_t_swigregister(ble_l2cap_header_t)

class ble_l2cap_evt_rx_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_l2cap_evt_rx_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_l2cap_evt_rx_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["header"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_header_set
    __swig_getmethods__["header"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_header_get
    if _newclass:header = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_header_get, _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_header_set)
    __swig_setmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_data_set
    __swig_getmethods__["data"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_data_get
    if _newclass:data = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_data_get, _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_data_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_l2cap_evt_rx_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_l2cap_evt_rx_t
    __del__ = lambda self : None;
ble_l2cap_evt_rx_t_swigregister = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_rx_t_swigregister
ble_l2cap_evt_rx_t_swigregister(ble_l2cap_evt_rx_t)

class ble_l2cap_evt_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_l2cap_evt_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_l2cap_evt_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_conn_handle_set
    __swig_getmethods__["conn_handle"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_conn_handle_get
    if _newclass:conn_handle = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_conn_handle_get, _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_conn_handle_set)
    __swig_getmethods__["params"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_get
    if _newclass:params = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_get)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_l2cap_evt_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_l2cap_evt_t
    __del__ = lambda self : None;
ble_l2cap_evt_t_swigregister = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_swigregister
ble_l2cap_evt_t_swigregister(ble_l2cap_evt_t)

class ble_l2cap_evt_t_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_l2cap_evt_t_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_l2cap_evt_t_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["rx"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_rx_set
    __swig_getmethods__["rx"] = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_rx_get
    if _newclass:rx = _swig_property(_pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_rx_get, _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_rx_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_l2cap_evt_t_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_l2cap_evt_t_params
    __del__ = lambda self : None;
ble_l2cap_evt_t_params_swigregister = _pc_ble_driver_sd_api_v3.ble_l2cap_evt_t_params_swigregister
ble_l2cap_evt_t_params_swigregister(ble_l2cap_evt_t_params)

BLE_SVC_BASE = _pc_ble_driver_sd_api_v3.BLE_SVC_BASE
BLE_SVC_LAST = _pc_ble_driver_sd_api_v3.BLE_SVC_LAST
BLE_GAP_SVC_BASE = _pc_ble_driver_sd_api_v3.BLE_GAP_SVC_BASE
BLE_GAP_SVC_LAST = _pc_ble_driver_sd_api_v3.BLE_GAP_SVC_LAST
BLE_GATTC_SVC_BASE = _pc_ble_driver_sd_api_v3.BLE_GATTC_SVC_BASE
BLE_GATTC_SVC_LAST = _pc_ble_driver_sd_api_v3.BLE_GATTC_SVC_LAST
BLE_GATTS_SVC_BASE = _pc_ble_driver_sd_api_v3.BLE_GATTS_SVC_BASE
BLE_GATTS_SVC_LAST = _pc_ble_driver_sd_api_v3.BLE_GATTS_SVC_LAST
BLE_L2CAP_SVC_BASE = _pc_ble_driver_sd_api_v3.BLE_L2CAP_SVC_BASE
BLE_L2CAP_SVC_LAST = _pc_ble_driver_sd_api_v3.BLE_L2CAP_SVC_LAST
BLE_EVT_INVALID = _pc_ble_driver_sd_api_v3.BLE_EVT_INVALID
BLE_EVT_BASE = _pc_ble_driver_sd_api_v3.BLE_EVT_BASE
BLE_EVT_LAST = _pc_ble_driver_sd_api_v3.BLE_EVT_LAST
BLE_GAP_EVT_BASE = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_BASE
BLE_GAP_EVT_LAST = _pc_ble_driver_sd_api_v3.BLE_GAP_EVT_LAST
BLE_GATTC_EVT_BASE = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_BASE
BLE_GATTC_EVT_LAST = _pc_ble_driver_sd_api_v3.BLE_GATTC_EVT_LAST
BLE_GATTS_EVT_BASE = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_BASE
BLE_GATTS_EVT_LAST = _pc_ble_driver_sd_api_v3.BLE_GATTS_EVT_LAST
BLE_L2CAP_EVT_BASE = _pc_ble_driver_sd_api_v3.BLE_L2CAP_EVT_BASE
BLE_L2CAP_EVT_LAST = _pc_ble_driver_sd_api_v3.BLE_L2CAP_EVT_LAST
BLE_OPT_INVALID = _pc_ble_driver_sd_api_v3.BLE_OPT_INVALID
BLE_OPT_BASE = _pc_ble_driver_sd_api_v3.BLE_OPT_BASE
BLE_OPT_LAST = _pc_ble_driver_sd_api_v3.BLE_OPT_LAST
BLE_GAP_OPT_BASE = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_BASE
BLE_GAP_OPT_LAST = _pc_ble_driver_sd_api_v3.BLE_GAP_OPT_LAST
BLE_GATTC_OPT_BASE = _pc_ble_driver_sd_api_v3.BLE_GATTC_OPT_BASE
BLE_GATTC_OPT_LAST = _pc_ble_driver_sd_api_v3.BLE_GATTC_OPT_LAST
BLE_GATTS_OPT_BASE = _pc_ble_driver_sd_api_v3.BLE_GATTS_OPT_BASE
BLE_GATTS_OPT_LAST = _pc_ble_driver_sd_api_v3.BLE_GATTS_OPT_LAST
BLE_L2CAP_OPT_BASE = _pc_ble_driver_sd_api_v3.BLE_L2CAP_OPT_BASE
BLE_L2CAP_OPT_LAST = _pc_ble_driver_sd_api_v3.BLE_L2CAP_OPT_LAST
BLE_CONN_HANDLE_INVALID = _pc_ble_driver_sd_api_v3.BLE_CONN_HANDLE_INVALID
BLE_CONN_HANDLE_ALL = _pc_ble_driver_sd_api_v3.BLE_CONN_HANDLE_ALL
BLE_UUID_UNKNOWN = _pc_ble_driver_sd_api_v3.BLE_UUID_UNKNOWN
BLE_UUID_SERVICE_PRIMARY = _pc_ble_driver_sd_api_v3.BLE_UUID_SERVICE_PRIMARY
BLE_UUID_SERVICE_SECONDARY = _pc_ble_driver_sd_api_v3.BLE_UUID_SERVICE_SECONDARY
BLE_UUID_SERVICE_INCLUDE = _pc_ble_driver_sd_api_v3.BLE_UUID_SERVICE_INCLUDE
BLE_UUID_CHARACTERISTIC = _pc_ble_driver_sd_api_v3.BLE_UUID_CHARACTERISTIC
BLE_UUID_DESCRIPTOR_CHAR_EXT_PROP = _pc_ble_driver_sd_api_v3.BLE_UUID_DESCRIPTOR_CHAR_EXT_PROP
BLE_UUID_DESCRIPTOR_CHAR_USER_DESC = _pc_ble_driver_sd_api_v3.BLE_UUID_DESCRIPTOR_CHAR_USER_DESC
BLE_UUID_DESCRIPTOR_CLIENT_CHAR_CONFIG = _pc_ble_driver_sd_api_v3.BLE_UUID_DESCRIPTOR_CLIENT_CHAR_CONFIG
BLE_UUID_DESCRIPTOR_SERVER_CHAR_CONFIG = _pc_ble_driver_sd_api_v3.BLE_UUID_DESCRIPTOR_SERVER_CHAR_CONFIG
BLE_UUID_DESCRIPTOR_CHAR_PRESENTATION_FORMAT = _pc_ble_driver_sd_api_v3.BLE_UUID_DESCRIPTOR_CHAR_PRESENTATION_FORMAT
BLE_UUID_DESCRIPTOR_CHAR_AGGREGATE_FORMAT = _pc_ble_driver_sd_api_v3.BLE_UUID_DESCRIPTOR_CHAR_AGGREGATE_FORMAT
BLE_UUID_GATT = _pc_ble_driver_sd_api_v3.BLE_UUID_GATT
BLE_UUID_GATT_CHARACTERISTIC_SERVICE_CHANGED = _pc_ble_driver_sd_api_v3.BLE_UUID_GATT_CHARACTERISTIC_SERVICE_CHANGED
BLE_UUID_GAP = _pc_ble_driver_sd_api_v3.BLE_UUID_GAP
BLE_UUID_GAP_CHARACTERISTIC_DEVICE_NAME = _pc_ble_driver_sd_api_v3.BLE_UUID_GAP_CHARACTERISTIC_DEVICE_NAME
BLE_UUID_GAP_CHARACTERISTIC_APPEARANCE = _pc_ble_driver_sd_api_v3.BLE_UUID_GAP_CHARACTERISTIC_APPEARANCE
BLE_UUID_GAP_CHARACTERISTIC_RECONN_ADDR = _pc_ble_driver_sd_api_v3.BLE_UUID_GAP_CHARACTERISTIC_RECONN_ADDR
BLE_UUID_GAP_CHARACTERISTIC_PPCP = _pc_ble_driver_sd_api_v3.BLE_UUID_GAP_CHARACTERISTIC_PPCP
BLE_UUID_GAP_CHARACTERISTIC_CAR = _pc_ble_driver_sd_api_v3.BLE_UUID_GAP_CHARACTERISTIC_CAR
BLE_UUID_TYPE_UNKNOWN = _pc_ble_driver_sd_api_v3.BLE_UUID_TYPE_UNKNOWN
BLE_UUID_TYPE_BLE = _pc_ble_driver_sd_api_v3.BLE_UUID_TYPE_BLE
BLE_UUID_TYPE_VENDOR_BEGIN = _pc_ble_driver_sd_api_v3.BLE_UUID_TYPE_VENDOR_BEGIN
BLE_APPEARANCE_UNKNOWN = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_UNKNOWN
BLE_APPEARANCE_GENERIC_PHONE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_PHONE
BLE_APPEARANCE_GENERIC_COMPUTER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_COMPUTER
BLE_APPEARANCE_GENERIC_WATCH = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_WATCH
BLE_APPEARANCE_WATCH_SPORTS_WATCH = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_WATCH_SPORTS_WATCH
BLE_APPEARANCE_GENERIC_CLOCK = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_CLOCK
BLE_APPEARANCE_GENERIC_DISPLAY = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_DISPLAY
BLE_APPEARANCE_GENERIC_REMOTE_CONTROL = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_REMOTE_CONTROL
BLE_APPEARANCE_GENERIC_EYE_GLASSES = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_EYE_GLASSES
BLE_APPEARANCE_GENERIC_TAG = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_TAG
BLE_APPEARANCE_GENERIC_KEYRING = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_KEYRING
BLE_APPEARANCE_GENERIC_MEDIA_PLAYER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_MEDIA_PLAYER
BLE_APPEARANCE_GENERIC_BARCODE_SCANNER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_BARCODE_SCANNER
BLE_APPEARANCE_GENERIC_THERMOMETER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_THERMOMETER
BLE_APPEARANCE_THERMOMETER_EAR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_THERMOMETER_EAR
BLE_APPEARANCE_GENERIC_HEART_RATE_SENSOR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_HEART_RATE_SENSOR
BLE_APPEARANCE_HEART_RATE_SENSOR_HEART_RATE_BELT = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HEART_RATE_SENSOR_HEART_RATE_BELT
BLE_APPEARANCE_GENERIC_BLOOD_PRESSURE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_BLOOD_PRESSURE
BLE_APPEARANCE_BLOOD_PRESSURE_ARM = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_BLOOD_PRESSURE_ARM
BLE_APPEARANCE_BLOOD_PRESSURE_WRIST = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_BLOOD_PRESSURE_WRIST
BLE_APPEARANCE_GENERIC_HID = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_HID
BLE_APPEARANCE_HID_KEYBOARD = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_KEYBOARD
BLE_APPEARANCE_HID_MOUSE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_MOUSE
BLE_APPEARANCE_HID_JOYSTICK = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_JOYSTICK
BLE_APPEARANCE_HID_GAMEPAD = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_GAMEPAD
BLE_APPEARANCE_HID_DIGITIZERSUBTYPE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_DIGITIZERSUBTYPE
BLE_APPEARANCE_HID_CARD_READER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_CARD_READER
BLE_APPEARANCE_HID_DIGITAL_PEN = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_DIGITAL_PEN
BLE_APPEARANCE_HID_BARCODE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_HID_BARCODE
BLE_APPEARANCE_GENERIC_GLUCOSE_METER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_GLUCOSE_METER
BLE_APPEARANCE_GENERIC_RUNNING_WALKING_SENSOR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_RUNNING_WALKING_SENSOR
BLE_APPEARANCE_RUNNING_WALKING_SENSOR_IN_SHOE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_RUNNING_WALKING_SENSOR_IN_SHOE
BLE_APPEARANCE_RUNNING_WALKING_SENSOR_ON_SHOE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_RUNNING_WALKING_SENSOR_ON_SHOE
BLE_APPEARANCE_RUNNING_WALKING_SENSOR_ON_HIP = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_RUNNING_WALKING_SENSOR_ON_HIP
BLE_APPEARANCE_GENERIC_CYCLING = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_CYCLING
BLE_APPEARANCE_CYCLING_CYCLING_COMPUTER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_CYCLING_CYCLING_COMPUTER
BLE_APPEARANCE_CYCLING_SPEED_SENSOR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_CYCLING_SPEED_SENSOR
BLE_APPEARANCE_CYCLING_CADENCE_SENSOR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_CYCLING_CADENCE_SENSOR
BLE_APPEARANCE_CYCLING_POWER_SENSOR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_CYCLING_POWER_SENSOR
BLE_APPEARANCE_CYCLING_SPEED_CADENCE_SENSOR = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_CYCLING_SPEED_CADENCE_SENSOR
BLE_APPEARANCE_GENERIC_PULSE_OXIMETER = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_PULSE_OXIMETER
BLE_APPEARANCE_PULSE_OXIMETER_FINGERTIP = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_PULSE_OXIMETER_FINGERTIP
BLE_APPEARANCE_PULSE_OXIMETER_WRIST_WORN = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_PULSE_OXIMETER_WRIST_WORN
BLE_APPEARANCE_GENERIC_WEIGHT_SCALE = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_WEIGHT_SCALE
BLE_APPEARANCE_GENERIC_OUTDOOR_SPORTS_ACT = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_GENERIC_OUTDOOR_SPORTS_ACT
BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_DISP = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_DISP
BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_AND_NAV_DISP = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_AND_NAV_DISP
BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_POD = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_POD
BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_AND_NAV_POD = _pc_ble_driver_sd_api_v3.BLE_APPEARANCE_OUTDOOR_SPORTS_ACT_LOC_AND_NAV_POD
class ble_uuid128_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_uuid128_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_uuid128_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uuid128"] = _pc_ble_driver_sd_api_v3.ble_uuid128_t_uuid128_set
    __swig_getmethods__["uuid128"] = _pc_ble_driver_sd_api_v3.ble_uuid128_t_uuid128_get
    if _newclass:uuid128 = _swig_property(_pc_ble_driver_sd_api_v3.ble_uuid128_t_uuid128_get, _pc_ble_driver_sd_api_v3.ble_uuid128_t_uuid128_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_uuid128_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_uuid128_t
    __del__ = lambda self : None;
ble_uuid128_t_swigregister = _pc_ble_driver_sd_api_v3.ble_uuid128_t_swigregister
ble_uuid128_t_swigregister(ble_uuid128_t)

class ble_uuid_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_uuid_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_uuid_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_uuid_t_uuid_set
    __swig_getmethods__["uuid"] = _pc_ble_driver_sd_api_v3.ble_uuid_t_uuid_get
    if _newclass:uuid = _swig_property(_pc_ble_driver_sd_api_v3.ble_uuid_t_uuid_get, _pc_ble_driver_sd_api_v3.ble_uuid_t_uuid_set)
    __swig_setmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_uuid_t_type_set
    __swig_getmethods__["type"] = _pc_ble_driver_sd_api_v3.ble_uuid_t_type_get
    if _newclass:type = _swig_property(_pc_ble_driver_sd_api_v3.ble_uuid_t_type_get, _pc_ble_driver_sd_api_v3.ble_uuid_t_type_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_ble_uuid_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_uuid_t
    __del__ = lambda self : None;
ble_uuid_t_swigregister = _pc_ble_driver_sd_api_v3.ble_uuid_t_swigregister
ble_uuid_t_swigregister(ble_uuid_t)

NRF_ERROR_BASE_NUM = _pc_ble_driver_sd_api_v3.NRF_ERROR_BASE_NUM
NRF_ERROR_SDM_BASE_NUM = _pc_ble_driver_sd_api_v3.NRF_ERROR_SDM_BASE_NUM
NRF_ERROR_SOC_BASE_NUM = _pc_ble_driver_sd_api_v3.NRF_ERROR_SOC_BASE_NUM
NRF_ERROR_STK_BASE_NUM = _pc_ble_driver_sd_api_v3.NRF_ERROR_STK_BASE_NUM
NRF_SUCCESS = _pc_ble_driver_sd_api_v3.NRF_SUCCESS
NRF_ERROR_SVC_HANDLER_MISSING = _pc_ble_driver_sd_api_v3.NRF_ERROR_SVC_HANDLER_MISSING
NRF_ERROR_SOFTDEVICE_NOT_ENABLED = _pc_ble_driver_sd_api_v3.NRF_ERROR_SOFTDEVICE_NOT_ENABLED
NRF_ERROR_INTERNAL = _pc_ble_driver_sd_api_v3.NRF_ERROR_INTERNAL
NRF_ERROR_NO_MEM = _pc_ble_driver_sd_api_v3.NRF_ERROR_NO_MEM
NRF_ERROR_NOT_FOUND = _pc_ble_driver_sd_api_v3.NRF_ERROR_NOT_FOUND
NRF_ERROR_NOT_SUPPORTED = _pc_ble_driver_sd_api_v3.NRF_ERROR_NOT_SUPPORTED
NRF_ERROR_INVALID_PARAM = _pc_ble_driver_sd_api_v3.NRF_ERROR_INVALID_PARAM
NRF_ERROR_INVALID_STATE = _pc_ble_driver_sd_api_v3.NRF_ERROR_INVALID_STATE
NRF_ERROR_INVALID_LENGTH = _pc_ble_driver_sd_api_v3.NRF_ERROR_INVALID_LENGTH
NRF_ERROR_INVALID_FLAGS = _pc_ble_driver_sd_api_v3.NRF_ERROR_INVALID_FLAGS
NRF_ERROR_INVALID_DATA = _pc_ble_driver_sd_api_v3.NRF_ERROR_INVALID_DATA
NRF_ERROR_DATA_SIZE = _pc_ble_driver_sd_api_v3.NRF_ERROR_DATA_SIZE
NRF_ERROR_TIMEOUT = _pc_ble_driver_sd_api_v3.NRF_ERROR_TIMEOUT
NRF_ERROR_NULL = _pc_ble_driver_sd_api_v3.NRF_ERROR_NULL
NRF_ERROR_FORBIDDEN = _pc_ble_driver_sd_api_v3.NRF_ERROR_FORBIDDEN
NRF_ERROR_INVALID_ADDR = _pc_ble_driver_sd_api_v3.NRF_ERROR_INVALID_ADDR
NRF_ERROR_BUSY = _pc_ble_driver_sd_api_v3.NRF_ERROR_BUSY
NRF_ERROR_CONN_COUNT = _pc_ble_driver_sd_api_v3.NRF_ERROR_CONN_COUNT
NRF_ERROR_RESOURCES = _pc_ble_driver_sd_api_v3.NRF_ERROR_RESOURCES

def sd_rpc_serial_port_enum(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_enum(*args)
sd_rpc_serial_port_enum = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_enum

def sd_rpc_physical_layer_create_uart(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_physical_layer_create_uart(*args)
sd_rpc_physical_layer_create_uart = _pc_ble_driver_sd_api_v3.sd_rpc_physical_layer_create_uart

def sd_rpc_data_link_layer_create_bt_three_wire(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_data_link_layer_create_bt_three_wire(*args)
sd_rpc_data_link_layer_create_bt_three_wire = _pc_ble_driver_sd_api_v3.sd_rpc_data_link_layer_create_bt_three_wire

def sd_rpc_transport_layer_create(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_transport_layer_create(*args)
sd_rpc_transport_layer_create = _pc_ble_driver_sd_api_v3.sd_rpc_transport_layer_create

def sd_rpc_adapter_create(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_adapter_create(*args)
sd_rpc_adapter_create = _pc_ble_driver_sd_api_v3.sd_rpc_adapter_create

def sd_rpc_adapter_delete(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_adapter_delete(*args)
sd_rpc_adapter_delete = _pc_ble_driver_sd_api_v3.sd_rpc_adapter_delete

def sd_rpc_close(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_close(*args)
sd_rpc_close = _pc_ble_driver_sd_api_v3.sd_rpc_close

def sd_rpc_log_handler_severity_filter_set(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_log_handler_severity_filter_set(*args)
sd_rpc_log_handler_severity_filter_set = _pc_ble_driver_sd_api_v3.sd_rpc_log_handler_severity_filter_set
SD_RPC_MAXPATHLEN = _pc_ble_driver_sd_api_v3.SD_RPC_MAXPATHLEN
class sd_rpc_serial_port_desc_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sd_rpc_serial_port_desc_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sd_rpc_serial_port_desc_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["port"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_port_set
    __swig_getmethods__["port"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_port_get
    if _newclass:port = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_port_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_port_set)
    __swig_setmethods__["manufacturer"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_manufacturer_set
    __swig_getmethods__["manufacturer"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_manufacturer_get
    if _newclass:manufacturer = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_manufacturer_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_manufacturer_set)
    __swig_setmethods__["serialNumber"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_serialNumber_set
    __swig_getmethods__["serialNumber"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_serialNumber_get
    if _newclass:serialNumber = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_serialNumber_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_serialNumber_set)
    __swig_setmethods__["pnpId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_pnpId_set
    __swig_getmethods__["pnpId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_pnpId_get
    if _newclass:pnpId = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_pnpId_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_pnpId_set)
    __swig_setmethods__["locationId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_locationId_set
    __swig_getmethods__["locationId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_locationId_get
    if _newclass:locationId = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_locationId_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_locationId_set)
    __swig_setmethods__["vendorId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_vendorId_set
    __swig_getmethods__["vendorId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_vendorId_get
    if _newclass:vendorId = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_vendorId_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_vendorId_set)
    __swig_setmethods__["productId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_productId_set
    __swig_getmethods__["productId"] = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_productId_get
    if _newclass:productId = _swig_property(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_productId_get, _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_productId_set)
    def __init__(self): 
        this = _pc_ble_driver_sd_api_v3.new_sd_rpc_serial_port_desc_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_sd_rpc_serial_port_desc_t
    __del__ = lambda self : None;
sd_rpc_serial_port_desc_t_swigregister = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_t_swigregister
sd_rpc_serial_port_desc_t_swigregister(sd_rpc_serial_port_desc_t)

PKT_SEND_MAX_RETRIES_REACHED = _pc_ble_driver_sd_api_v3.PKT_SEND_MAX_RETRIES_REACHED
PKT_UNEXPECTED = _pc_ble_driver_sd_api_v3.PKT_UNEXPECTED
PKT_ENCODE_ERROR = _pc_ble_driver_sd_api_v3.PKT_ENCODE_ERROR
PKT_DECODE_ERROR = _pc_ble_driver_sd_api_v3.PKT_DECODE_ERROR
PKT_SEND_ERROR = _pc_ble_driver_sd_api_v3.PKT_SEND_ERROR
IO_RESOURCES_UNAVAILABLE = _pc_ble_driver_sd_api_v3.IO_RESOURCES_UNAVAILABLE
RESET_PERFORMED = _pc_ble_driver_sd_api_v3.RESET_PERFORMED
CONNECTION_ACTIVE = _pc_ble_driver_sd_api_v3.CONNECTION_ACTIVE
SD_RPC_LOG_TRACE = _pc_ble_driver_sd_api_v3.SD_RPC_LOG_TRACE
SD_RPC_LOG_DEBUG = _pc_ble_driver_sd_api_v3.SD_RPC_LOG_DEBUG
SD_RPC_LOG_INFO = _pc_ble_driver_sd_api_v3.SD_RPC_LOG_INFO
SD_RPC_LOG_WARNING = _pc_ble_driver_sd_api_v3.SD_RPC_LOG_WARNING
SD_RPC_LOG_ERROR = _pc_ble_driver_sd_api_v3.SD_RPC_LOG_ERROR
SD_RPC_LOG_FATAL = _pc_ble_driver_sd_api_v3.SD_RPC_LOG_FATAL
SD_RPC_FLOW_CONTROL_NONE = _pc_ble_driver_sd_api_v3.SD_RPC_FLOW_CONTROL_NONE
SD_RPC_FLOW_CONTROL_HARDWARE = _pc_ble_driver_sd_api_v3.SD_RPC_FLOW_CONTROL_HARDWARE
SD_RPC_PARITY_NONE = _pc_ble_driver_sd_api_v3.SD_RPC_PARITY_NONE
SD_RPC_PARITY_EVEN = _pc_ble_driver_sd_api_v3.SD_RPC_PARITY_EVEN

def new_uint8():
  return _pc_ble_driver_sd_api_v3.new_uint8()
new_uint8 = _pc_ble_driver_sd_api_v3.new_uint8

def copy_uint8(*args):
  return _pc_ble_driver_sd_api_v3.copy_uint8(*args)
copy_uint8 = _pc_ble_driver_sd_api_v3.copy_uint8

def delete_uint8(*args):
  return _pc_ble_driver_sd_api_v3.delete_uint8(*args)
delete_uint8 = _pc_ble_driver_sd_api_v3.delete_uint8

def uint8_assign(*args):
  return _pc_ble_driver_sd_api_v3.uint8_assign(*args)
uint8_assign = _pc_ble_driver_sd_api_v3.uint8_assign

def uint8_value(*args):
  return _pc_ble_driver_sd_api_v3.uint8_value(*args)
uint8_value = _pc_ble_driver_sd_api_v3.uint8_value

def new_uint16():
  return _pc_ble_driver_sd_api_v3.new_uint16()
new_uint16 = _pc_ble_driver_sd_api_v3.new_uint16

def copy_uint16(*args):
  return _pc_ble_driver_sd_api_v3.copy_uint16(*args)
copy_uint16 = _pc_ble_driver_sd_api_v3.copy_uint16

def delete_uint16(*args):
  return _pc_ble_driver_sd_api_v3.delete_uint16(*args)
delete_uint16 = _pc_ble_driver_sd_api_v3.delete_uint16

def uint16_assign(*args):
  return _pc_ble_driver_sd_api_v3.uint16_assign(*args)
uint16_assign = _pc_ble_driver_sd_api_v3.uint16_assign

def uint16_value(*args):
  return _pc_ble_driver_sd_api_v3.uint16_value(*args)
uint16_value = _pc_ble_driver_sd_api_v3.uint16_value

def new_uint32():
  return _pc_ble_driver_sd_api_v3.new_uint32()
new_uint32 = _pc_ble_driver_sd_api_v3.new_uint32

def copy_uint32(*args):
  return _pc_ble_driver_sd_api_v3.copy_uint32(*args)
copy_uint32 = _pc_ble_driver_sd_api_v3.copy_uint32

def delete_uint32(*args):
  return _pc_ble_driver_sd_api_v3.delete_uint32(*args)
delete_uint32 = _pc_ble_driver_sd_api_v3.delete_uint32

def uint32_assign(*args):
  return _pc_ble_driver_sd_api_v3.uint32_assign(*args)
uint32_assign = _pc_ble_driver_sd_api_v3.uint32_assign

def uint32_value(*args):
  return _pc_ble_driver_sd_api_v3.uint32_value(*args)
uint32_value = _pc_ble_driver_sd_api_v3.uint32_value
class char_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, char_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, char_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_char_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_char_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.char_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.char_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.char_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.char_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.char_array_frompointer)
char_array_swigregister = _pc_ble_driver_sd_api_v3.char_array_swigregister
char_array_swigregister(char_array)

def char_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.char_array_frompointer(*args)
char_array_frompointer = _pc_ble_driver_sd_api_v3.char_array_frompointer

class uint8_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uint8_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uint8_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_uint8_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_uint8_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.uint8_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.uint8_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.uint8_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.uint8_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.uint8_array_frompointer)
uint8_array_swigregister = _pc_ble_driver_sd_api_v3.uint8_array_swigregister
uint8_array_swigregister(uint8_array)

def uint8_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.uint8_array_frompointer(*args)
uint8_array_frompointer = _pc_ble_driver_sd_api_v3.uint8_array_frompointer

class uint16_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, uint16_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, uint16_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_uint16_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_uint16_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.uint16_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.uint16_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.uint16_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.uint16_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.uint16_array_frompointer)
uint16_array_swigregister = _pc_ble_driver_sd_api_v3.uint16_array_swigregister
uint16_array_swigregister(uint16_array)

def uint16_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.uint16_array_frompointer(*args)
uint16_array_frompointer = _pc_ble_driver_sd_api_v3.uint16_array_frompointer

class ble_gattc_service_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_service_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_service_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_service_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_service_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_service_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_service_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_service_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_service_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_service_array_frompointer)
ble_gattc_service_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_service_array_swigregister
ble_gattc_service_array_swigregister(ble_gattc_service_array)

def ble_gattc_service_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_service_array_frompointer(*args)
ble_gattc_service_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_service_array_frompointer

class ble_gattc_include_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_include_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_include_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_include_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_include_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_include_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_include_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_include_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_include_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_include_array_frompointer)
ble_gattc_include_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_include_array_swigregister
ble_gattc_include_array_swigregister(ble_gattc_include_array)

def ble_gattc_include_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_include_array_frompointer(*args)
ble_gattc_include_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_include_array_frompointer

class ble_gattc_char_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_char_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_char_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_char_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_char_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_char_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_char_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_char_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_char_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_char_array_frompointer)
ble_gattc_char_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_char_array_swigregister
ble_gattc_char_array_swigregister(ble_gattc_char_array)

def ble_gattc_char_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_char_array_frompointer(*args)
ble_gattc_char_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_char_array_frompointer

class ble_gattc_desc_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_desc_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_desc_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_desc_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_desc_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_desc_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_desc_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_desc_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_desc_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_desc_array_frompointer)
ble_gattc_desc_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_desc_array_swigregister
ble_gattc_desc_array_swigregister(ble_gattc_desc_array)

def ble_gattc_desc_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_desc_array_frompointer(*args)
ble_gattc_desc_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_desc_array_frompointer

class ble_gattc_attr_info16_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_attr_info16_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_attr_info16_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_attr_info16_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_attr_info16_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array_frompointer)
ble_gattc_attr_info16_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array_swigregister
ble_gattc_attr_info16_array_swigregister(ble_gattc_attr_info16_array)

def ble_gattc_attr_info16_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array_frompointer(*args)
ble_gattc_attr_info16_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info16_array_frompointer

class ble_gattc_attr_info128_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_attr_info128_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_attr_info128_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_attr_info128_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_attr_info128_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array_frompointer)
ble_gattc_attr_info128_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array_swigregister
ble_gattc_attr_info128_array_swigregister(ble_gattc_attr_info128_array)

def ble_gattc_attr_info128_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array_frompointer(*args)
ble_gattc_attr_info128_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_attr_info128_array_frompointer

class ble_gattc_handle_value_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ble_gattc_handle_value_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ble_gattc_handle_value_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_ble_gattc_handle_value_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_ble_gattc_handle_value_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array_frompointer)
ble_gattc_handle_value_array_swigregister = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array_swigregister
ble_gattc_handle_value_array_swigregister(ble_gattc_handle_value_array)

def ble_gattc_handle_value_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array_frompointer(*args)
ble_gattc_handle_value_array_frompointer = _pc_ble_driver_sd_api_v3.ble_gattc_handle_value_array_frompointer

class sd_rpc_serial_port_desc_array(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, sd_rpc_serial_port_desc_array, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, sd_rpc_serial_port_desc_array, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _pc_ble_driver_sd_api_v3.new_sd_rpc_serial_port_desc_array(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pc_ble_driver_sd_api_v3.delete_sd_rpc_serial_port_desc_array
    __del__ = lambda self : None;
    def __getitem__(self, *args): return _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array___getitem__(self, *args)
    def __setitem__(self, *args): return _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array___setitem__(self, *args)
    def cast(self): return _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array_frompointer
    if _newclass:frompointer = staticmethod(_pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array_frompointer)
sd_rpc_serial_port_desc_array_swigregister = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array_swigregister
sd_rpc_serial_port_desc_array_swigregister(sd_rpc_serial_port_desc_array)

def sd_rpc_serial_port_desc_array_frompointer(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array_frompointer(*args)
sd_rpc_serial_port_desc_array_frompointer = _pc_ble_driver_sd_api_v3.sd_rpc_serial_port_desc_array_frompointer


def sd_rpc_open(*args):
  return _pc_ble_driver_sd_api_v3.sd_rpc_open(*args)
sd_rpc_open = _pc_ble_driver_sd_api_v3.sd_rpc_open
# This file is compatible with both classic and new-style classes.


